
finalprojectcpe301.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800100  0000211a  000021ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000211a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000094  00800144  00800144  000021f2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000021f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002250  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00002290  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016ab  00000000  00000000  00002368  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000908  00000000  00000000  00003a13  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009d0  00000000  00000000  0000431b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002dc  00000000  00000000  00004cec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005eb  00000000  00000000  00004fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000707  00000000  00000000  000055b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00005cba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8c 00 	jmp	0x118	; 0x118 <__ctors_end>
       4:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
       8:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
       c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      10:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      14:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      18:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      1c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      20:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      24:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      28:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      2c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      30:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      34:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      38:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      3c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      40:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      44:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      48:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      4c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      50:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      54:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      58:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      5c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      60:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      64:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 07       	cpc	r19, r31
      96:	63 42       	sbci	r22, 0x23	; 35
      98:	36 b7       	in	r19, 0x36	; 54
      9a:	9b d8       	rcall	.-3786   	; 0xfffff1d2 <__eeprom_end+0xff7ef1d2>
      9c:	a7 1a       	sub	r10, r23
      9e:	39 68       	ori	r19, 0x89	; 137
      a0:	56 18       	sub	r5, r6
      a2:	ae ba       	out	0x1e, r10	; 30
      a4:	ab 55       	subi	r26, 0x5B	; 91
      a6:	8c 1d       	adc	r24, r12
      a8:	3c b7       	in	r19, 0x3c	; 60
      aa:	cc 57       	subi	r28, 0x7C	; 124
      ac:	63 bd       	out	0x23, r22	; 35
      ae:	6d ed       	ldi	r22, 0xDD	; 221
      b0:	fd 75       	andi	r31, 0x5D	; 93
      b2:	3e f6       	brtc	.-114    	; 0x42 <__SREG__+0x3>
      b4:	17 72       	andi	r17, 0x27	; 39
      b6:	31 bf       	out	0x31, r19	; 49
      b8:	00 00       	nop
      ba:	00 80       	ld	r0, Z
      bc:	3f 08       	sbc	r3, r15
      be:	00 00       	nop
      c0:	00 be       	out	0x30, r0	; 48
      c2:	92 24       	eor	r9, r2
      c4:	49 12       	cpse	r4, r25
      c6:	3e ab       	std	Y+54, r19	; 0x36
      c8:	aa aa       	std	Y+50, r10	; 0x32
      ca:	2a be       	out	0x3a, r2	; 58
      cc:	cd cc       	rjmp	.-1638   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
      ce:	cc 4c       	sbci	r28, 0xCC	; 204
      d0:	3e 00       	.word	0x003e	; ????
      d2:	00 00       	nop
      d4:	80 be       	out	0x30, r8	; 48
      d6:	ab aa       	std	Y+51, r10	; 0x33
      d8:	aa aa       	std	Y+50, r10	; 0x32
      da:	3e 00       	.word	0x003e	; ????
      dc:	00 00       	nop
      de:	00 bf       	out	0x30, r16	; 48
      e0:	00 00       	nop
      e2:	00 80       	ld	r0, Z
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
      e8:	00 00       	nop
      ea:	08 41       	sbci	r16, 0x18	; 24
      ec:	78 d3       	rcall	.+1776   	; 0x7de <ConvertUP+0x392>
      ee:	bb 43       	sbci	r27, 0x3B	; 59
      f0:	87 d1       	rcall	.+782    	; 0x400 <__LOCK_REGION_LENGTH__>
      f2:	13 3d       	cpi	r17, 0xD3	; 211
      f4:	19 0e       	add	r1, r25
      f6:	3c c3       	rjmp	.+1656   	; 0x770 <ConvertUP+0x324>
      f8:	bd 42       	sbci	r27, 0x2D	; 45
      fa:	82 ad       	ldd	r24, Z+58	; 0x3a
      fc:	2b 3e       	cpi	r18, 0xEB	; 235
      fe:	68 ec       	ldi	r22, 0xC8	; 200
     100:	82 76       	andi	r24, 0x62	; 98
     102:	be d9       	rcall	.-3204   	; 0xfffff480 <__eeprom_end+0xff7ef480>
     104:	8f e1       	ldi	r24, 0x1F	; 31
     106:	a9 3e       	cpi	r26, 0xE9	; 233
     108:	4c 80       	ldd	r4, Y+4	; 0x04
     10a:	ef ff       	.word	0xffef	; ????
     10c:	be 01       	movw	r22, r28
     10e:	c4 ff       	sbrs	r28, 4
     110:	7f 3f       	cpi	r23, 0xFF	; 255
     112:	00 00       	nop
     114:	00 00       	nop
	...

00000118 <__ctors_end>:
     118:	11 24       	eor	r1, r1
     11a:	1f be       	out	0x3f, r1	; 63
     11c:	cf ef       	ldi	r28, 0xFF	; 255
     11e:	d8 e0       	ldi	r29, 0x08	; 8
     120:	de bf       	out	0x3e, r29	; 62
     122:	cd bf       	out	0x3d, r28	; 61

00000124 <__do_copy_data>:
     124:	11 e0       	ldi	r17, 0x01	; 1
     126:	a0 e0       	ldi	r26, 0x00	; 0
     128:	b1 e0       	ldi	r27, 0x01	; 1
     12a:	ea e1       	ldi	r30, 0x1A	; 26
     12c:	f1 e2       	ldi	r31, 0x21	; 33
     12e:	02 c0       	rjmp	.+4      	; 0x134 <__do_copy_data+0x10>
     130:	05 90       	lpm	r0, Z+
     132:	0d 92       	st	X+, r0
     134:	a4 34       	cpi	r26, 0x44	; 68
     136:	b1 07       	cpc	r27, r17
     138:	d9 f7       	brne	.-10     	; 0x130 <__do_copy_data+0xc>

0000013a <__do_clear_bss>:
     13a:	21 e0       	ldi	r18, 0x01	; 1
     13c:	a4 e4       	ldi	r26, 0x44	; 68
     13e:	b1 e0       	ldi	r27, 0x01	; 1
     140:	01 c0       	rjmp	.+2      	; 0x144 <.do_clear_bss_start>

00000142 <.do_clear_bss_loop>:
     142:	1d 92       	st	X+, r1

00000144 <.do_clear_bss_start>:
     144:	a8 3d       	cpi	r26, 0xD8	; 216
     146:	b2 07       	cpc	r27, r18
     148:	e1 f7       	brne	.-8      	; 0x142 <.do_clear_bss_loop>
     14a:	0e 94 b0 08 	call	0x1160	; 0x1160 <main>
     14e:	0c 94 8b 10 	jmp	0x2116	; 0x2116 <_exit>

00000152 <__bad_interrupt>:
     152:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000156 <USART0SendByte>:
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     156:	cf 93       	push	r28
     158:	c8 2f       	mov	r28, r24
     15a:	8a 30       	cpi	r24, 0x0A	; 10
     15c:	29 f4       	brne	.+10     	; 0x168 <USART0SendByte+0x12>
     15e:	60 e0       	ldi	r22, 0x00	; 0
     160:	70 e0       	ldi	r23, 0x00	; 0
     162:	8d e0       	ldi	r24, 0x0D	; 13
     164:	0e 94 ab 00 	call	0x156	; 0x156 <USART0SendByte>
     168:	e0 ec       	ldi	r30, 0xC0	; 192
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	80 81       	ld	r24, Z
     16e:	85 ff       	sbrs	r24, 5
     170:	fd cf       	rjmp	.-6      	; 0x16c <USART0SendByte+0x16>
     172:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     176:	80 e0       	ldi	r24, 0x00	; 0
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	cf 91       	pop	r28
     17c:	08 95       	ret

0000017e <USART0ReceiveByte>:
     17e:	cf 93       	push	r28
     180:	bc 01       	movw	r22, r24
     182:	e0 ec       	ldi	r30, 0xC0	; 192
     184:	f0 e0       	ldi	r31, 0x00	; 0
     186:	90 81       	ld	r25, Z
     188:	99 23       	and	r25, r25
     18a:	ec f7       	brge	.-6      	; 0x186 <USART0ReceiveByte+0x8>
     18c:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     190:	8c 2f       	mov	r24, r28
     192:	0e 94 ab 00 	call	0x156	; 0x156 <USART0SendByte>
     196:	8c 2f       	mov	r24, r28
     198:	90 e0       	ldi	r25, 0x00	; 0
     19a:	cf 91       	pop	r28
     19c:	08 95       	ret

0000019e <i2c_write>:
}
//*******************************************************
void i2c_write(unsigned char data)
{
	TWDR = data;
     19e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWINT)|(1<<TWEN);
     1a2:	84 e8       	ldi	r24, 0x84	; 132
     1a4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));
     1a8:	ec eb       	ldi	r30, 0xBC	; 188
     1aa:	f0 e0       	ldi	r31, 0x00	; 0
     1ac:	80 81       	ld	r24, Z
     1ae:	88 23       	and	r24, r24
     1b0:	ec f7       	brge	.-6      	; 0x1ac <i2c_write+0xe>
}
     1b2:	08 95       	ret

000001b4 <i2c_start>:
//*********************************************************
void i2c_start(void)
{
	TWCR = (1<< TWINT) | (1<<TWSTA) | (1<< TWEN);
     1b4:	84 ea       	ldi	r24, 0xA4	; 164
     1b6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while (!(TWCR & (1<<TWINT)));
     1ba:	ec eb       	ldi	r30, 0xBC	; 188
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	80 81       	ld	r24, Z
     1c0:	88 23       	and	r24, r24
     1c2:	ec f7       	brge	.-6      	; 0x1be <i2c_start+0xa>
}
     1c4:	08 95       	ret

000001c6 <i2c_init>:
//***********************************************************
void i2c_init(void)
{
	TWSR = 0x00; //set prescaler bits to 0
     1c6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWBR = 0x0C; //0x48; //SCL freq. is 100k for XTAL = 16M
     1ca:	8c e0       	ldi	r24, 0x0C	; 12
     1cc:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	TWCR = 0x04; //enable TWI module
     1d0:	84 e0       	ldi	r24, 0x04	; 4
     1d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     1d6:	08 95       	ret

000001d8 <i2c_ReadACK>:
}
//***********************************************************
uint8_t i2c_ReadACK(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
     1d8:	84 ec       	ldi	r24, 0xC4	; 196
     1da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ((TWCR & (1<<TWINT)) == 0); // Wait until acknowledment is received
     1de:	ec eb       	ldi	r30, 0xBC	; 188
     1e0:	f0 e0       	ldi	r31, 0x00	; 0
     1e2:	80 81       	ld	r24, Z
     1e4:	88 23       	and	r24, r24
     1e6:	ec f7       	brge	.-6      	; 0x1e2 <i2c_ReadACK+0xa>
	return TWDR;
     1e8:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}
     1ec:	08 95       	ret

000001ee <i2c_ReadNACK>:
//read byte with NACK
uint8_t i2c_ReadNACK(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN);
     1ee:	84 e8       	ldi	r24, 0x84	; 132
     1f0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ((TWCR & (1<<TWINT)) == 0); 
     1f4:	ec eb       	ldi	r30, 0xBC	; 188
     1f6:	f0 e0       	ldi	r31, 0x00	; 0
     1f8:	80 81       	ld	r24, Z
     1fa:	88 23       	and	r24, r24
     1fc:	ec f7       	brge	.-6      	; 0x1f8 <i2c_ReadNACK+0xa>
	return TWDR;
     1fe:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}
     202:	08 95       	ret

00000204 <i2c_CompassSetUp>:
//***********************************************************

// ---------------- Compass Functions -------------------------------
void i2c_CompassSetUp(void)
{
     204:	1f 93       	push	r17
     206:	cf 93       	push	r28
     208:	df 93       	push	r29
	i2c_start();
     20a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0x3C);	// Address + Write bit of compass
     20e:	8c e3       	ldi	r24, 0x3C	; 60
     210:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x00);	// Address of configuration register A
     214:	80 e0       	ldi	r24, 0x00	; 0
     216:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x70);	// 15Hz rate with 8 Samples
     21a:	80 e7       	ldi	r24, 0x70	; 112
     21c:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     220:	cc eb       	ldi	r28, 0xBC	; 188
     222:	d0 e0       	ldi	r29, 0x00	; 0
     224:	14 e9       	ldi	r17, 0x94	; 148
     226:	18 83       	st	Y, r17
	i2c_start();
	i2c_write(0x3C);	// Address + Write bit of compass
	i2c_write(0x00);	// Address of configuration register A
	i2c_write(0x70);	// 15Hz rate with 8 Samples
	i2c_stop();
	i2c_start();
     228:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0x3C);	// Address + Write bit of compass
     22c:	8c e3       	ldi	r24, 0x3C	; 60
     22e:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x01);	// Address of configuration register B
     232:	81 e0       	ldi	r24, 0x01	; 1
     234:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0xA0);	// Gain = 5
     238:	80 ea       	ldi	r24, 0xA0	; 160
     23a:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     23e:	18 83       	st	Y, r17
	i2c_write(0x3C);	// Address + Write bit of compass
	i2c_write(0x01);	// Address of configuration register B
	i2c_write(0xA0);	// Gain = 5
	i2c_stop();

}
     240:	df 91       	pop	r29
     242:	cf 91       	pop	r28
     244:	1f 91       	pop	r17
     246:	08 95       	ret

00000248 <i2c_ReadCompass>:

void i2c_ReadCompass(void)
{
     248:	1f 93       	push	r17
     24a:	cf 93       	push	r28
     24c:	df 93       	push	r29
	// Set up Single Measurement Mode
	i2c_start();
     24e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0x3C);	// Address + Write bit of compass
     252:	8c e3       	ldi	r24, 0x3C	; 60
     254:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x02);	// Address of configuration register B
     258:	82 e0       	ldi	r24, 0x02	; 2
     25a:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x01);	// Gain = 5
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     264:	cc eb       	ldi	r28, 0xBC	; 188
     266:	d0 e0       	ldi	r29, 0x00	; 0
     268:	14 e9       	ldi	r17, 0x94	; 148
     26a:	18 83       	st	Y, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     26c:	8f e3       	ldi	r24, 0x3F	; 63
     26e:	9c e9       	ldi	r25, 0x9C	; 156
     270:	01 97       	sbiw	r24, 0x01	; 1
     272:	f1 f7       	brne	.-4      	; 0x270 <i2c_ReadCompass+0x28>
     274:	00 c0       	rjmp	.+0      	; 0x276 <i2c_ReadCompass+0x2e>
     276:	00 00       	nop
	i2c_write(0x01);	// Gain = 5
	i2c_stop();

	_delay_ms(10);		// Delay for at least 6 ms

	i2c_start();
     278:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0x3D);	// Address + Read bit
     27c:	8d e3       	ldi	r24, 0x3D	; 61
     27e:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	// Read the values
	// Address pointer automatically increments after
	// every read
	Xval = i2c_ReadACK() << 8;
     282:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     286:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <Xval>
     28a:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <Xval+0x1>
	Xval |= i2c_ReadACK();
     28e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     292:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <Xval>
     296:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <Xval+0x1>
     29a:	28 2b       	or	r18, r24
     29c:	30 93 59 01 	sts	0x0159, r19	; 0x800159 <Xval+0x1>
     2a0:	20 93 58 01 	sts	0x0158, r18	; 0x800158 <Xval>
	Zval = i2c_ReadACK() << 8;
     2a4:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     2a8:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <Zval>
     2ac:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <Zval+0x1>
	Zval |= i2c_ReadACK();
     2b0:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     2b4:	20 91 54 01 	lds	r18, 0x0154	; 0x800154 <Zval>
     2b8:	30 91 55 01 	lds	r19, 0x0155	; 0x800155 <Zval+0x1>
     2bc:	28 2b       	or	r18, r24
     2be:	30 93 55 01 	sts	0x0155, r19	; 0x800155 <Zval+0x1>
     2c2:	20 93 54 01 	sts	0x0154, r18	; 0x800154 <Zval>
	Yval = i2c_ReadACK() << 8;
     2c6:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     2ca:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <Yval>
     2ce:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <Yval+0x1>
	Yval |= i2c_ReadNACK();
     2d2:	0e 94 f7 00 	call	0x1ee	; 0x1ee <i2c_ReadNACK>
     2d6:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <Yval>
     2da:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <Yval+0x1>
     2de:	28 2b       	or	r18, r24
     2e0:	30 93 57 01 	sts	0x0157, r19	; 0x800157 <Yval+0x1>
     2e4:	20 93 56 01 	sts	0x0156, r18	; 0x800156 <Yval>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     2e8:	18 83       	st	Y, r17
	Zval = i2c_ReadACK() << 8;
	Zval |= i2c_ReadACK();
	Yval = i2c_ReadACK() << 8;
	Yval |= i2c_ReadNACK();
	i2c_stop();
}
     2ea:	df 91       	pop	r29
     2ec:	cf 91       	pop	r28
     2ee:	1f 91       	pop	r17
     2f0:	08 95       	ret

000002f2 <USART0init>:
}

void USART0init(void)
{
	/*Set baud rate */
	UBRR0L = MYUBRR;
     2f2:	87 e6       	ldi	r24, 0x67	; 103
     2f4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B |= (1 << TXEN0);				// Enable transmitter
     2f8:	e1 ec       	ldi	r30, 0xC1	; 193
     2fa:	f0 e0       	ldi	r31, 0x00	; 0
     2fc:	80 81       	ld	r24, Z
     2fe:	88 60       	ori	r24, 0x08	; 8
     300:	80 83       	st	Z, r24
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00); // Set frame: 8-bit data
     302:	e2 ec       	ldi	r30, 0xC2	; 194
     304:	f0 e0       	ldi	r31, 0x00	; 0
     306:	80 81       	ld	r24, Z
     308:	86 60       	ori	r24, 0x06	; 6
     30a:	80 83       	st	Z, r24
     30c:	08 95       	ret

0000030e <delay>:
}

// Function delays for 1 second
void delay(){
     30e:	84 ef       	ldi	r24, 0xF4	; 244
     310:	91 e0       	ldi	r25, 0x01	; 1
     312:	ef e3       	ldi	r30, 0x3F	; 63
     314:	ff e1       	ldi	r31, 0x1F	; 31
     316:	31 97       	sbiw	r30, 0x01	; 1
     318:	f1 f7       	brne	.-4      	; 0x316 <delay+0x8>
     31a:	00 c0       	rjmp	.+0      	; 0x31c <delay+0xe>
     31c:	00 00       	nop
     31e:	01 97       	sbiw	r24, 0x01	; 1
	for(int i = 500; i > 0; i--)
     320:	c1 f7       	brne	.-16     	; 0x312 <delay+0x4>
	_delay_ms(2);
}
     322:	08 95       	ret

00000324 <i2c_ReadAccel>:

void i2c_ReadAccel(void)
{
////// X /////////
	i2c_start();
     324:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA6); // Address to write to Accelo
     328:	86 ea       	ldi	r24, 0xA6	; 166
     32a:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x33); // X msb Address
     32e:	83 e3       	ldi	r24, 0x33	; 51
     330:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_start();
     334:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA7); // Address to read from Accelo
     338:	87 ea       	ldi	r24, 0xA7	; 167
     33a:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	X_accel_Raw = i2c_ReadACK() << 8;
     33e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     342:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <X_accel_Raw>
     346:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <X_accel_Raw+0x1>

	i2c_start();
     34a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA6); // Address to write to Accelo
     34e:	86 ea       	ldi	r24, 0xA6	; 166
     350:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x32); // X lsb Address
     354:	82 e3       	ldi	r24, 0x32	; 50
     356:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_start();
     35a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA7); // Address to read from Accelo
     35e:	87 ea       	ldi	r24, 0xA7	; 167
     360:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	X_accel_Raw |= i2c_ReadACK();
     364:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     368:	20 91 7e 01 	lds	r18, 0x017E	; 0x80017e <X_accel_Raw>
     36c:	30 91 7f 01 	lds	r19, 0x017F	; 0x80017f <X_accel_Raw+0x1>
     370:	28 2b       	or	r18, r24
     372:	30 93 7f 01 	sts	0x017F, r19	; 0x80017f <X_accel_Raw+0x1>
     376:	20 93 7e 01 	sts	0x017E, r18	; 0x80017e <X_accel_Raw>
////// Y ////////
	i2c_start();
     37a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA6); // Address to write to Accelo
     37e:	86 ea       	ldi	r24, 0xA6	; 166
     380:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x35); // Y msb Address
     384:	85 e3       	ldi	r24, 0x35	; 53
     386:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_start();
     38a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA7); // Address to read from Accelo
     38e:	87 ea       	ldi	r24, 0xA7	; 167
     390:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	Y_accel_Raw = i2c_ReadACK() << 8;
     394:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     398:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <Y_accel_Raw>
     39c:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <Y_accel_Raw+0x1>

	i2c_start();
     3a0:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA6); // Address to write to Accelo
     3a4:	86 ea       	ldi	r24, 0xA6	; 166
     3a6:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x34); // Y lsb Address
     3aa:	84 e3       	ldi	r24, 0x34	; 52
     3ac:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_start();
     3b0:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA7); // Address to read from Accelo
     3b4:	87 ea       	ldi	r24, 0xA7	; 167
     3b6:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	Y_accel_Raw |= i2c_ReadACK();
     3ba:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     3be:	20 91 68 01 	lds	r18, 0x0168	; 0x800168 <Y_accel_Raw>
     3c2:	30 91 69 01 	lds	r19, 0x0169	; 0x800169 <Y_accel_Raw+0x1>
     3c6:	28 2b       	or	r18, r24
     3c8:	30 93 69 01 	sts	0x0169, r19	; 0x800169 <Y_accel_Raw+0x1>
     3cc:	20 93 68 01 	sts	0x0168, r18	; 0x800168 <Y_accel_Raw>

////// Z ////////
	i2c_start();
     3d0:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA6); // Address to write to Accelo
     3d4:	86 ea       	ldi	r24, 0xA6	; 166
     3d6:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x37); // Y msb Address
     3da:	87 e3       	ldi	r24, 0x37	; 55
     3dc:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_start();
     3e0:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA7); // Address to read from Accelo
     3e4:	87 ea       	ldi	r24, 0xA7	; 167
     3e6:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	Z_accel_Raw = i2c_ReadACK() << 8;
     3ea:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     3ee:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <Z_accel_Raw>
     3f2:	80 93 89 01 	sts	0x0189, r24	; 0x800189 <Z_accel_Raw+0x1>

	i2c_start();
     3f6:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA6); // Address to write to Accelo
     3fa:	86 ea       	ldi	r24, 0xA6	; 166
     3fc:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x36); // Y lsb Address
     400:	86 e3       	ldi	r24, 0x36	; 54
     402:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_start();
     406:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA7); // Address to read from Accelo
     40a:	87 ea       	ldi	r24, 0xA7	; 167
     40c:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	Z_accel_Raw |= i2c_ReadNACK();
     410:	0e 94 f7 00 	call	0x1ee	; 0x1ee <i2c_ReadNACK>
     414:	20 91 88 01 	lds	r18, 0x0188	; 0x800188 <Z_accel_Raw>
     418:	30 91 89 01 	lds	r19, 0x0189	; 0x800189 <Z_accel_Raw+0x1>
     41c:	28 2b       	or	r18, r24
     41e:	30 93 89 01 	sts	0x0189, r19	; 0x800189 <Z_accel_Raw+0x1>
     422:	20 93 88 01 	sts	0x0188, r18	; 0x800188 <Z_accel_Raw>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     426:	84 e9       	ldi	r24, 0x94	; 148
     428:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     42c:	08 95       	ret

0000042e <i2c_AccelSetUp>:
	i2c_stop();
}

void i2c_AccelSetUp(void)
{	
	i2c_start();
     42e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xA6);
     432:	86 ea       	ldi	r24, 0xA6	; 166
     434:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x2D);	// Power Ctl register
     438:	8d e2       	ldi	r24, 0x2D	; 45
     43a:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x08);	// Enable measurement mode
     43e:	88 e0       	ldi	r24, 0x08	; 8
     440:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     444:	84 e9       	ldi	r24, 0x94	; 148
     446:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     44a:	08 95       	ret

0000044c <ConvertUP>:

// This function converts the raw pressure read from the barometer to
// the actual pressure value.  These conversions were obtained from
// the datasheet
void ConvertUP(void)
{	
     44c:	4f 92       	push	r4
     44e:	5f 92       	push	r5
     450:	6f 92       	push	r6
     452:	7f 92       	push	r7
     454:	8f 92       	push	r8
     456:	9f 92       	push	r9
     458:	af 92       	push	r10
     45a:	bf 92       	push	r11
     45c:	cf 92       	push	r12
     45e:	df 92       	push	r13
     460:	ef 92       	push	r14
     462:	ff 92       	push	r15
     464:	0f 93       	push	r16
     466:	1f 93       	push	r17
	B6 = B5 - 4000;
     468:	80 90 76 01 	lds	r8, 0x0176	; 0x800176 <B5>
     46c:	90 90 77 01 	lds	r9, 0x0177	; 0x800177 <B5+0x1>
     470:	a0 90 78 01 	lds	r10, 0x0178	; 0x800178 <B5+0x2>
     474:	b0 90 79 01 	lds	r11, 0x0179	; 0x800179 <B5+0x3>
     478:	20 ea       	ldi	r18, 0xA0	; 160
     47a:	82 1a       	sub	r8, r18
     47c:	2f e0       	ldi	r18, 0x0F	; 15
     47e:	92 0a       	sbc	r9, r18
     480:	a1 08       	sbc	r10, r1
     482:	b1 08       	sbc	r11, r1
     484:	80 92 6a 01 	sts	0x016A, r8	; 0x80016a <B6>
     488:	90 92 6b 01 	sts	0x016B, r9	; 0x80016b <B6+0x1>
     48c:	a0 92 6c 01 	sts	0x016C, r10	; 0x80016c <B6+0x2>
     490:	b0 92 6d 01 	sts	0x016D, r11	; 0x80016d <B6+0x3>
	X1 = B6*B6;
	X1 = X1 / 4096;
     494:	a5 01       	movw	r20, r10
     496:	94 01       	movw	r18, r8
     498:	c5 01       	movw	r24, r10
     49a:	b4 01       	movw	r22, r8
     49c:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <__mulsi3>
     4a0:	2b 01       	movw	r4, r22
     4a2:	3c 01       	movw	r6, r24
     4a4:	99 23       	and	r25, r25
     4a6:	34 f4       	brge	.+12     	; 0x4b4 <ConvertUP+0x68>
     4a8:	2f ef       	ldi	r18, 0xFF	; 255
     4aa:	42 0e       	add	r4, r18
     4ac:	2f e0       	ldi	r18, 0x0F	; 15
     4ae:	52 1e       	adc	r5, r18
     4b0:	61 1c       	adc	r6, r1
     4b2:	71 1c       	adc	r7, r1
     4b4:	03 2e       	mov	r0, r19
     4b6:	3c e0       	ldi	r19, 0x0C	; 12
     4b8:	75 94       	asr	r7
     4ba:	67 94       	ror	r6
     4bc:	57 94       	ror	r5
     4be:	47 94       	ror	r4
     4c0:	3a 95       	dec	r19
     4c2:	d1 f7       	brne	.-12     	; 0x4b8 <ConvertUP+0x6c>
     4c4:	30 2d       	mov	r19, r0
	X2 = AC2 * B6;
	X2 = X2 / 2048;
	X3 = X1 + X2;
	B3 = AC1 * 4;
	B3 = B3 + X3;
	B3 = B3 << oss;
     4c6:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <oss>
	B3 = B3 + 2;
	B3 = B3 / 4;
     4ca:	60 91 9e 01 	lds	r22, 0x019E	; 0x80019e <B2>
     4ce:	70 91 9f 01 	lds	r23, 0x019F	; 0x80019f <B2+0x1>
     4d2:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <B2+0x2>
     4d6:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <B2+0x3>
     4da:	a3 01       	movw	r20, r6
     4dc:	92 01       	movw	r18, r4
     4de:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <__mulsi3>
     4e2:	8b 01       	movw	r16, r22
     4e4:	9c 01       	movw	r18, r24
     4e6:	99 23       	and	r25, r25
     4e8:	24 f4       	brge	.+8      	; 0x4f2 <ConvertUP+0xa6>
     4ea:	01 50       	subi	r16, 0x01	; 1
     4ec:	18 4f       	sbci	r17, 0xF8	; 248
     4ee:	2f 4f       	sbci	r18, 0xFF	; 255
     4f0:	3f 4f       	sbci	r19, 0xFF	; 255
     4f2:	68 01       	movw	r12, r16
     4f4:	79 01       	movw	r14, r18
     4f6:	0b 2e       	mov	r0, r27
     4f8:	bb e0       	ldi	r27, 0x0B	; 11
     4fa:	f5 94       	asr	r15
     4fc:	e7 94       	ror	r14
     4fe:	d7 94       	ror	r13
     500:	c7 94       	ror	r12
     502:	ba 95       	dec	r27
     504:	d1 f7       	brne	.-12     	; 0x4fa <ConvertUP+0xae>
     506:	b0 2d       	mov	r27, r0
     508:	60 91 96 01 	lds	r22, 0x0196	; 0x800196 <AC2>
     50c:	70 91 97 01 	lds	r23, 0x0197	; 0x800197 <AC2+0x1>
     510:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <AC2+0x2>
     514:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <AC2+0x3>
     518:	a5 01       	movw	r20, r10
     51a:	94 01       	movw	r18, r8
     51c:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <__mulsi3>
     520:	8b 01       	movw	r16, r22
     522:	9c 01       	movw	r18, r24
     524:	99 23       	and	r25, r25
     526:	24 f4       	brge	.+8      	; 0x530 <ConvertUP+0xe4>
     528:	01 50       	subi	r16, 0x01	; 1
     52a:	18 4f       	sbci	r17, 0xF8	; 248
     52c:	2f 4f       	sbci	r18, 0xFF	; 255
     52e:	3f 4f       	sbci	r19, 0xFF	; 255
     530:	d9 01       	movw	r26, r18
     532:	c8 01       	movw	r24, r16
     534:	07 2e       	mov	r0, r23
     536:	7b e0       	ldi	r23, 0x0B	; 11
     538:	b5 95       	asr	r27
     53a:	a7 95       	ror	r26
     53c:	97 95       	ror	r25
     53e:	87 95       	ror	r24
     540:	7a 95       	dec	r23
     542:	d1 f7       	brne	.-12     	; 0x538 <ConvertUP+0xec>
     544:	70 2d       	mov	r23, r0
     546:	8c 0d       	add	r24, r12
     548:	9d 1d       	adc	r25, r13
     54a:	ae 1d       	adc	r26, r14
     54c:	bf 1d       	adc	r27, r15
     54e:	40 91 60 01 	lds	r20, 0x0160	; 0x800160 <AC1>
     552:	50 91 61 01 	lds	r21, 0x0161	; 0x800161 <AC1+0x1>
     556:	60 91 62 01 	lds	r22, 0x0162	; 0x800162 <AC1+0x2>
     55a:	70 91 63 01 	lds	r23, 0x0163	; 0x800163 <AC1+0x3>
     55e:	44 0f       	add	r20, r20
     560:	55 1f       	adc	r21, r21
     562:	66 1f       	adc	r22, r22
     564:	77 1f       	adc	r23, r23
     566:	44 0f       	add	r20, r20
     568:	55 1f       	adc	r21, r21
     56a:	66 1f       	adc	r22, r22
     56c:	77 1f       	adc	r23, r23
     56e:	84 0f       	add	r24, r20
     570:	95 1f       	adc	r25, r21
     572:	a6 1f       	adc	r26, r22
     574:	b7 1f       	adc	r27, r23
     576:	0e 2e       	mov	r0, r30
     578:	04 c0       	rjmp	.+8      	; 0x582 <ConvertUP+0x136>
     57a:	88 0f       	add	r24, r24
     57c:	99 1f       	adc	r25, r25
     57e:	aa 1f       	adc	r26, r26
     580:	bb 1f       	adc	r27, r27
     582:	0a 94       	dec	r0
     584:	d2 f7       	brpl	.-12     	; 0x57a <ConvertUP+0x12e>
     586:	02 96       	adiw	r24, 0x02	; 2
     588:	a1 1d       	adc	r26, r1
     58a:	b1 1d       	adc	r27, r1
     58c:	6c 01       	movw	r12, r24
     58e:	7d 01       	movw	r14, r26
     590:	bb 23       	and	r27, r27
     592:	2c f4       	brge	.+10     	; 0x59e <ConvertUP+0x152>
     594:	23 e0       	ldi	r18, 0x03	; 3
     596:	c2 0e       	add	r12, r18
     598:	d1 1c       	adc	r13, r1
     59a:	e1 1c       	adc	r14, r1
     59c:	f1 1c       	adc	r15, r1
     59e:	f5 94       	asr	r15
     5a0:	e7 94       	ror	r14
     5a2:	d7 94       	ror	r13
     5a4:	c7 94       	ror	r12
     5a6:	f5 94       	asr	r15
     5a8:	e7 94       	ror	r14
     5aa:	d7 94       	ror	r13
     5ac:	c7 94       	ror	r12
     5ae:	c0 92 ca 01 	sts	0x01CA, r12	; 0x8001ca <B3>
     5b2:	d0 92 cb 01 	sts	0x01CB, r13	; 0x8001cb <B3+0x1>
     5b6:	e0 92 cc 01 	sts	0x01CC, r14	; 0x8001cc <B3+0x2>
     5ba:	f0 92 cd 01 	sts	0x01CD, r15	; 0x8001cd <B3+0x3>
	X1 = AC3 * B6;
	X1 = X1 / 8192;
     5be:	60 91 9a 01 	lds	r22, 0x019A	; 0x80019a <AC3>
     5c2:	70 91 9b 01 	lds	r23, 0x019B	; 0x80019b <AC3+0x1>
     5c6:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <AC3+0x2>
     5ca:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <AC3+0x3>
     5ce:	a5 01       	movw	r20, r10
     5d0:	94 01       	movw	r18, r8
     5d2:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <__mulsi3>
     5d6:	4b 01       	movw	r8, r22
     5d8:	5c 01       	movw	r10, r24
     5da:	99 23       	and	r25, r25
     5dc:	34 f4       	brge	.+12     	; 0x5ea <ConvertUP+0x19e>
     5de:	2f ef       	ldi	r18, 0xFF	; 255
     5e0:	82 0e       	add	r8, r18
     5e2:	2f e1       	ldi	r18, 0x1F	; 31
     5e4:	92 1e       	adc	r9, r18
     5e6:	a1 1c       	adc	r10, r1
     5e8:	b1 1c       	adc	r11, r1
     5ea:	07 2e       	mov	r0, r23
     5ec:	7d e0       	ldi	r23, 0x0D	; 13
     5ee:	b5 94       	asr	r11
     5f0:	a7 94       	ror	r10
     5f2:	97 94       	ror	r9
     5f4:	87 94       	ror	r8
     5f6:	7a 95       	dec	r23
     5f8:	d1 f7       	brne	.-12     	; 0x5ee <ConvertUP+0x1a2>
     5fa:	70 2d       	mov	r23, r0
     5fc:	80 92 92 01 	sts	0x0192, r8	; 0x800192 <X1>
     600:	90 92 93 01 	sts	0x0193, r9	; 0x800193 <X1+0x1>
     604:	a0 92 94 01 	sts	0x0194, r10	; 0x800194 <X1+0x2>
     608:	b0 92 95 01 	sts	0x0195, r11	; 0x800195 <X1+0x3>
	X2 = B6 * B6;
	X2 = X2 / 4096;
	X2 = X2 * B1;
	X2 = X2 / 65536;
     60c:	60 91 b8 01 	lds	r22, 0x01B8	; 0x8001b8 <B1>
     610:	70 91 b9 01 	lds	r23, 0x01B9	; 0x8001b9 <B1+0x1>
     614:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <B1+0x2>
     618:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <B1+0x3>
     61c:	a3 01       	movw	r20, r6
     61e:	92 01       	movw	r18, r4
     620:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <__mulsi3>
     624:	2b 01       	movw	r4, r22
     626:	3c 01       	movw	r6, r24
     628:	99 23       	and	r25, r25
     62a:	2c f4       	brge	.+10     	; 0x636 <ConvertUP+0x1ea>
     62c:	2f ef       	ldi	r18, 0xFF	; 255
     62e:	42 0e       	add	r4, r18
     630:	52 1e       	adc	r5, r18
     632:	61 1c       	adc	r6, r1
     634:	71 1c       	adc	r7, r1
     636:	c3 01       	movw	r24, r6
     638:	bb 27       	eor	r27, r27
     63a:	97 fd       	sbrc	r25, 7
     63c:	b0 95       	com	r27
     63e:	ab 2f       	mov	r26, r27
     640:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <X2>
     644:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <X2+0x1>
     648:	a0 93 70 01 	sts	0x0170, r26	; 0x800170 <X2+0x2>
     64c:	b0 93 71 01 	sts	0x0171, r27	; 0x800171 <X2+0x3>
	X3 = X1 + X2;
	X3 = X3 + 2;
	X3 = X3 / 4;
     650:	88 0d       	add	r24, r8
     652:	99 1d       	adc	r25, r9
     654:	aa 1d       	adc	r26, r10
     656:	bb 1d       	adc	r27, r11
     658:	02 96       	adiw	r24, 0x02	; 2
     65a:	a1 1d       	adc	r26, r1
     65c:	b1 1d       	adc	r27, r1
     65e:	ac 01       	movw	r20, r24
     660:	bd 01       	movw	r22, r26
     662:	bb 23       	and	r27, r27
     664:	24 f4       	brge	.+8      	; 0x66e <ConvertUP+0x222>
     666:	4d 5f       	subi	r20, 0xFD	; 253
     668:	5f 4f       	sbci	r21, 0xFF	; 255
     66a:	6f 4f       	sbci	r22, 0xFF	; 255
     66c:	7f 4f       	sbci	r23, 0xFF	; 255
     66e:	db 01       	movw	r26, r22
     670:	ca 01       	movw	r24, r20
     672:	b5 95       	asr	r27
     674:	a7 95       	ror	r26
     676:	97 95       	ror	r25
     678:	87 95       	ror	r24
     67a:	b5 95       	asr	r27
     67c:	a7 95       	ror	r26
     67e:	97 95       	ror	r25
     680:	87 95       	ror	r24
     682:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <X3>
     686:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <X3+0x1>
     68a:	a0 93 a8 01 	sts	0x01A8, r26	; 0x8001a8 <X3+0x2>
     68e:	b0 93 a9 01 	sts	0x01A9, r27	; 0x8001a9 <X3+0x3>
	B4 = ((unsigned long)(X3 + 32768));
	B4 = B4 * AC4;
	B4 = B4 / 32768;
     692:	9c 01       	movw	r18, r24
     694:	ad 01       	movw	r20, r26
     696:	30 58       	subi	r19, 0x80	; 128
     698:	4f 4f       	sbci	r20, 0xFF	; 255
     69a:	5f 4f       	sbci	r21, 0xFF	; 255
     69c:	60 91 7a 01 	lds	r22, 0x017A	; 0x80017a <AC4>
     6a0:	70 91 7b 01 	lds	r23, 0x017B	; 0x80017b <AC4+0x1>
     6a4:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <AC4+0x2>
     6a8:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <AC4+0x3>
     6ac:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <__mulsi3>
     6b0:	4b 01       	movw	r8, r22
     6b2:	5c 01       	movw	r10, r24
     6b4:	07 2e       	mov	r0, r23
     6b6:	7f e0       	ldi	r23, 0x0F	; 15
     6b8:	b6 94       	lsr	r11
     6ba:	a7 94       	ror	r10
     6bc:	97 94       	ror	r9
     6be:	87 94       	ror	r8
     6c0:	7a 95       	dec	r23
     6c2:	d1 f7       	brne	.-12     	; 0x6b8 <ConvertUP+0x26c>
     6c4:	70 2d       	mov	r23, r0
     6c6:	80 92 ae 01 	sts	0x01AE, r8	; 0x8001ae <B4>
     6ca:	90 92 af 01 	sts	0x01AF, r9	; 0x8001af <B4+0x1>
     6ce:	a0 92 b0 01 	sts	0x01B0, r10	; 0x8001b0 <B4+0x2>
     6d2:	b0 92 b1 01 	sts	0x01B1, r11	; 0x8001b1 <B4+0x3>
	B7 = (unsigned long)UP - B3;
     6d6:	40 90 50 01 	lds	r4, 0x0150	; 0x800150 <UP>
     6da:	50 90 51 01 	lds	r5, 0x0151	; 0x800151 <UP+0x1>
     6de:	60 90 52 01 	lds	r6, 0x0152	; 0x800152 <UP+0x2>
     6e2:	70 90 53 01 	lds	r7, 0x0153	; 0x800153 <UP+0x3>
	B7 = B7 * (50000 >> oss);
     6e6:	a3 01       	movw	r20, r6
     6e8:	92 01       	movw	r18, r4
     6ea:	2c 19       	sub	r18, r12
     6ec:	3d 09       	sbc	r19, r13
     6ee:	4e 09       	sbc	r20, r14
     6f0:	5f 09       	sbc	r21, r15
     6f2:	80 e5       	ldi	r24, 0x50	; 80
     6f4:	93 ec       	ldi	r25, 0xC3	; 195
     6f6:	a0 e0       	ldi	r26, 0x00	; 0
     6f8:	b0 e0       	ldi	r27, 0x00	; 0
     6fa:	bc 01       	movw	r22, r24
     6fc:	cd 01       	movw	r24, r26
     6fe:	04 c0       	rjmp	.+8      	; 0x708 <ConvertUP+0x2bc>
     700:	95 95       	asr	r25
     702:	87 95       	ror	r24
     704:	77 95       	ror	r23
     706:	67 95       	ror	r22
     708:	ea 95       	dec	r30
     70a:	d2 f7       	brpl	.-12     	; 0x700 <ConvertUP+0x2b4>
     70c:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <__mulsi3>
     710:	60 93 b4 01 	sts	0x01B4, r22	; 0x8001b4 <B7>
     714:	70 93 b5 01 	sts	0x01B5, r23	; 0x8001b5 <B7+0x1>
     718:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <B7+0x2>
     71c:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <B7+0x3>
	if(B7 < 0x80000000) {
     720:	99 23       	and	r25, r25
     722:	8c f0       	brlt	.+34     	; 0x746 <ConvertUP+0x2fa>
		UP = B7 * 2;
		UP = UP / B4;
     724:	66 0f       	add	r22, r22
     726:	77 1f       	adc	r23, r23
     728:	88 1f       	adc	r24, r24
     72a:	99 1f       	adc	r25, r25
     72c:	a5 01       	movw	r20, r10
     72e:	94 01       	movw	r18, r8
     730:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <__udivmodsi4>
     734:	20 93 50 01 	sts	0x0150, r18	; 0x800150 <UP>
     738:	30 93 51 01 	sts	0x0151, r19	; 0x800151 <UP+0x1>
     73c:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <UP+0x2>
     740:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <UP+0x3>
     744:	75 c0       	rjmp	.+234    	; 0x830 <ConvertUP+0x3e4>
	}
	else {
		X1 = UP/256;
     746:	d3 01       	movw	r26, r6
     748:	c2 01       	movw	r24, r4
     74a:	77 20       	and	r7, r7
     74c:	24 f4       	brge	.+8      	; 0x756 <ConvertUP+0x30a>
     74e:	81 50       	subi	r24, 0x01	; 1
     750:	9f 4f       	sbci	r25, 0xFF	; 255
     752:	af 4f       	sbci	r26, 0xFF	; 255
     754:	bf 4f       	sbci	r27, 0xFF	; 255
     756:	69 2f       	mov	r22, r25
     758:	7a 2f       	mov	r23, r26
     75a:	8b 2f       	mov	r24, r27
     75c:	99 27       	eor	r25, r25
     75e:	87 fd       	sbrc	r24, 7
     760:	9a 95       	dec	r25
		X2 = X1;
		X1 = X1 * X2;
		X1 = X1 * 3038;
		X1 = X1 / 65536;
     762:	9b 01       	movw	r18, r22
     764:	ac 01       	movw	r20, r24
     766:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <__mulsi3>
     76a:	9b 01       	movw	r18, r22
     76c:	ac 01       	movw	r20, r24
     76e:	ae ed       	ldi	r26, 0xDE	; 222
     770:	bb e0       	ldi	r27, 0x0B	; 11
     772:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <__muluhisi3>
     776:	6b 01       	movw	r12, r22
     778:	7c 01       	movw	r14, r24
     77a:	99 23       	and	r25, r25
     77c:	2c f4       	brge	.+10     	; 0x788 <ConvertUP+0x33c>
     77e:	2f ef       	ldi	r18, 0xFF	; 255
     780:	c2 0e       	add	r12, r18
     782:	d2 1e       	adc	r13, r18
     784:	e1 1c       	adc	r14, r1
     786:	f1 1c       	adc	r15, r1
     788:	67 01       	movw	r12, r14
     78a:	ff 24       	eor	r15, r15
     78c:	d7 fc       	sbrc	r13, 7
     78e:	f0 94       	com	r15
     790:	ef 2c       	mov	r14, r15
     792:	c0 92 92 01 	sts	0x0192, r12	; 0x800192 <X1>
     796:	d0 92 93 01 	sts	0x0193, r13	; 0x800193 <X1+0x1>
     79a:	e0 92 94 01 	sts	0x0194, r14	; 0x800194 <X1+0x2>
     79e:	f0 92 95 01 	sts	0x0195, r15	; 0x800195 <X1+0x3>
		X2 = (-7357 * UP);
		X2 = X2 / 65536;
     7a2:	a3 e4       	ldi	r26, 0x43	; 67
     7a4:	b3 ee       	ldi	r27, 0xE3	; 227
     7a6:	a3 01       	movw	r20, r6
     7a8:	92 01       	movw	r18, r4
     7aa:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <__mulohisi3>
     7ae:	4b 01       	movw	r8, r22
     7b0:	5c 01       	movw	r10, r24
     7b2:	99 23       	and	r25, r25
     7b4:	2c f4       	brge	.+10     	; 0x7c0 <ConvertUP+0x374>
     7b6:	2f ef       	ldi	r18, 0xFF	; 255
     7b8:	82 0e       	add	r8, r18
     7ba:	92 1e       	adc	r9, r18
     7bc:	a1 1c       	adc	r10, r1
     7be:	b1 1c       	adc	r11, r1
     7c0:	c5 01       	movw	r24, r10
     7c2:	bb 27       	eor	r27, r27
     7c4:	97 fd       	sbrc	r25, 7
     7c6:	b0 95       	com	r27
     7c8:	ab 2f       	mov	r26, r27
     7ca:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <X2>
     7ce:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <X2+0x1>
     7d2:	a0 93 70 01 	sts	0x0170, r26	; 0x800170 <X2+0x2>
     7d6:	b0 93 71 01 	sts	0x0171, r27	; 0x800171 <X2+0x3>
		X3 = X1 + X2 + 3791;
		X3 = X3 / 4;
     7da:	8c 0d       	add	r24, r12
     7dc:	9d 1d       	adc	r25, r13
     7de:	ae 1d       	adc	r26, r14
     7e0:	bf 1d       	adc	r27, r15
     7e2:	81 53       	subi	r24, 0x31	; 49
     7e4:	91 4f       	sbci	r25, 0xF1	; 241
     7e6:	af 4f       	sbci	r26, 0xFF	; 255
     7e8:	bf 4f       	sbci	r27, 0xFF	; 255
     7ea:	ac 01       	movw	r20, r24
     7ec:	bd 01       	movw	r22, r26
     7ee:	22 f4       	brpl	.+8      	; 0x7f8 <ConvertUP+0x3ac>
     7f0:	4d 5f       	subi	r20, 0xFD	; 253
     7f2:	5f 4f       	sbci	r21, 0xFF	; 255
     7f4:	6f 4f       	sbci	r22, 0xFF	; 255
     7f6:	7f 4f       	sbci	r23, 0xFF	; 255
     7f8:	75 95       	asr	r23
     7fa:	67 95       	ror	r22
     7fc:	57 95       	ror	r21
     7fe:	47 95       	ror	r20
     800:	75 95       	asr	r23
     802:	67 95       	ror	r22
     804:	57 95       	ror	r21
     806:	47 95       	ror	r20
     808:	40 93 a6 01 	sts	0x01A6, r20	; 0x8001a6 <X3>
     80c:	50 93 a7 01 	sts	0x01A7, r21	; 0x8001a7 <X3+0x1>
     810:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <X3+0x2>
     814:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <X3+0x3>
		UP = UP + X3;
     818:	44 0d       	add	r20, r4
     81a:	55 1d       	adc	r21, r5
     81c:	66 1d       	adc	r22, r6
     81e:	77 1d       	adc	r23, r7
     820:	40 93 50 01 	sts	0x0150, r20	; 0x800150 <UP>
     824:	50 93 51 01 	sts	0x0151, r21	; 0x800151 <UP+0x1>
     828:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <UP+0x2>
     82c:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <UP+0x3>
	}
}
     830:	1f 91       	pop	r17
     832:	0f 91       	pop	r16
     834:	ff 90       	pop	r15
     836:	ef 90       	pop	r14
     838:	df 90       	pop	r13
     83a:	cf 90       	pop	r12
     83c:	bf 90       	pop	r11
     83e:	af 90       	pop	r10
     840:	9f 90       	pop	r9
     842:	8f 90       	pop	r8
     844:	7f 90       	pop	r7
     846:	6f 90       	pop	r6
     848:	5f 90       	pop	r5
     84a:	4f 90       	pop	r4
     84c:	08 95       	ret

0000084e <readBarometerUP>:

// Reads the Raw Barometer Pressure and stores it into UP
void readBarometerUP(void)
{
     84e:	1f 93       	push	r17
     850:	cf 93       	push	r28
     852:	df 93       	push	r29
	// Set up for UP Sampling...
	i2c_start();
     854:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xEE);	// Barometer address + write
     858:	8e ee       	ldi	r24, 0xEE	; 238
     85a:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0xF4);	// Config register for temp/UP
     85e:	84 ef       	ldi	r24, 0xF4	; 244
     860:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x34);	// Oversampling Resolution 0 *4.5 ms
     864:	84 e3       	ldi	r24, 0x34	; 52
     866:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     86a:	cc eb       	ldi	r28, 0xBC	; 188
     86c:	d0 e0       	ldi	r29, 0x00	; 0
     86e:	14 e9       	ldi	r17, 0x94	; 148
     870:	18 83       	st	Y, r17
	i2c_write(0xEE);	// Barometer address + write
	i2c_write(0xF4);	// Config register for temp/UP
	i2c_write(0x34);	// Oversampling Resolution 0 *4.5 ms
	i2c_stop();

	oss = 0;
     872:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <oss>
     876:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <oss+0x1>
     87a:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <oss+0x2>
     87e:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <oss+0x3>
     882:	8f e3       	ldi	r24, 0x3F	; 63
     884:	9c e9       	ldi	r25, 0x9C	; 156
     886:	01 97       	sbiw	r24, 0x01	; 1
     888:	f1 f7       	brne	.-4      	; 0x886 <readBarometerUP+0x38>
     88a:	00 c0       	rjmp	.+0      	; 0x88c <readBarometerUP+0x3e>
     88c:	00 00       	nop
	_delay_ms(10);		// Delay at least 4.5 ms for UP reading
	// Begin Reading...
	i2c_start();
     88e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xEE);	// Barometer address + write
     892:	8e ee       	ldi	r24, 0xEE	; 238
     894:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0xF6);	// MSB of data register
     898:	86 ef       	ldi	r24, 0xF6	; 246
     89a:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_start();		// Restart
     89e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xEF);	// Barometer address + Read
     8a2:	8f ee       	ldi	r24, 0xEF	; 239
     8a4:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	UP = i2c_ReadACK();
     8a8:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
	UP = UP << 8;
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	a0 e0       	ldi	r26, 0x00	; 0
     8b0:	b0 e0       	ldi	r27, 0x00	; 0
     8b2:	ba 2f       	mov	r27, r26
     8b4:	a9 2f       	mov	r26, r25
     8b6:	98 2f       	mov	r25, r24
     8b8:	88 27       	eor	r24, r24
     8ba:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <UP>
     8be:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <UP+0x1>
     8c2:	a0 93 52 01 	sts	0x0152, r26	; 0x800152 <UP+0x2>
     8c6:	b0 93 53 01 	sts	0x0153, r27	; 0x800153 <UP+0x3>
	UP = UP + i2c_ReadACK();
     8ca:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
	UP = UP << 8;
     8ce:	40 91 50 01 	lds	r20, 0x0150	; 0x800150 <UP>
     8d2:	50 91 51 01 	lds	r21, 0x0151	; 0x800151 <UP+0x1>
     8d6:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <UP+0x2>
     8da:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <UP+0x3>
     8de:	48 0f       	add	r20, r24
     8e0:	51 1d       	adc	r21, r1
     8e2:	61 1d       	adc	r22, r1
     8e4:	71 1d       	adc	r23, r1
     8e6:	76 2f       	mov	r23, r22
     8e8:	65 2f       	mov	r22, r21
     8ea:	54 2f       	mov	r21, r20
     8ec:	44 27       	eor	r20, r20
     8ee:	40 93 50 01 	sts	0x0150, r20	; 0x800150 <UP>
     8f2:	50 93 51 01 	sts	0x0151, r21	; 0x800151 <UP+0x1>
     8f6:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <UP+0x2>
     8fa:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <UP+0x3>
	UP = UP + i2c_ReadNACK();
     8fe:	0e 94 f7 00 	call	0x1ee	; 0x1ee <i2c_ReadNACK>
	UP = UP >> (8 - oss);
     902:	40 91 50 01 	lds	r20, 0x0150	; 0x800150 <UP>
     906:	50 91 51 01 	lds	r21, 0x0151	; 0x800151 <UP+0x1>
     90a:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <UP+0x2>
     90e:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <UP+0x3>
     912:	48 0f       	add	r20, r24
     914:	51 1d       	adc	r21, r1
     916:	61 1d       	adc	r22, r1
     918:	71 1d       	adc	r23, r1
     91a:	20 91 bc 01 	lds	r18, 0x01BC	; 0x8001bc <oss>
     91e:	30 91 bd 01 	lds	r19, 0x01BD	; 0x8001bd <oss+0x1>
     922:	88 e0       	ldi	r24, 0x08	; 8
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	82 1b       	sub	r24, r18
     928:	93 0b       	sbc	r25, r19
     92a:	04 c0       	rjmp	.+8      	; 0x934 <__stack+0x35>
     92c:	75 95       	asr	r23
     92e:	67 95       	ror	r22
     930:	57 95       	ror	r21
     932:	47 95       	ror	r20
     934:	8a 95       	dec	r24
     936:	d2 f7       	brpl	.-12     	; 0x92c <__stack+0x2d>
     938:	40 93 50 01 	sts	0x0150, r20	; 0x800150 <UP>
     93c:	50 93 51 01 	sts	0x0151, r21	; 0x800151 <UP+0x1>
     940:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <UP+0x2>
     944:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <UP+0x3>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     948:	18 83       	st	Y, r17
	UP = UP + i2c_ReadACK();
	UP = UP << 8;
	UP = UP + i2c_ReadNACK();
	UP = UP >> (8 - oss);
	i2c_stop();
}
     94a:	df 91       	pop	r29
     94c:	cf 91       	pop	r28
     94e:	1f 91       	pop	r17
     950:	08 95       	ret

00000952 <getBarometerCalibrations>:

// Obtains all the Calibration values needed for converting the raw
// values.
void getBarometerCalibrations(void)
{
	i2c_start();
     952:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xEE);	// Barometer Address + write
     956:	8e ee       	ldi	r24, 0xEE	; 238
     958:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0xAA);	// go to MSB of AC1
     95c:	8a ea       	ldi	r24, 0xAA	; 170
     95e:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_start();		// Restart
     962:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xEF);	// Barometer Address + Read
     966:	8f ee       	ldi	r24, 0xEF	; 239
     968:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	AC1 = i2c_ReadACK() << 8;	// MSB
     96c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	98 2f       	mov	r25, r24
     974:	88 27       	eor	r24, r24
     976:	09 2e       	mov	r0, r25
     978:	00 0c       	add	r0, r0
     97a:	aa 0b       	sbc	r26, r26
     97c:	bb 0b       	sbc	r27, r27
     97e:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <AC1>
     982:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <AC1+0x1>
     986:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <AC1+0x2>
     98a:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <AC1+0x3>
	AC1 |= i2c_ReadACK();		// LSB
     98e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     992:	40 91 60 01 	lds	r20, 0x0160	; 0x800160 <AC1>
     996:	50 91 61 01 	lds	r21, 0x0161	; 0x800161 <AC1+0x1>
     99a:	60 91 62 01 	lds	r22, 0x0162	; 0x800162 <AC1+0x2>
     99e:	70 91 63 01 	lds	r23, 0x0163	; 0x800163 <AC1+0x3>
     9a2:	48 2b       	or	r20, r24
     9a4:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <AC1>
     9a8:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <AC1+0x1>
     9ac:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <AC1+0x2>
     9b0:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <AC1+0x3>
	AC2 = i2c_ReadACK() << 8;	// MSB
     9b4:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	98 2f       	mov	r25, r24
     9bc:	88 27       	eor	r24, r24
     9be:	09 2e       	mov	r0, r25
     9c0:	00 0c       	add	r0, r0
     9c2:	aa 0b       	sbc	r26, r26
     9c4:	bb 0b       	sbc	r27, r27
     9c6:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <AC2>
     9ca:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <AC2+0x1>
     9ce:	a0 93 98 01 	sts	0x0198, r26	; 0x800198 <AC2+0x2>
     9d2:	b0 93 99 01 	sts	0x0199, r27	; 0x800199 <AC2+0x3>
	AC2 |= i2c_ReadACK();		// LSB
     9d6:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     9da:	40 91 96 01 	lds	r20, 0x0196	; 0x800196 <AC2>
     9de:	50 91 97 01 	lds	r21, 0x0197	; 0x800197 <AC2+0x1>
     9e2:	60 91 98 01 	lds	r22, 0x0198	; 0x800198 <AC2+0x2>
     9e6:	70 91 99 01 	lds	r23, 0x0199	; 0x800199 <AC2+0x3>
     9ea:	48 2b       	or	r20, r24
     9ec:	40 93 96 01 	sts	0x0196, r20	; 0x800196 <AC2>
     9f0:	50 93 97 01 	sts	0x0197, r21	; 0x800197 <AC2+0x1>
     9f4:	60 93 98 01 	sts	0x0198, r22	; 0x800198 <AC2+0x2>
     9f8:	70 93 99 01 	sts	0x0199, r23	; 0x800199 <AC2+0x3>
	AC3 = i2c_ReadACK() << 8;	// MSB
     9fc:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	98 2f       	mov	r25, r24
     a04:	88 27       	eor	r24, r24
     a06:	09 2e       	mov	r0, r25
     a08:	00 0c       	add	r0, r0
     a0a:	aa 0b       	sbc	r26, r26
     a0c:	bb 0b       	sbc	r27, r27
     a0e:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <AC3>
     a12:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <AC3+0x1>
     a16:	a0 93 9c 01 	sts	0x019C, r26	; 0x80019c <AC3+0x2>
     a1a:	b0 93 9d 01 	sts	0x019D, r27	; 0x80019d <AC3+0x3>
	AC3 |= i2c_ReadACK();		// LSB
     a1e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     a22:	40 91 9a 01 	lds	r20, 0x019A	; 0x80019a <AC3>
     a26:	50 91 9b 01 	lds	r21, 0x019B	; 0x80019b <AC3+0x1>
     a2a:	60 91 9c 01 	lds	r22, 0x019C	; 0x80019c <AC3+0x2>
     a2e:	70 91 9d 01 	lds	r23, 0x019D	; 0x80019d <AC3+0x3>
     a32:	48 2b       	or	r20, r24
     a34:	40 93 9a 01 	sts	0x019A, r20	; 0x80019a <AC3>
     a38:	50 93 9b 01 	sts	0x019B, r21	; 0x80019b <AC3+0x1>
     a3c:	60 93 9c 01 	sts	0x019C, r22	; 0x80019c <AC3+0x2>
     a40:	70 93 9d 01 	sts	0x019D, r23	; 0x80019d <AC3+0x3>
	AC4 = i2c_ReadACK() << 8;	// MSB
     a44:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	98 2f       	mov	r25, r24
     a4c:	88 27       	eor	r24, r24
     a4e:	09 2e       	mov	r0, r25
     a50:	00 0c       	add	r0, r0
     a52:	aa 0b       	sbc	r26, r26
     a54:	bb 0b       	sbc	r27, r27
     a56:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <AC4>
     a5a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <AC4+0x1>
     a5e:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <AC4+0x2>
     a62:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <AC4+0x3>
	AC4 |= i2c_ReadACK();		// LSB
     a66:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     a6a:	40 91 7a 01 	lds	r20, 0x017A	; 0x80017a <AC4>
     a6e:	50 91 7b 01 	lds	r21, 0x017B	; 0x80017b <AC4+0x1>
     a72:	60 91 7c 01 	lds	r22, 0x017C	; 0x80017c <AC4+0x2>
     a76:	70 91 7d 01 	lds	r23, 0x017D	; 0x80017d <AC4+0x3>
     a7a:	48 2b       	or	r20, r24
     a7c:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <AC4>
     a80:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <AC4+0x1>
     a84:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <AC4+0x2>
     a88:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <AC4+0x3>
	AC5 = i2c_ReadACK() << 8;	// MSB
     a8c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	98 2f       	mov	r25, r24
     a94:	88 27       	eor	r24, r24
     a96:	09 2e       	mov	r0, r25
     a98:	00 0c       	add	r0, r0
     a9a:	aa 0b       	sbc	r26, r26
     a9c:	bb 0b       	sbc	r27, r27
     a9e:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <AC5>
     aa2:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <AC5+0x1>
     aa6:	a0 93 74 01 	sts	0x0174, r26	; 0x800174 <AC5+0x2>
     aaa:	b0 93 75 01 	sts	0x0175, r27	; 0x800175 <AC5+0x3>
	AC5 |= i2c_ReadACK();		// LSB
     aae:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     ab2:	40 91 72 01 	lds	r20, 0x0172	; 0x800172 <AC5>
     ab6:	50 91 73 01 	lds	r21, 0x0173	; 0x800173 <AC5+0x1>
     aba:	60 91 74 01 	lds	r22, 0x0174	; 0x800174 <AC5+0x2>
     abe:	70 91 75 01 	lds	r23, 0x0175	; 0x800175 <AC5+0x3>
     ac2:	48 2b       	or	r20, r24
     ac4:	40 93 72 01 	sts	0x0172, r20	; 0x800172 <AC5>
     ac8:	50 93 73 01 	sts	0x0173, r21	; 0x800173 <AC5+0x1>
     acc:	60 93 74 01 	sts	0x0174, r22	; 0x800174 <AC5+0x2>
     ad0:	70 93 75 01 	sts	0x0175, r23	; 0x800175 <AC5+0x3>
	AC6 = i2c_ReadACK() << 8;	// MSB
     ad4:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	98 2f       	mov	r25, r24
     adc:	88 27       	eor	r24, r24
     ade:	09 2e       	mov	r0, r25
     ae0:	00 0c       	add	r0, r0
     ae2:	aa 0b       	sbc	r26, r26
     ae4:	bb 0b       	sbc	r27, r27
     ae6:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <AC6>
     aea:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <AC6+0x1>
     aee:	a0 93 66 01 	sts	0x0166, r26	; 0x800166 <AC6+0x2>
     af2:	b0 93 67 01 	sts	0x0167, r27	; 0x800167 <AC6+0x3>
	AC6 |= i2c_ReadACK();		// LSB
     af6:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     afa:	40 91 64 01 	lds	r20, 0x0164	; 0x800164 <AC6>
     afe:	50 91 65 01 	lds	r21, 0x0165	; 0x800165 <AC6+0x1>
     b02:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <AC6+0x2>
     b06:	70 91 67 01 	lds	r23, 0x0167	; 0x800167 <AC6+0x3>
     b0a:	48 2b       	or	r20, r24
     b0c:	40 93 64 01 	sts	0x0164, r20	; 0x800164 <AC6>
     b10:	50 93 65 01 	sts	0x0165, r21	; 0x800165 <AC6+0x1>
     b14:	60 93 66 01 	sts	0x0166, r22	; 0x800166 <AC6+0x2>
     b18:	70 93 67 01 	sts	0x0167, r23	; 0x800167 <AC6+0x3>
	B1 = i2c_ReadACK() << 8;	// MSB
     b1c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	98 2f       	mov	r25, r24
     b24:	88 27       	eor	r24, r24
     b26:	09 2e       	mov	r0, r25
     b28:	00 0c       	add	r0, r0
     b2a:	aa 0b       	sbc	r26, r26
     b2c:	bb 0b       	sbc	r27, r27
     b2e:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <B1>
     b32:	90 93 b9 01 	sts	0x01B9, r25	; 0x8001b9 <B1+0x1>
     b36:	a0 93 ba 01 	sts	0x01BA, r26	; 0x8001ba <B1+0x2>
     b3a:	b0 93 bb 01 	sts	0x01BB, r27	; 0x8001bb <B1+0x3>
	B1 |= i2c_ReadACK();		// LSB
     b3e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     b42:	40 91 b8 01 	lds	r20, 0x01B8	; 0x8001b8 <B1>
     b46:	50 91 b9 01 	lds	r21, 0x01B9	; 0x8001b9 <B1+0x1>
     b4a:	60 91 ba 01 	lds	r22, 0x01BA	; 0x8001ba <B1+0x2>
     b4e:	70 91 bb 01 	lds	r23, 0x01BB	; 0x8001bb <B1+0x3>
     b52:	48 2b       	or	r20, r24
     b54:	40 93 b8 01 	sts	0x01B8, r20	; 0x8001b8 <B1>
     b58:	50 93 b9 01 	sts	0x01B9, r21	; 0x8001b9 <B1+0x1>
     b5c:	60 93 ba 01 	sts	0x01BA, r22	; 0x8001ba <B1+0x2>
     b60:	70 93 bb 01 	sts	0x01BB, r23	; 0x8001bb <B1+0x3>
	B2 = i2c_ReadACK() << 8;	// MSB
     b64:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	98 2f       	mov	r25, r24
     b6c:	88 27       	eor	r24, r24
     b6e:	09 2e       	mov	r0, r25
     b70:	00 0c       	add	r0, r0
     b72:	aa 0b       	sbc	r26, r26
     b74:	bb 0b       	sbc	r27, r27
     b76:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <B2>
     b7a:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <B2+0x1>
     b7e:	a0 93 a0 01 	sts	0x01A0, r26	; 0x8001a0 <B2+0x2>
     b82:	b0 93 a1 01 	sts	0x01A1, r27	; 0x8001a1 <B2+0x3>
	B2 |= i2c_ReadACK();		// LSB
     b86:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     b8a:	40 91 9e 01 	lds	r20, 0x019E	; 0x80019e <B2>
     b8e:	50 91 9f 01 	lds	r21, 0x019F	; 0x80019f <B2+0x1>
     b92:	60 91 a0 01 	lds	r22, 0x01A0	; 0x8001a0 <B2+0x2>
     b96:	70 91 a1 01 	lds	r23, 0x01A1	; 0x8001a1 <B2+0x3>
     b9a:	48 2b       	or	r20, r24
     b9c:	40 93 9e 01 	sts	0x019E, r20	; 0x80019e <B2>
     ba0:	50 93 9f 01 	sts	0x019F, r21	; 0x80019f <B2+0x1>
     ba4:	60 93 a0 01 	sts	0x01A0, r22	; 0x8001a0 <B2+0x2>
     ba8:	70 93 a1 01 	sts	0x01A1, r23	; 0x8001a1 <B2+0x3>
	MB = i2c_ReadACK() << 8;	// MSB
     bac:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	98 2f       	mov	r25, r24
     bb4:	88 27       	eor	r24, r24
     bb6:	09 2e       	mov	r0, r25
     bb8:	00 0c       	add	r0, r0
     bba:	aa 0b       	sbc	r26, r26
     bbc:	bb 0b       	sbc	r27, r27
     bbe:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <MB>
     bc2:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <MB+0x1>
     bc6:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <MB+0x2>
     bca:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <MB+0x3>
	MB |= i2c_ReadACK();		// LSB
     bce:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     bd2:	40 91 8e 01 	lds	r20, 0x018E	; 0x80018e <MB>
     bd6:	50 91 8f 01 	lds	r21, 0x018F	; 0x80018f <MB+0x1>
     bda:	60 91 90 01 	lds	r22, 0x0190	; 0x800190 <MB+0x2>
     bde:	70 91 91 01 	lds	r23, 0x0191	; 0x800191 <MB+0x3>
     be2:	48 2b       	or	r20, r24
     be4:	40 93 8e 01 	sts	0x018E, r20	; 0x80018e <MB>
     be8:	50 93 8f 01 	sts	0x018F, r21	; 0x80018f <MB+0x1>
     bec:	60 93 90 01 	sts	0x0190, r22	; 0x800190 <MB+0x2>
     bf0:	70 93 91 01 	sts	0x0191, r23	; 0x800191 <MB+0x3>
	MC = i2c_ReadACK() << 8;	// MSB
     bf4:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	98 2f       	mov	r25, r24
     bfc:	88 27       	eor	r24, r24
     bfe:	09 2e       	mov	r0, r25
     c00:	00 0c       	add	r0, r0
     c02:	aa 0b       	sbc	r26, r26
     c04:	bb 0b       	sbc	r27, r27
     c06:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <MC>
     c0a:	90 93 c1 01 	sts	0x01C1, r25	; 0x8001c1 <MC+0x1>
     c0e:	a0 93 c2 01 	sts	0x01C2, r26	; 0x8001c2 <MC+0x2>
     c12:	b0 93 c3 01 	sts	0x01C3, r27	; 0x8001c3 <MC+0x3>
	MC |= i2c_ReadACK();		// LSB
     c16:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     c1a:	40 91 c0 01 	lds	r20, 0x01C0	; 0x8001c0 <MC>
     c1e:	50 91 c1 01 	lds	r21, 0x01C1	; 0x8001c1 <MC+0x1>
     c22:	60 91 c2 01 	lds	r22, 0x01C2	; 0x8001c2 <MC+0x2>
     c26:	70 91 c3 01 	lds	r23, 0x01C3	; 0x8001c3 <MC+0x3>
     c2a:	48 2b       	or	r20, r24
     c2c:	40 93 c0 01 	sts	0x01C0, r20	; 0x8001c0 <MC>
     c30:	50 93 c1 01 	sts	0x01C1, r21	; 0x8001c1 <MC+0x1>
     c34:	60 93 c2 01 	sts	0x01C2, r22	; 0x8001c2 <MC+0x2>
     c38:	70 93 c3 01 	sts	0x01C3, r23	; 0x8001c3 <MC+0x3>
	MD = i2c_ReadACK() << 8;	// MSB
     c3c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	98 2f       	mov	r25, r24
     c44:	88 27       	eor	r24, r24
     c46:	09 2e       	mov	r0, r25
     c48:	00 0c       	add	r0, r0
     c4a:	aa 0b       	sbc	r26, r26
     c4c:	bb 0b       	sbc	r27, r27
     c4e:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <MD>
     c52:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <MD+0x1>
     c56:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <MD+0x2>
     c5a:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <MD+0x3>
	MD |= i2c_ReadNACK();		// LSB
     c5e:	0e 94 f7 00 	call	0x1ee	; 0x1ee <i2c_ReadNACK>
     c62:	40 91 5a 01 	lds	r20, 0x015A	; 0x80015a <MD>
     c66:	50 91 5b 01 	lds	r21, 0x015B	; 0x80015b <MD+0x1>
     c6a:	60 91 5c 01 	lds	r22, 0x015C	; 0x80015c <MD+0x2>
     c6e:	70 91 5d 01 	lds	r23, 0x015D	; 0x80015d <MD+0x3>
     c72:	48 2b       	or	r20, r24
     c74:	40 93 5a 01 	sts	0x015A, r20	; 0x80015a <MD>
     c78:	50 93 5b 01 	sts	0x015B, r21	; 0x80015b <MD+0x1>
     c7c:	60 93 5c 01 	sts	0x015C, r22	; 0x80015c <MD+0x2>
     c80:	70 93 5d 01 	sts	0x015D, r23	; 0x80015d <MD+0x3>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     c84:	84 e9       	ldi	r24, 0x94	; 148
     c86:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     c8a:	08 95       	ret

00000c8c <readBarometerTemp>:
	i2c_stop();
}

// Reads temperature
void readBarometerTemp(void)
{
     c8c:	1f 93       	push	r17
     c8e:	cf 93       	push	r28
     c90:	df 93       	push	r29
	// Set up for UP Sampling...
	i2c_start();
     c92:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xEE);	// Barometer address + write
     c96:	8e ee       	ldi	r24, 0xEE	; 238
     c98:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0xF4);	// Config register for temp/UP
     c9c:	84 ef       	ldi	r24, 0xF4	; 244
     c9e:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x2E);	// Temperature *4.5ms time
     ca2:	8e e2       	ldi	r24, 0x2E	; 46
     ca4:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     ca8:	cc eb       	ldi	r28, 0xBC	; 188
     caa:	d0 e0       	ldi	r29, 0x00	; 0
     cac:	14 e9       	ldi	r17, 0x94	; 148
     cae:	18 83       	st	Y, r17
     cb0:	8f e5       	ldi	r24, 0x5F	; 95
     cb2:	9d e6       	ldi	r25, 0x6D	; 109
     cb4:	01 97       	sbiw	r24, 0x01	; 1
     cb6:	f1 f7       	brne	.-4      	; 0xcb4 <readBarometerTemp+0x28>
     cb8:	00 c0       	rjmp	.+0      	; 0xcba <readBarometerTemp+0x2e>
     cba:	00 00       	nop
	i2c_write(0x2E);	// Temperature *4.5ms time
	i2c_stop();

	_delay_ms(7);		// Delay at least 4.5ms for temp reading...
	// Begin Reading...
	i2c_start();
     cbc:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xEE);	// Barometer address + write
     cc0:	8e ee       	ldi	r24, 0xEE	; 238
     cc2:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0xF6);	// MSB of data register
     cc6:	86 ef       	ldi	r24, 0xF6	; 246
     cc8:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_start();		// Restart
     ccc:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xEF);	// Barometer address + Read
     cd0:	8f ee       	ldi	r24, 0xEF	; 239
     cd2:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	BaroTemp = i2c_ReadACK() << 8; // MSB
     cd6:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	98 2f       	mov	r25, r24
     cde:	88 27       	eor	r24, r24
     ce0:	09 2e       	mov	r0, r25
     ce2:	00 0c       	add	r0, r0
     ce4:	aa 0b       	sbc	r26, r26
     ce6:	bb 0b       	sbc	r27, r27
     ce8:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <BaroTemp>
     cec:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <BaroTemp+0x1>
     cf0:	a0 93 4e 01 	sts	0x014E, r26	; 0x80014e <BaroTemp+0x2>
     cf4:	b0 93 4f 01 	sts	0x014F, r27	; 0x80014f <BaroTemp+0x3>
	BaroTemp|= i2c_ReadNACK(); // LSB
     cf8:	0e 94 f7 00 	call	0x1ee	; 0x1ee <i2c_ReadNACK>
     cfc:	40 91 4c 01 	lds	r20, 0x014C	; 0x80014c <BaroTemp>
     d00:	50 91 4d 01 	lds	r21, 0x014D	; 0x80014d <BaroTemp+0x1>
     d04:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <BaroTemp+0x2>
     d08:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <BaroTemp+0x3>
     d0c:	48 2b       	or	r20, r24
     d0e:	40 93 4c 01 	sts	0x014C, r20	; 0x80014c <BaroTemp>
     d12:	50 93 4d 01 	sts	0x014D, r21	; 0x80014d <BaroTemp+0x1>
     d16:	60 93 4e 01 	sts	0x014E, r22	; 0x80014e <BaroTemp+0x2>
     d1a:	70 93 4f 01 	sts	0x014F, r23	; 0x80014f <BaroTemp+0x3>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     d1e:	18 83       	st	Y, r17
	i2c_start();		// Restart
	i2c_write(0xEF);	// Barometer address + Read
	BaroTemp = i2c_ReadACK() << 8; // MSB
	BaroTemp|= i2c_ReadNACK(); // LSB
	i2c_stop();
}
     d20:	df 91       	pop	r29
     d22:	cf 91       	pop	r28
     d24:	1f 91       	pop	r17
     d26:	08 95       	ret

00000d28 <convertTemp>:

// This function converts the raw temperature read from the barometer
// into a temperature displayed in degrees Celsius.  This conversion was 
// obtained from the datasheet for the barometer.
void convertTemp(void)
{
     d28:	cf 92       	push	r12
     d2a:	df 92       	push	r13
     d2c:	ef 92       	push	r14
     d2e:	ff 92       	push	r15
     d30:	0f 93       	push	r16
     d32:	1f 93       	push	r17
	X1 = (BaroTemp - AC6);
	X1 = X1 * AC5;
	X1 = X1 / 32768;
     d34:	40 91 4c 01 	lds	r20, 0x014C	; 0x80014c <BaroTemp>
     d38:	50 91 4d 01 	lds	r21, 0x014D	; 0x80014d <BaroTemp+0x1>
     d3c:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <BaroTemp+0x2>
     d40:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <BaroTemp+0x3>
     d44:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <AC6>
     d48:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <AC6+0x1>
     d4c:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <AC6+0x2>
     d50:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <AC6+0x3>
     d54:	9a 01       	movw	r18, r20
     d56:	ab 01       	movw	r20, r22
     d58:	28 1b       	sub	r18, r24
     d5a:	39 0b       	sbc	r19, r25
     d5c:	4a 0b       	sbc	r20, r26
     d5e:	5b 0b       	sbc	r21, r27
     d60:	60 91 72 01 	lds	r22, 0x0172	; 0x800172 <AC5>
     d64:	70 91 73 01 	lds	r23, 0x0173	; 0x800173 <AC5+0x1>
     d68:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <AC5+0x2>
     d6c:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <AC5+0x3>
     d70:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <__mulsi3>
     d74:	8b 01       	movw	r16, r22
     d76:	9c 01       	movw	r18, r24
     d78:	99 23       	and	r25, r25
     d7a:	24 f4       	brge	.+8      	; 0xd84 <convertTemp+0x5c>
     d7c:	01 50       	subi	r16, 0x01	; 1
     d7e:	10 48       	sbci	r17, 0x80	; 128
     d80:	2f 4f       	sbci	r18, 0xFF	; 255
     d82:	3f 4f       	sbci	r19, 0xFF	; 255
     d84:	68 01       	movw	r12, r16
     d86:	79 01       	movw	r14, r18
     d88:	0b 2e       	mov	r0, r27
     d8a:	bf e0       	ldi	r27, 0x0F	; 15
     d8c:	f5 94       	asr	r15
     d8e:	e7 94       	ror	r14
     d90:	d7 94       	ror	r13
     d92:	c7 94       	ror	r12
     d94:	ba 95       	dec	r27
     d96:	d1 f7       	brne	.-12     	; 0xd8c <convertTemp+0x64>
     d98:	b0 2d       	mov	r27, r0
     d9a:	c0 92 92 01 	sts	0x0192, r12	; 0x800192 <X1>
     d9e:	d0 92 93 01 	sts	0x0193, r13	; 0x800193 <X1+0x1>
     da2:	e0 92 94 01 	sts	0x0194, r14	; 0x800194 <X1+0x2>
     da6:	f0 92 95 01 	sts	0x0195, r15	; 0x800195 <X1+0x3>
	X2 = MC * 2048;
     daa:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <MC>
     dae:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <MC+0x1>
     db2:	a0 91 c2 01 	lds	r26, 0x01C2	; 0x8001c2 <MC+0x2>
     db6:	b0 91 c3 01 	lds	r27, 0x01C3	; 0x8001c3 <MC+0x3>
     dba:	bc 01       	movw	r22, r24
     dbc:	cd 01       	movw	r24, r26
     dbe:	05 2e       	mov	r0, r21
     dc0:	5b e0       	ldi	r21, 0x0B	; 11
     dc2:	66 0f       	add	r22, r22
     dc4:	77 1f       	adc	r23, r23
     dc6:	88 1f       	adc	r24, r24
     dc8:	99 1f       	adc	r25, r25
     dca:	5a 95       	dec	r21
     dcc:	d1 f7       	brne	.-12     	; 0xdc2 <convertTemp+0x9a>
     dce:	50 2d       	mov	r21, r0
	X3 = X1 + MD;
     dd0:	00 91 5a 01 	lds	r16, 0x015A	; 0x80015a <MD>
     dd4:	10 91 5b 01 	lds	r17, 0x015B	; 0x80015b <MD+0x1>
     dd8:	20 91 5c 01 	lds	r18, 0x015C	; 0x80015c <MD+0x2>
     ddc:	30 91 5d 01 	lds	r19, 0x015D	; 0x80015d <MD+0x3>
     de0:	a9 01       	movw	r20, r18
     de2:	98 01       	movw	r18, r16
     de4:	2c 0d       	add	r18, r12
     de6:	3d 1d       	adc	r19, r13
     de8:	4e 1d       	adc	r20, r14
     dea:	5f 1d       	adc	r21, r15
     dec:	20 93 a6 01 	sts	0x01A6, r18	; 0x8001a6 <X3>
     df0:	30 93 a7 01 	sts	0x01A7, r19	; 0x8001a7 <X3+0x1>
     df4:	40 93 a8 01 	sts	0x01A8, r20	; 0x8001a8 <X3+0x2>
     df8:	50 93 a9 01 	sts	0x01A9, r21	; 0x8001a9 <X3+0x3>
	X2 = X2 / X3;
     dfc:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <__divmodsi4>
     e00:	20 93 6e 01 	sts	0x016E, r18	; 0x80016e <X2>
     e04:	30 93 6f 01 	sts	0x016F, r19	; 0x80016f <X2+0x1>
     e08:	40 93 70 01 	sts	0x0170, r20	; 0x800170 <X2+0x2>
     e0c:	50 93 71 01 	sts	0x0171, r21	; 0x800171 <X2+0x3>
	B5 = X1 + X2;
     e10:	d7 01       	movw	r26, r14
     e12:	c6 01       	movw	r24, r12
     e14:	82 0f       	add	r24, r18
     e16:	93 1f       	adc	r25, r19
     e18:	a4 1f       	adc	r26, r20
     e1a:	b5 1f       	adc	r27, r21
     e1c:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <B5>
     e20:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <B5+0x1>
     e24:	a0 93 78 01 	sts	0x0178, r26	; 0x800178 <B5+0x2>
     e28:	b0 93 79 01 	sts	0x0179, r27	; 0x800179 <B5+0x3>
	BaroTemp = (B5 + 8);
	BaroTemp = BaroTemp/16;
     e2c:	ac 01       	movw	r20, r24
     e2e:	bd 01       	movw	r22, r26
     e30:	48 5f       	subi	r20, 0xF8	; 248
     e32:	5f 4f       	sbci	r21, 0xFF	; 255
     e34:	6f 4f       	sbci	r22, 0xFF	; 255
     e36:	7f 4f       	sbci	r23, 0xFF	; 255
     e38:	db 01       	movw	r26, r22
     e3a:	ca 01       	movw	r24, r20
     e3c:	1a f4       	brpl	.+6      	; 0xe44 <convertTemp+0x11c>
     e3e:	0f 96       	adiw	r24, 0x0f	; 15
     e40:	a1 1d       	adc	r26, r1
     e42:	b1 1d       	adc	r27, r1
     e44:	68 94       	set
     e46:	13 f8       	bld	r1, 3
     e48:	b5 95       	asr	r27
     e4a:	a7 95       	ror	r26
     e4c:	97 95       	ror	r25
     e4e:	87 95       	ror	r24
     e50:	16 94       	lsr	r1
     e52:	d1 f7       	brne	.-12     	; 0xe48 <convertTemp+0x120>
     e54:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <BaroTemp>
     e58:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <BaroTemp+0x1>
     e5c:	a0 93 4e 01 	sts	0x014E, r26	; 0x80014e <BaroTemp+0x2>
     e60:	b0 93 4f 01 	sts	0x014F, r27	; 0x80014f <BaroTemp+0x3>
}
     e64:	1f 91       	pop	r17
     e66:	0f 91       	pop	r16
     e68:	ff 90       	pop	r15
     e6a:	ef 90       	pop	r14
     e6c:	df 90       	pop	r13
     e6e:	cf 90       	pop	r12
     e70:	08 95       	ret

00000e72 <Gyro_init>:

// Initializes the Gyro to sample data.
// The range of values sampled is +- 2000 degrees
void Gyro_init(void)
{
	i2c_start();
     e72:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xD0); // +- 2000 degrees/sec
     e76:	80 ed       	ldi	r24, 0xD0	; 208
     e78:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x16);
     e7c:	86 e1       	ldi	r24, 0x16	; 22
     e7e:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x18);
     e82:	88 e1       	ldi	r24, 0x18	; 24
     e84:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     e88:	84 e9       	ldi	r24, 0x94	; 148
     e8a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e8e:	08 95       	ret

00000e90 <Gyro_read>:
	i2c_stop();
}

void Gyro_read(void)
{
	i2c_start();
     e90:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xD0);	// Write
     e94:	80 ed       	ldi	r24, 0xD0	; 208
     e96:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_write(0x1D);	// Address of X MSB
     e9a:	8d e1       	ldi	r24, 0x1D	; 29
     e9c:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	i2c_start();
     ea0:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(0xD1);
     ea4:	81 ed       	ldi	r24, 0xD1	; 209
     ea6:	0e 94 cf 00 	call	0x19e	; 0x19e <i2c_write>
	// Read the raw values into their respective variables
	// The address pointer increments automatically after
	// each read.
	X_Gyro_Raw = i2c_ReadACK() << 8;
     eaa:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     eae:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <X_Gyro_Raw>
     eb2:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <X_Gyro_Raw+0x1>
	X_Gyro_Raw |= i2c_ReadACK();
     eb6:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     eba:	20 91 b2 01 	lds	r18, 0x01B2	; 0x8001b2 <X_Gyro_Raw>
     ebe:	30 91 b3 01 	lds	r19, 0x01B3	; 0x8001b3 <X_Gyro_Raw+0x1>
     ec2:	28 2b       	or	r18, r24
     ec4:	30 93 b3 01 	sts	0x01B3, r19	; 0x8001b3 <X_Gyro_Raw+0x1>
     ec8:	20 93 b2 01 	sts	0x01B2, r18	; 0x8001b2 <X_Gyro_Raw>
	Y_Gyro_Raw = i2c_ReadACK() << 8;
     ecc:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     ed0:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <Y_Gyro_Raw>
     ed4:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <Y_Gyro_Raw+0x1>
	Y_Gyro_Raw |= i2c_ReadACK();
     ed8:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     edc:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <Y_Gyro_Raw>
     ee0:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <Y_Gyro_Raw+0x1>
     ee4:	28 2b       	or	r18, r24
     ee6:	30 93 5f 01 	sts	0x015F, r19	; 0x80015f <Y_Gyro_Raw+0x1>
     eea:	20 93 5e 01 	sts	0x015E, r18	; 0x80015e <Y_Gyro_Raw>
	Z_Gyro_Raw = i2c_ReadACK() << 8;
     eee:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <i2c_ReadACK>
     ef2:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <Z_Gyro_Raw>
     ef6:	80 93 c5 01 	sts	0x01C5, r24	; 0x8001c5 <Z_Gyro_Raw+0x1>
	Z_Gyro_Raw |= i2c_ReadNACK();
     efa:	0e 94 f7 00 	call	0x1ee	; 0x1ee <i2c_ReadNACK>
     efe:	20 91 c4 01 	lds	r18, 0x01C4	; 0x8001c4 <Z_Gyro_Raw>
     f02:	30 91 c5 01 	lds	r19, 0x01C5	; 0x8001c5 <Z_Gyro_Raw+0x1>
     f06:	28 2b       	or	r18, r24
     f08:	30 93 c5 01 	sts	0x01C5, r19	; 0x8001c5 <Z_Gyro_Raw+0x1>
     f0c:	20 93 c4 01 	sts	0x01C4, r18	; 0x8001c4 <Z_Gyro_Raw>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     f10:	84 e9       	ldi	r24, 0x94	; 148
     f12:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     f16:	08 95       	ret

00000f18 <readBarometer>:
// Function to read the values from the barometer
// The values must be read in this order since some of the
// temperature values are used in the barometer conversion.
void readBarometer(void)
{
	readBarometerTemp();
     f18:	0e 94 46 06 	call	0xc8c	; 0xc8c <readBarometerTemp>
	readBarometerUP();
     f1c:	0e 94 27 04 	call	0x84e	; 0x84e <readBarometerUP>
     f20:	08 95       	ret

00000f22 <ConvertValues>:
}


// Converts all the raw values into tangible data that can be used.
void ConvertValues(void)
{
     f22:	cf 92       	push	r12
     f24:	df 92       	push	r13
     f26:	ef 92       	push	r14
     f28:	ff 92       	push	r15
	// Heading from compass
	heading = atan2((double)Yval, (double)Xval); // Returns a value in radians
     f2a:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <Xval>
     f2e:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <Xval+0x1>
     f32:	07 2e       	mov	r0, r23
     f34:	00 0c       	add	r0, r0
     f36:	88 0b       	sbc	r24, r24
     f38:	99 0b       	sbc	r25, r25
     f3a:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__floatsisf>
     f3e:	6b 01       	movw	r12, r22
     f40:	7c 01       	movw	r14, r24
     f42:	60 91 56 01 	lds	r22, 0x0156	; 0x800156 <Yval>
     f46:	70 91 57 01 	lds	r23, 0x0157	; 0x800157 <Yval+0x1>
     f4a:	07 2e       	mov	r0, r23
     f4c:	00 0c       	add	r0, r0
     f4e:	88 0b       	sbc	r24, r24
     f50:	99 0b       	sbc	r25, r25
     f52:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__floatsisf>
     f56:	a7 01       	movw	r20, r14
     f58:	96 01       	movw	r18, r12
     f5a:	0e 94 e5 09 	call	0x13ca	; 0x13ca <atan2>
	// Next three lines convert that radian value to a degree value more
	// commonly seen on a compass
	heading = heading * 180;
	heading = heading /3.14159;
	heading += 180;
     f5e:	20 e0       	ldi	r18, 0x00	; 0
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	44 e3       	ldi	r20, 0x34	; 52
     f64:	53 e4       	ldi	r21, 0x43	; 67
     f66:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <__mulsf3>
     f6a:	20 ed       	ldi	r18, 0xD0	; 208
     f6c:	3f e0       	ldi	r19, 0x0F	; 15
     f6e:	49 e4       	ldi	r20, 0x49	; 73
     f70:	50 e4       	ldi	r21, 0x40	; 64
     f72:	0e 94 44 0a 	call	0x1488	; 0x1488 <__divsf3>
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	44 e3       	ldi	r20, 0x34	; 52
     f7c:	53 e4       	ldi	r21, 0x43	; 67
     f7e:	0e 94 66 09 	call	0x12cc	; 0x12cc <__addsf3>
     f82:	60 93 ce 01 	sts	0x01CE, r22	; 0x8001ce <heading>
     f86:	70 93 cf 01 	sts	0x01CF, r23	; 0x8001cf <heading+0x1>
     f8a:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <heading+0x2>
     f8e:	90 93 d1 01 	sts	0x01D1, r25	; 0x8001d1 <heading+0x3>
	// G force from accelerometer
	// 0.004 is used since that is the value provided by the datasheet
	// Each bit represents 0.004g
	X_accel = X_accel_Raw * 0.004;
     f92:	60 91 7e 01 	lds	r22, 0x017E	; 0x80017e <X_accel_Raw>
     f96:	70 91 7f 01 	lds	r23, 0x017F	; 0x80017f <X_accel_Raw+0x1>
     f9a:	07 2e       	mov	r0, r23
     f9c:	00 0c       	add	r0, r0
     f9e:	88 0b       	sbc	r24, r24
     fa0:	99 0b       	sbc	r25, r25
     fa2:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__floatsisf>
     fa6:	2f e6       	ldi	r18, 0x6F	; 111
     fa8:	32 e1       	ldi	r19, 0x12	; 18
     faa:	43 e8       	ldi	r20, 0x83	; 131
     fac:	5b e3       	ldi	r21, 0x3B	; 59
     fae:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <__mulsf3>
     fb2:	60 93 c6 01 	sts	0x01C6, r22	; 0x8001c6 <X_accel>
     fb6:	70 93 c7 01 	sts	0x01C7, r23	; 0x8001c7 <X_accel+0x1>
     fba:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <X_accel+0x2>
     fbe:	90 93 c9 01 	sts	0x01C9, r25	; 0x8001c9 <X_accel+0x3>
	Y_accel = Y_accel_Raw * 0.004;
     fc2:	60 91 68 01 	lds	r22, 0x0168	; 0x800168 <Y_accel_Raw>
     fc6:	70 91 69 01 	lds	r23, 0x0169	; 0x800169 <Y_accel_Raw+0x1>
     fca:	07 2e       	mov	r0, r23
     fcc:	00 0c       	add	r0, r0
     fce:	88 0b       	sbc	r24, r24
     fd0:	99 0b       	sbc	r25, r25
     fd2:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__floatsisf>
     fd6:	2f e6       	ldi	r18, 0x6F	; 111
     fd8:	32 e1       	ldi	r19, 0x12	; 18
     fda:	43 e8       	ldi	r20, 0x83	; 131
     fdc:	5b e3       	ldi	r21, 0x3B	; 59
     fde:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <__mulsf3>
     fe2:	60 93 8a 01 	sts	0x018A, r22	; 0x80018a <Y_accel>
     fe6:	70 93 8b 01 	sts	0x018B, r23	; 0x80018b <Y_accel+0x1>
     fea:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <Y_accel+0x2>
     fee:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <Y_accel+0x3>
	Z_accel = Z_accel_Raw * 0.004;
     ff2:	60 91 88 01 	lds	r22, 0x0188	; 0x800188 <Z_accel_Raw>
     ff6:	70 91 89 01 	lds	r23, 0x0189	; 0x800189 <Z_accel_Raw+0x1>
     ffa:	07 2e       	mov	r0, r23
     ffc:	00 0c       	add	r0, r0
     ffe:	88 0b       	sbc	r24, r24
    1000:	99 0b       	sbc	r25, r25
    1002:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__floatsisf>
    1006:	2f e6       	ldi	r18, 0x6F	; 111
    1008:	32 e1       	ldi	r19, 0x12	; 18
    100a:	43 e8       	ldi	r20, 0x83	; 131
    100c:	5b e3       	ldi	r21, 0x3B	; 59
    100e:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <__mulsf3>
    1012:	60 93 aa 01 	sts	0x01AA, r22	; 0x8001aa <Z_accel>
    1016:	70 93 ab 01 	sts	0x01AB, r23	; 0x8001ab <Z_accel+0x1>
    101a:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <Z_accel+0x2>
    101e:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <Z_accel+0x3>
	// Convert Barometer Values
	// Values must be converted in this order since the pressure relies
	// on a few temperature variables.
	convertTemp();
    1022:	0e 94 94 06 	call	0xd28	; 0xd28 <convertTemp>
	ConvertUP();
    1026:	0e 94 26 02 	call	0x44c	; 0x44c <ConvertUP>
	// BaroTemp is 10x larger than actual Celsius value
	TempC = BaroTemp / 10.0;
    102a:	60 91 4c 01 	lds	r22, 0x014C	; 0x80014c <BaroTemp>
    102e:	70 91 4d 01 	lds	r23, 0x014D	; 0x80014d <BaroTemp+0x1>
    1032:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <BaroTemp+0x2>
    1036:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <BaroTemp+0x3>
    103a:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__floatsisf>
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	30 e0       	ldi	r19, 0x00	; 0
    1042:	40 e2       	ldi	r20, 0x20	; 32
    1044:	51 e4       	ldi	r21, 0x41	; 65
    1046:	0e 94 44 0a 	call	0x1488	; 0x1488 <__divsf3>
    104a:	60 93 44 01 	sts	0x0144, r22	; 0x800144 <__data_end>
    104e:	70 93 45 01 	sts	0x0145, r23	; 0x800145 <__data_end+0x1>
    1052:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <__data_end+0x2>
    1056:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <__data_end+0x3>
	// Altitude formula
	altitude = pow(UP/ Std_Pressure, 0.190284);
    105a:	60 91 50 01 	lds	r22, 0x0150	; 0x800150 <UP>
    105e:	70 91 51 01 	lds	r23, 0x0151	; 0x800151 <UP+0x1>
    1062:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <UP+0x2>
    1066:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <UP+0x3>
    106a:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__floatsisf>
    106e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <Std_Pressure>
    1072:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <Std_Pressure+0x1>
    1076:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <Std_Pressure+0x2>
    107a:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <Std_Pressure+0x3>
    107e:	0e 94 44 0a 	call	0x1488	; 0x1488 <__divsf3>
    1082:	2f ec       	ldi	r18, 0xCF	; 207
    1084:	39 ed       	ldi	r19, 0xD9	; 217
    1086:	42 e4       	ldi	r20, 0x42	; 66
    1088:	5e e3       	ldi	r21, 0x3E	; 62
    108a:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <pow>
    108e:	9b 01       	movw	r18, r22
    1090:	ac 01       	movw	r20, r24
	altitude = 1 - altitude;
	altitude = altitude * 44330;
	altitude = altitude * 3.28084;
    1092:	60 e0       	ldi	r22, 0x00	; 0
    1094:	70 e0       	ldi	r23, 0x00	; 0
    1096:	80 e8       	ldi	r24, 0x80	; 128
    1098:	9f e3       	ldi	r25, 0x3F	; 63
    109a:	0e 94 65 09 	call	0x12ca	; 0x12ca <__subsf3>
    109e:	20 e0       	ldi	r18, 0x00	; 0
    10a0:	3a e2       	ldi	r19, 0x2A	; 42
    10a2:	4d e2       	ldi	r20, 0x2D	; 45
    10a4:	57 e4       	ldi	r21, 0x47	; 71
    10a6:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <__mulsf3>
    10aa:	28 e4       	ldi	r18, 0x48	; 72
    10ac:	39 ef       	ldi	r19, 0xF9	; 249
    10ae:	41 e5       	ldi	r20, 0x51	; 81
    10b0:	50 e4       	ldi	r21, 0x40	; 64
    10b2:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <__mulsf3>
    10b6:	60 93 48 01 	sts	0x0148, r22	; 0x800148 <altitude>
    10ba:	70 93 49 01 	sts	0x0149, r23	; 0x800149 <altitude+0x1>
    10be:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <altitude+0x2>
    10c2:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <altitude+0x3>
	// Gyro Values
	// Value to divide by is given in the datsheet for the conversion
	X_Gyro = X_Gyro_Raw / 14.375;
    10c6:	60 91 b2 01 	lds	r22, 0x01B2	; 0x8001b2 <X_Gyro_Raw>
    10ca:	70 91 b3 01 	lds	r23, 0x01B3	; 0x8001b3 <X_Gyro_Raw+0x1>
    10ce:	07 2e       	mov	r0, r23
    10d0:	00 0c       	add	r0, r0
    10d2:	88 0b       	sbc	r24, r24
    10d4:	99 0b       	sbc	r25, r25
    10d6:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__floatsisf>
    10da:	20 e0       	ldi	r18, 0x00	; 0
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	46 e6       	ldi	r20, 0x66	; 102
    10e0:	51 e4       	ldi	r21, 0x41	; 65
    10e2:	0e 94 44 0a 	call	0x1488	; 0x1488 <__divsf3>
    10e6:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <X_Gyro>
    10ea:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <X_Gyro+0x1>
    10ee:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <X_Gyro+0x2>
    10f2:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <X_Gyro+0x3>
	Y_Gyro = Y_Gyro_Raw / 14.375;
    10f6:	60 91 5e 01 	lds	r22, 0x015E	; 0x80015e <Y_Gyro_Raw>
    10fa:	70 91 5f 01 	lds	r23, 0x015F	; 0x80015f <Y_Gyro_Raw+0x1>
    10fe:	07 2e       	mov	r0, r23
    1100:	00 0c       	add	r0, r0
    1102:	88 0b       	sbc	r24, r24
    1104:	99 0b       	sbc	r25, r25
    1106:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__floatsisf>
    110a:	20 e0       	ldi	r18, 0x00	; 0
    110c:	30 e0       	ldi	r19, 0x00	; 0
    110e:	46 e6       	ldi	r20, 0x66	; 102
    1110:	51 e4       	ldi	r21, 0x41	; 65
    1112:	0e 94 44 0a 	call	0x1488	; 0x1488 <__divsf3>
    1116:	60 93 a2 01 	sts	0x01A2, r22	; 0x8001a2 <Y_Gyro>
    111a:	70 93 a3 01 	sts	0x01A3, r23	; 0x8001a3 <Y_Gyro+0x1>
    111e:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <Y_Gyro+0x2>
    1122:	90 93 a5 01 	sts	0x01A5, r25	; 0x8001a5 <Y_Gyro+0x3>
	Z_Gyro = Z_Gyro_Raw / 14.375;
    1126:	60 91 c4 01 	lds	r22, 0x01C4	; 0x8001c4 <Z_Gyro_Raw>
    112a:	70 91 c5 01 	lds	r23, 0x01C5	; 0x8001c5 <Z_Gyro_Raw+0x1>
    112e:	07 2e       	mov	r0, r23
    1130:	00 0c       	add	r0, r0
    1132:	88 0b       	sbc	r24, r24
    1134:	99 0b       	sbc	r25, r25
    1136:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__floatsisf>
    113a:	20 e0       	ldi	r18, 0x00	; 0
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	46 e6       	ldi	r20, 0x66	; 102
    1140:	51 e4       	ldi	r21, 0x41	; 65
    1142:	0e 94 44 0a 	call	0x1488	; 0x1488 <__divsf3>
    1146:	60 93 80 01 	sts	0x0180, r22	; 0x800180 <Z_Gyro>
    114a:	70 93 81 01 	sts	0x0181, r23	; 0x800181 <Z_Gyro+0x1>
    114e:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <Z_Gyro+0x2>
    1152:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <Z_Gyro+0x3>
}
    1156:	ff 90       	pop	r15
    1158:	ef 90       	pop	r14
    115a:	df 90       	pop	r13
    115c:	cf 90       	pop	r12
    115e:	08 95       	ret

00001160 <main>:
void ConvertValues(void); // Converts raw values to usable real values


int main(void)
{
	USART0init(); // Enable the USART
    1160:	0e 94 79 01 	call	0x2f2	; 0x2f2 <USART0init>
	stdin=stdout=&usart0_str;
    1164:	e2 ed       	ldi	r30, 0xD2	; 210
    1166:	f1 e0       	ldi	r31, 0x01	; 1
    1168:	84 e0       	ldi	r24, 0x04	; 4
    116a:	91 e0       	ldi	r25, 0x01	; 1
    116c:	93 83       	std	Z+3, r25	; 0x03
    116e:	82 83       	std	Z+2, r24	; 0x02
    1170:	91 83       	std	Z+1, r25	; 0x01
    1172:	80 83       	st	Z, r24

	i2c_init();
    1174:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <i2c_init>
	delay();
    1178:	0e 94 87 01 	call	0x30e	; 0x30e <delay>
    117c:	2f ef       	ldi	r18, 0xFF	; 255
    117e:	81 ee       	ldi	r24, 0xE1	; 225
    1180:	94 e0       	ldi	r25, 0x04	; 4
    1182:	21 50       	subi	r18, 0x01	; 1
    1184:	80 40       	sbci	r24, 0x00	; 0
    1186:	90 40       	sbci	r25, 0x00	; 0
    1188:	e1 f7       	brne	.-8      	; 0x1182 <main+0x22>
    118a:	00 c0       	rjmp	.+0      	; 0x118c <main+0x2c>
    118c:	00 00       	nop
	_delay_ms(100);		// Allow the sensor to boot
	// Initialize all the sensors
	i2c_CompassSetUp();
    118e:	0e 94 02 01 	call	0x204	; 0x204 <i2c_CompassSetUp>
	i2c_AccelSetUp();
    1192:	0e 94 17 02 	call	0x42e	; 0x42e <i2c_AccelSetUp>
	Gyro_init();
    1196:	0e 94 39 07 	call	0xe72	; 0xe72 <Gyro_init>
    119a:	2f ef       	ldi	r18, 0xFF	; 255
    119c:	81 ee       	ldi	r24, 0xE1	; 225
    119e:	94 e0       	ldi	r25, 0x04	; 4
    11a0:	21 50       	subi	r18, 0x01	; 1
    11a2:	80 40       	sbci	r24, 0x00	; 0
    11a4:	90 40       	sbci	r25, 0x00	; 0
    11a6:	e1 f7       	brne	.-8      	; 0x11a0 <main+0x40>
    11a8:	00 c0       	rjmp	.+0      	; 0x11aa <main+0x4a>
    11aa:	00 00       	nop
		getBarometerCalibrations(); // This must be done every time since values may change
		readBarometer();		
		Gyro_read();
		ConvertValues();
		// Send the values to the ESP8266
		printf("%.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %d\n",
    11ac:	c2 e1       	ldi	r28, 0x12	; 18
    11ae:	d1 e0       	ldi	r29, 0x01	; 1
	Gyro_init();
	
	_delay_ms(100);  // Allow for modules to boot	
	while (1)
	{
		i2c_ReadCompass();
    11b0:	0e 94 24 01 	call	0x248	; 0x248 <i2c_ReadCompass>
		i2c_ReadAccel();
    11b4:	0e 94 92 01 	call	0x324	; 0x324 <i2c_ReadAccel>
		getBarometerCalibrations(); // This must be done every time since values may change
    11b8:	0e 94 a9 04 	call	0x952	; 0x952 <getBarometerCalibrations>
		readBarometer();		
    11bc:	0e 94 8c 07 	call	0xf18	; 0xf18 <readBarometer>
		Gyro_read();
    11c0:	0e 94 48 07 	call	0xe90	; 0xe90 <Gyro_read>
		ConvertValues();
    11c4:	0e 94 91 07 	call	0xf22	; 0xf22 <ConvertValues>
		// Send the values to the ESP8266
		printf("%.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %d\n",
    11c8:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <Zval+0x1>
    11cc:	8f 93       	push	r24
    11ce:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <Zval>
    11d2:	8f 93       	push	r24
    11d4:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <heading+0x3>
    11d8:	8f 93       	push	r24
    11da:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <heading+0x2>
    11de:	8f 93       	push	r24
    11e0:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <heading+0x1>
    11e4:	8f 93       	push	r24
    11e6:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <heading>
    11ea:	8f 93       	push	r24
    11ec:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <Z_Gyro+0x3>
    11f0:	8f 93       	push	r24
    11f2:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <Z_Gyro+0x2>
    11f6:	8f 93       	push	r24
    11f8:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <Z_Gyro+0x1>
    11fc:	8f 93       	push	r24
    11fe:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <Z_Gyro>
    1202:	8f 93       	push	r24
    1204:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <Y_Gyro+0x3>
    1208:	8f 93       	push	r24
    120a:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <Y_Gyro+0x2>
    120e:	8f 93       	push	r24
    1210:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <Y_Gyro+0x1>
    1214:	8f 93       	push	r24
    1216:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <Y_Gyro>
    121a:	8f 93       	push	r24
    121c:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <X_Gyro+0x3>
    1220:	8f 93       	push	r24
    1222:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <X_Gyro+0x2>
    1226:	8f 93       	push	r24
    1228:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <X_Gyro+0x1>
    122c:	8f 93       	push	r24
    122e:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <X_Gyro>
    1232:	8f 93       	push	r24
    1234:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <__data_end+0x3>
    1238:	8f 93       	push	r24
    123a:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <__data_end+0x2>
    123e:	8f 93       	push	r24
    1240:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <__data_end+0x1>
    1244:	8f 93       	push	r24
    1246:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
    124a:	8f 93       	push	r24
    124c:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <altitude+0x3>
    1250:	8f 93       	push	r24
    1252:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <altitude+0x2>
    1256:	8f 93       	push	r24
    1258:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <altitude+0x1>
    125c:	8f 93       	push	r24
    125e:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <altitude>
    1262:	8f 93       	push	r24
    1264:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <Z_accel+0x3>
    1268:	8f 93       	push	r24
    126a:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <Z_accel+0x2>
    126e:	8f 93       	push	r24
    1270:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <Z_accel+0x1>
    1274:	8f 93       	push	r24
    1276:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <Z_accel>
    127a:	8f 93       	push	r24
    127c:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <Y_accel+0x3>
    1280:	8f 93       	push	r24
    1282:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <Y_accel+0x2>
    1286:	8f 93       	push	r24
    1288:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <Y_accel+0x1>
    128c:	8f 93       	push	r24
    128e:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <Y_accel>
    1292:	8f 93       	push	r24
    1294:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <X_accel+0x3>
    1298:	8f 93       	push	r24
    129a:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <X_accel+0x2>
    129e:	8f 93       	push	r24
    12a0:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <X_accel+0x1>
    12a4:	8f 93       	push	r24
    12a6:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <X_accel>
    12aa:	8f 93       	push	r24
    12ac:	df 93       	push	r29
    12ae:	cf 93       	push	r28
    12b0:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <printf>
		X_accel, Y_accel, Z_accel, altitude, TempC, X_Gyro, Y_Gyro, Z_Gyro, heading, Zval);
		// Wait one second before reading new values
		delay();
    12b4:	8d b7       	in	r24, 0x3d	; 61
    12b6:	9e b7       	in	r25, 0x3e	; 62
    12b8:	88 96       	adiw	r24, 0x28	; 40
    12ba:	0f b6       	in	r0, 0x3f	; 63
    12bc:	f8 94       	cli
    12be:	9e bf       	out	0x3e, r25	; 62
    12c0:	0f be       	out	0x3f, r0	; 63
    12c2:	8d bf       	out	0x3d, r24	; 61
    12c4:	0e 94 87 01 	call	0x30e	; 0x30e <delay>
    12c8:	73 cf       	rjmp	.-282    	; 0x11b0 <main+0x50>

000012ca <__subsf3>:
    12ca:	50 58       	subi	r21, 0x80	; 128

000012cc <__addsf3>:
    12cc:	bb 27       	eor	r27, r27
    12ce:	aa 27       	eor	r26, r26
    12d0:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__addsf3x>
    12d4:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__fp_round>
    12d8:	0e 94 23 0b 	call	0x1646	; 0x1646 <__fp_pscA>
    12dc:	38 f0       	brcs	.+14     	; 0x12ec <__addsf3+0x20>
    12de:	0e 94 2a 0b 	call	0x1654	; 0x1654 <__fp_pscB>
    12e2:	20 f0       	brcs	.+8      	; 0x12ec <__addsf3+0x20>
    12e4:	39 f4       	brne	.+14     	; 0x12f4 <__addsf3+0x28>
    12e6:	9f 3f       	cpi	r25, 0xFF	; 255
    12e8:	19 f4       	brne	.+6      	; 0x12f0 <__addsf3+0x24>
    12ea:	26 f4       	brtc	.+8      	; 0x12f4 <__addsf3+0x28>
    12ec:	0c 94 f9 0a 	jmp	0x15f2	; 0x15f2 <__fp_nan>
    12f0:	0e f4       	brtc	.+2      	; 0x12f4 <__addsf3+0x28>
    12f2:	e0 95       	com	r30
    12f4:	e7 fb       	bst	r30, 7
    12f6:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>

000012fa <__addsf3x>:
    12fa:	e9 2f       	mov	r30, r25
    12fc:	0e 94 42 0b 	call	0x1684	; 0x1684 <__fp_split3>
    1300:	58 f3       	brcs	.-42     	; 0x12d8 <__addsf3+0xc>
    1302:	ba 17       	cp	r27, r26
    1304:	62 07       	cpc	r22, r18
    1306:	73 07       	cpc	r23, r19
    1308:	84 07       	cpc	r24, r20
    130a:	95 07       	cpc	r25, r21
    130c:	20 f0       	brcs	.+8      	; 0x1316 <__addsf3x+0x1c>
    130e:	79 f4       	brne	.+30     	; 0x132e <__addsf3x+0x34>
    1310:	a6 f5       	brtc	.+104    	; 0x137a <__addsf3x+0x80>
    1312:	0c 94 64 0b 	jmp	0x16c8	; 0x16c8 <__fp_zero>
    1316:	0e f4       	brtc	.+2      	; 0x131a <__addsf3x+0x20>
    1318:	e0 95       	com	r30
    131a:	0b 2e       	mov	r0, r27
    131c:	ba 2f       	mov	r27, r26
    131e:	a0 2d       	mov	r26, r0
    1320:	0b 01       	movw	r0, r22
    1322:	b9 01       	movw	r22, r18
    1324:	90 01       	movw	r18, r0
    1326:	0c 01       	movw	r0, r24
    1328:	ca 01       	movw	r24, r20
    132a:	a0 01       	movw	r20, r0
    132c:	11 24       	eor	r1, r1
    132e:	ff 27       	eor	r31, r31
    1330:	59 1b       	sub	r21, r25
    1332:	99 f0       	breq	.+38     	; 0x135a <__addsf3x+0x60>
    1334:	59 3f       	cpi	r21, 0xF9	; 249
    1336:	50 f4       	brcc	.+20     	; 0x134c <__addsf3x+0x52>
    1338:	50 3e       	cpi	r21, 0xE0	; 224
    133a:	68 f1       	brcs	.+90     	; 0x1396 <__addsf3x+0x9c>
    133c:	1a 16       	cp	r1, r26
    133e:	f0 40       	sbci	r31, 0x00	; 0
    1340:	a2 2f       	mov	r26, r18
    1342:	23 2f       	mov	r18, r19
    1344:	34 2f       	mov	r19, r20
    1346:	44 27       	eor	r20, r20
    1348:	58 5f       	subi	r21, 0xF8	; 248
    134a:	f3 cf       	rjmp	.-26     	; 0x1332 <__addsf3x+0x38>
    134c:	46 95       	lsr	r20
    134e:	37 95       	ror	r19
    1350:	27 95       	ror	r18
    1352:	a7 95       	ror	r26
    1354:	f0 40       	sbci	r31, 0x00	; 0
    1356:	53 95       	inc	r21
    1358:	c9 f7       	brne	.-14     	; 0x134c <__addsf3x+0x52>
    135a:	7e f4       	brtc	.+30     	; 0x137a <__addsf3x+0x80>
    135c:	1f 16       	cp	r1, r31
    135e:	ba 0b       	sbc	r27, r26
    1360:	62 0b       	sbc	r22, r18
    1362:	73 0b       	sbc	r23, r19
    1364:	84 0b       	sbc	r24, r20
    1366:	ba f0       	brmi	.+46     	; 0x1396 <__addsf3x+0x9c>
    1368:	91 50       	subi	r25, 0x01	; 1
    136a:	a1 f0       	breq	.+40     	; 0x1394 <__addsf3x+0x9a>
    136c:	ff 0f       	add	r31, r31
    136e:	bb 1f       	adc	r27, r27
    1370:	66 1f       	adc	r22, r22
    1372:	77 1f       	adc	r23, r23
    1374:	88 1f       	adc	r24, r24
    1376:	c2 f7       	brpl	.-16     	; 0x1368 <__addsf3x+0x6e>
    1378:	0e c0       	rjmp	.+28     	; 0x1396 <__addsf3x+0x9c>
    137a:	ba 0f       	add	r27, r26
    137c:	62 1f       	adc	r22, r18
    137e:	73 1f       	adc	r23, r19
    1380:	84 1f       	adc	r24, r20
    1382:	48 f4       	brcc	.+18     	; 0x1396 <__addsf3x+0x9c>
    1384:	87 95       	ror	r24
    1386:	77 95       	ror	r23
    1388:	67 95       	ror	r22
    138a:	b7 95       	ror	r27
    138c:	f7 95       	ror	r31
    138e:	9e 3f       	cpi	r25, 0xFE	; 254
    1390:	08 f0       	brcs	.+2      	; 0x1394 <__addsf3x+0x9a>
    1392:	b0 cf       	rjmp	.-160    	; 0x12f4 <__addsf3+0x28>
    1394:	93 95       	inc	r25
    1396:	88 0f       	add	r24, r24
    1398:	08 f0       	brcs	.+2      	; 0x139c <__addsf3x+0xa2>
    139a:	99 27       	eor	r25, r25
    139c:	ee 0f       	add	r30, r30
    139e:	97 95       	ror	r25
    13a0:	87 95       	ror	r24
    13a2:	08 95       	ret
    13a4:	0e 94 23 0b 	call	0x1646	; 0x1646 <__fp_pscA>
    13a8:	60 f0       	brcs	.+24     	; 0x13c2 <__addsf3x+0xc8>
    13aa:	80 e8       	ldi	r24, 0x80	; 128
    13ac:	91 e0       	ldi	r25, 0x01	; 1
    13ae:	09 f4       	brne	.+2      	; 0x13b2 <__addsf3x+0xb8>
    13b0:	9e ef       	ldi	r25, 0xFE	; 254
    13b2:	0e 94 2a 0b 	call	0x1654	; 0x1654 <__fp_pscB>
    13b6:	28 f0       	brcs	.+10     	; 0x13c2 <__addsf3x+0xc8>
    13b8:	40 e8       	ldi	r20, 0x80	; 128
    13ba:	51 e0       	ldi	r21, 0x01	; 1
    13bc:	71 f4       	brne	.+28     	; 0x13da <atan2+0x10>
    13be:	5e ef       	ldi	r21, 0xFE	; 254
    13c0:	0c c0       	rjmp	.+24     	; 0x13da <atan2+0x10>
    13c2:	0c 94 f9 0a 	jmp	0x15f2	; 0x15f2 <__fp_nan>
    13c6:	0c 94 64 0b 	jmp	0x16c8	; 0x16c8 <__fp_zero>

000013ca <atan2>:
    13ca:	e9 2f       	mov	r30, r25
    13cc:	e0 78       	andi	r30, 0x80	; 128
    13ce:	0e 94 42 0b 	call	0x1684	; 0x1684 <__fp_split3>
    13d2:	40 f3       	brcs	.-48     	; 0x13a4 <__addsf3x+0xaa>
    13d4:	09 2e       	mov	r0, r25
    13d6:	05 2a       	or	r0, r21
    13d8:	b1 f3       	breq	.-20     	; 0x13c6 <__addsf3x+0xcc>
    13da:	26 17       	cp	r18, r22
    13dc:	37 07       	cpc	r19, r23
    13de:	48 07       	cpc	r20, r24
    13e0:	59 07       	cpc	r21, r25
    13e2:	38 f0       	brcs	.+14     	; 0x13f2 <atan2+0x28>
    13e4:	0e 2e       	mov	r0, r30
    13e6:	07 f8       	bld	r0, 7
    13e8:	e0 25       	eor	r30, r0
    13ea:	69 f0       	breq	.+26     	; 0x1406 <atan2+0x3c>
    13ec:	e0 25       	eor	r30, r0
    13ee:	e0 64       	ori	r30, 0x40	; 64
    13f0:	0a c0       	rjmp	.+20     	; 0x1406 <atan2+0x3c>
    13f2:	ef 63       	ori	r30, 0x3F	; 63
    13f4:	07 f8       	bld	r0, 7
    13f6:	00 94       	com	r0
    13f8:	07 fa       	bst	r0, 7
    13fa:	db 01       	movw	r26, r22
    13fc:	b9 01       	movw	r22, r18
    13fe:	9d 01       	movw	r18, r26
    1400:	dc 01       	movw	r26, r24
    1402:	ca 01       	movw	r24, r20
    1404:	ad 01       	movw	r20, r26
    1406:	ef 93       	push	r30
    1408:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <__divsf3_pse>
    140c:	0e 94 31 0b 	call	0x1662	; 0x1662 <__fp_round>
    1410:	0e 94 15 0a 	call	0x142a	; 0x142a <atan>
    1414:	5f 91       	pop	r21
    1416:	55 23       	and	r21, r21
    1418:	39 f0       	breq	.+14     	; 0x1428 <atan2+0x5e>
    141a:	2b ed       	ldi	r18, 0xDB	; 219
    141c:	3f e0       	ldi	r19, 0x0F	; 15
    141e:	49 e4       	ldi	r20, 0x49	; 73
    1420:	50 fd       	sbrc	r21, 0
    1422:	49 ec       	ldi	r20, 0xC9	; 201
    1424:	0c 94 66 09 	jmp	0x12cc	; 0x12cc <__addsf3>
    1428:	08 95       	ret

0000142a <atan>:
    142a:	df 93       	push	r29
    142c:	dd 27       	eor	r29, r29
    142e:	b9 2f       	mov	r27, r25
    1430:	bf 77       	andi	r27, 0x7F	; 127
    1432:	40 e8       	ldi	r20, 0x80	; 128
    1434:	5f e3       	ldi	r21, 0x3F	; 63
    1436:	16 16       	cp	r1, r22
    1438:	17 06       	cpc	r1, r23
    143a:	48 07       	cpc	r20, r24
    143c:	5b 07       	cpc	r21, r27
    143e:	18 f4       	brcc	.+6      	; 0x1446 <atan+0x1c>
    1440:	d9 2f       	mov	r29, r25
    1442:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <inverse>
    1446:	9f 93       	push	r25
    1448:	8f 93       	push	r24
    144a:	7f 93       	push	r23
    144c:	6f 93       	push	r22
    144e:	0e 94 30 0c 	call	0x1860	; 0x1860 <square>
    1452:	e8 e6       	ldi	r30, 0x68	; 104
    1454:	f0 e0       	ldi	r31, 0x00	; 0
    1456:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <__fp_powser>
    145a:	0e 94 31 0b 	call	0x1662	; 0x1662 <__fp_round>
    145e:	2f 91       	pop	r18
    1460:	3f 91       	pop	r19
    1462:	4f 91       	pop	r20
    1464:	5f 91       	pop	r21
    1466:	0e 94 86 0b 	call	0x170c	; 0x170c <__mulsf3x>
    146a:	dd 23       	and	r29, r29
    146c:	51 f0       	breq	.+20     	; 0x1482 <atan+0x58>
    146e:	90 58       	subi	r25, 0x80	; 128
    1470:	a2 ea       	ldi	r26, 0xA2	; 162
    1472:	2a ed       	ldi	r18, 0xDA	; 218
    1474:	3f e0       	ldi	r19, 0x0F	; 15
    1476:	49 ec       	ldi	r20, 0xC9	; 201
    1478:	5f e3       	ldi	r21, 0x3F	; 63
    147a:	d0 78       	andi	r29, 0x80	; 128
    147c:	5d 27       	eor	r21, r29
    147e:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__addsf3x>
    1482:	df 91       	pop	r29
    1484:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__fp_round>

00001488 <__divsf3>:
    1488:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__divsf3x>
    148c:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__fp_round>
    1490:	0e 94 2a 0b 	call	0x1654	; 0x1654 <__fp_pscB>
    1494:	58 f0       	brcs	.+22     	; 0x14ac <__divsf3+0x24>
    1496:	0e 94 23 0b 	call	0x1646	; 0x1646 <__fp_pscA>
    149a:	40 f0       	brcs	.+16     	; 0x14ac <__divsf3+0x24>
    149c:	29 f4       	brne	.+10     	; 0x14a8 <__divsf3+0x20>
    149e:	5f 3f       	cpi	r21, 0xFF	; 255
    14a0:	29 f0       	breq	.+10     	; 0x14ac <__divsf3+0x24>
    14a2:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>
    14a6:	51 11       	cpse	r21, r1
    14a8:	0c 94 65 0b 	jmp	0x16ca	; 0x16ca <__fp_szero>
    14ac:	0c 94 f9 0a 	jmp	0x15f2	; 0x15f2 <__fp_nan>

000014b0 <__divsf3x>:
    14b0:	0e 94 42 0b 	call	0x1684	; 0x1684 <__fp_split3>
    14b4:	68 f3       	brcs	.-38     	; 0x1490 <__divsf3+0x8>

000014b6 <__divsf3_pse>:
    14b6:	99 23       	and	r25, r25
    14b8:	b1 f3       	breq	.-20     	; 0x14a6 <__divsf3+0x1e>
    14ba:	55 23       	and	r21, r21
    14bc:	91 f3       	breq	.-28     	; 0x14a2 <__divsf3+0x1a>
    14be:	95 1b       	sub	r25, r21
    14c0:	55 0b       	sbc	r21, r21
    14c2:	bb 27       	eor	r27, r27
    14c4:	aa 27       	eor	r26, r26
    14c6:	62 17       	cp	r22, r18
    14c8:	73 07       	cpc	r23, r19
    14ca:	84 07       	cpc	r24, r20
    14cc:	38 f0       	brcs	.+14     	; 0x14dc <__divsf3_pse+0x26>
    14ce:	9f 5f       	subi	r25, 0xFF	; 255
    14d0:	5f 4f       	sbci	r21, 0xFF	; 255
    14d2:	22 0f       	add	r18, r18
    14d4:	33 1f       	adc	r19, r19
    14d6:	44 1f       	adc	r20, r20
    14d8:	aa 1f       	adc	r26, r26
    14da:	a9 f3       	breq	.-22     	; 0x14c6 <__divsf3_pse+0x10>
    14dc:	35 d0       	rcall	.+106    	; 0x1548 <__divsf3_pse+0x92>
    14de:	0e 2e       	mov	r0, r30
    14e0:	3a f0       	brmi	.+14     	; 0x14f0 <__divsf3_pse+0x3a>
    14e2:	e0 e8       	ldi	r30, 0x80	; 128
    14e4:	32 d0       	rcall	.+100    	; 0x154a <__divsf3_pse+0x94>
    14e6:	91 50       	subi	r25, 0x01	; 1
    14e8:	50 40       	sbci	r21, 0x00	; 0
    14ea:	e6 95       	lsr	r30
    14ec:	00 1c       	adc	r0, r0
    14ee:	ca f7       	brpl	.-14     	; 0x14e2 <__divsf3_pse+0x2c>
    14f0:	2b d0       	rcall	.+86     	; 0x1548 <__divsf3_pse+0x92>
    14f2:	fe 2f       	mov	r31, r30
    14f4:	29 d0       	rcall	.+82     	; 0x1548 <__divsf3_pse+0x92>
    14f6:	66 0f       	add	r22, r22
    14f8:	77 1f       	adc	r23, r23
    14fa:	88 1f       	adc	r24, r24
    14fc:	bb 1f       	adc	r27, r27
    14fe:	26 17       	cp	r18, r22
    1500:	37 07       	cpc	r19, r23
    1502:	48 07       	cpc	r20, r24
    1504:	ab 07       	cpc	r26, r27
    1506:	b0 e8       	ldi	r27, 0x80	; 128
    1508:	09 f0       	breq	.+2      	; 0x150c <__divsf3_pse+0x56>
    150a:	bb 0b       	sbc	r27, r27
    150c:	80 2d       	mov	r24, r0
    150e:	bf 01       	movw	r22, r30
    1510:	ff 27       	eor	r31, r31
    1512:	93 58       	subi	r25, 0x83	; 131
    1514:	5f 4f       	sbci	r21, 0xFF	; 255
    1516:	3a f0       	brmi	.+14     	; 0x1526 <__divsf3_pse+0x70>
    1518:	9e 3f       	cpi	r25, 0xFE	; 254
    151a:	51 05       	cpc	r21, r1
    151c:	78 f0       	brcs	.+30     	; 0x153c <__divsf3_pse+0x86>
    151e:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>
    1522:	0c 94 65 0b 	jmp	0x16ca	; 0x16ca <__fp_szero>
    1526:	5f 3f       	cpi	r21, 0xFF	; 255
    1528:	e4 f3       	brlt	.-8      	; 0x1522 <__divsf3_pse+0x6c>
    152a:	98 3e       	cpi	r25, 0xE8	; 232
    152c:	d4 f3       	brlt	.-12     	; 0x1522 <__divsf3_pse+0x6c>
    152e:	86 95       	lsr	r24
    1530:	77 95       	ror	r23
    1532:	67 95       	ror	r22
    1534:	b7 95       	ror	r27
    1536:	f7 95       	ror	r31
    1538:	9f 5f       	subi	r25, 0xFF	; 255
    153a:	c9 f7       	brne	.-14     	; 0x152e <__divsf3_pse+0x78>
    153c:	88 0f       	add	r24, r24
    153e:	91 1d       	adc	r25, r1
    1540:	96 95       	lsr	r25
    1542:	87 95       	ror	r24
    1544:	97 f9       	bld	r25, 7
    1546:	08 95       	ret
    1548:	e1 e0       	ldi	r30, 0x01	; 1
    154a:	66 0f       	add	r22, r22
    154c:	77 1f       	adc	r23, r23
    154e:	88 1f       	adc	r24, r24
    1550:	bb 1f       	adc	r27, r27
    1552:	62 17       	cp	r22, r18
    1554:	73 07       	cpc	r23, r19
    1556:	84 07       	cpc	r24, r20
    1558:	ba 07       	cpc	r27, r26
    155a:	20 f0       	brcs	.+8      	; 0x1564 <__divsf3_pse+0xae>
    155c:	62 1b       	sub	r22, r18
    155e:	73 0b       	sbc	r23, r19
    1560:	84 0b       	sbc	r24, r20
    1562:	ba 0b       	sbc	r27, r26
    1564:	ee 1f       	adc	r30, r30
    1566:	88 f7       	brcc	.-30     	; 0x154a <__divsf3_pse+0x94>
    1568:	e0 95       	com	r30
    156a:	08 95       	ret

0000156c <__floatunsisf>:
    156c:	e8 94       	clt
    156e:	09 c0       	rjmp	.+18     	; 0x1582 <__floatsisf+0x12>

00001570 <__floatsisf>:
    1570:	97 fb       	bst	r25, 7
    1572:	3e f4       	brtc	.+14     	; 0x1582 <__floatsisf+0x12>
    1574:	90 95       	com	r25
    1576:	80 95       	com	r24
    1578:	70 95       	com	r23
    157a:	61 95       	neg	r22
    157c:	7f 4f       	sbci	r23, 0xFF	; 255
    157e:	8f 4f       	sbci	r24, 0xFF	; 255
    1580:	9f 4f       	sbci	r25, 0xFF	; 255
    1582:	99 23       	and	r25, r25
    1584:	a9 f0       	breq	.+42     	; 0x15b0 <__floatsisf+0x40>
    1586:	f9 2f       	mov	r31, r25
    1588:	96 e9       	ldi	r25, 0x96	; 150
    158a:	bb 27       	eor	r27, r27
    158c:	93 95       	inc	r25
    158e:	f6 95       	lsr	r31
    1590:	87 95       	ror	r24
    1592:	77 95       	ror	r23
    1594:	67 95       	ror	r22
    1596:	b7 95       	ror	r27
    1598:	f1 11       	cpse	r31, r1
    159a:	f8 cf       	rjmp	.-16     	; 0x158c <__floatsisf+0x1c>
    159c:	fa f4       	brpl	.+62     	; 0x15dc <__floatsisf+0x6c>
    159e:	bb 0f       	add	r27, r27
    15a0:	11 f4       	brne	.+4      	; 0x15a6 <__floatsisf+0x36>
    15a2:	60 ff       	sbrs	r22, 0
    15a4:	1b c0       	rjmp	.+54     	; 0x15dc <__floatsisf+0x6c>
    15a6:	6f 5f       	subi	r22, 0xFF	; 255
    15a8:	7f 4f       	sbci	r23, 0xFF	; 255
    15aa:	8f 4f       	sbci	r24, 0xFF	; 255
    15ac:	9f 4f       	sbci	r25, 0xFF	; 255
    15ae:	16 c0       	rjmp	.+44     	; 0x15dc <__floatsisf+0x6c>
    15b0:	88 23       	and	r24, r24
    15b2:	11 f0       	breq	.+4      	; 0x15b8 <__floatsisf+0x48>
    15b4:	96 e9       	ldi	r25, 0x96	; 150
    15b6:	11 c0       	rjmp	.+34     	; 0x15da <__floatsisf+0x6a>
    15b8:	77 23       	and	r23, r23
    15ba:	21 f0       	breq	.+8      	; 0x15c4 <__floatsisf+0x54>
    15bc:	9e e8       	ldi	r25, 0x8E	; 142
    15be:	87 2f       	mov	r24, r23
    15c0:	76 2f       	mov	r23, r22
    15c2:	05 c0       	rjmp	.+10     	; 0x15ce <__floatsisf+0x5e>
    15c4:	66 23       	and	r22, r22
    15c6:	71 f0       	breq	.+28     	; 0x15e4 <__floatsisf+0x74>
    15c8:	96 e8       	ldi	r25, 0x86	; 134
    15ca:	86 2f       	mov	r24, r22
    15cc:	70 e0       	ldi	r23, 0x00	; 0
    15ce:	60 e0       	ldi	r22, 0x00	; 0
    15d0:	2a f0       	brmi	.+10     	; 0x15dc <__floatsisf+0x6c>
    15d2:	9a 95       	dec	r25
    15d4:	66 0f       	add	r22, r22
    15d6:	77 1f       	adc	r23, r23
    15d8:	88 1f       	adc	r24, r24
    15da:	da f7       	brpl	.-10     	; 0x15d2 <__floatsisf+0x62>
    15dc:	88 0f       	add	r24, r24
    15de:	96 95       	lsr	r25
    15e0:	87 95       	ror	r24
    15e2:	97 f9       	bld	r25, 7
    15e4:	08 95       	ret

000015e6 <__fp_inf>:
    15e6:	97 f9       	bld	r25, 7
    15e8:	9f 67       	ori	r25, 0x7F	; 127
    15ea:	80 e8       	ldi	r24, 0x80	; 128
    15ec:	70 e0       	ldi	r23, 0x00	; 0
    15ee:	60 e0       	ldi	r22, 0x00	; 0
    15f0:	08 95       	ret

000015f2 <__fp_nan>:
    15f2:	9f ef       	ldi	r25, 0xFF	; 255
    15f4:	80 ec       	ldi	r24, 0xC0	; 192
    15f6:	08 95       	ret

000015f8 <__fp_powser>:
    15f8:	df 93       	push	r29
    15fa:	cf 93       	push	r28
    15fc:	1f 93       	push	r17
    15fe:	0f 93       	push	r16
    1600:	ff 92       	push	r15
    1602:	ef 92       	push	r14
    1604:	df 92       	push	r13
    1606:	7b 01       	movw	r14, r22
    1608:	8c 01       	movw	r16, r24
    160a:	68 94       	set
    160c:	06 c0       	rjmp	.+12     	; 0x161a <__fp_powser+0x22>
    160e:	da 2e       	mov	r13, r26
    1610:	ef 01       	movw	r28, r30
    1612:	0e 94 86 0b 	call	0x170c	; 0x170c <__mulsf3x>
    1616:	fe 01       	movw	r30, r28
    1618:	e8 94       	clt
    161a:	a5 91       	lpm	r26, Z+
    161c:	25 91       	lpm	r18, Z+
    161e:	35 91       	lpm	r19, Z+
    1620:	45 91       	lpm	r20, Z+
    1622:	55 91       	lpm	r21, Z+
    1624:	a6 f3       	brts	.-24     	; 0x160e <__fp_powser+0x16>
    1626:	ef 01       	movw	r28, r30
    1628:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__addsf3x>
    162c:	fe 01       	movw	r30, r28
    162e:	97 01       	movw	r18, r14
    1630:	a8 01       	movw	r20, r16
    1632:	da 94       	dec	r13
    1634:	69 f7       	brne	.-38     	; 0x1610 <__fp_powser+0x18>
    1636:	df 90       	pop	r13
    1638:	ef 90       	pop	r14
    163a:	ff 90       	pop	r15
    163c:	0f 91       	pop	r16
    163e:	1f 91       	pop	r17
    1640:	cf 91       	pop	r28
    1642:	df 91       	pop	r29
    1644:	08 95       	ret

00001646 <__fp_pscA>:
    1646:	00 24       	eor	r0, r0
    1648:	0a 94       	dec	r0
    164a:	16 16       	cp	r1, r22
    164c:	17 06       	cpc	r1, r23
    164e:	18 06       	cpc	r1, r24
    1650:	09 06       	cpc	r0, r25
    1652:	08 95       	ret

00001654 <__fp_pscB>:
    1654:	00 24       	eor	r0, r0
    1656:	0a 94       	dec	r0
    1658:	12 16       	cp	r1, r18
    165a:	13 06       	cpc	r1, r19
    165c:	14 06       	cpc	r1, r20
    165e:	05 06       	cpc	r0, r21
    1660:	08 95       	ret

00001662 <__fp_round>:
    1662:	09 2e       	mov	r0, r25
    1664:	03 94       	inc	r0
    1666:	00 0c       	add	r0, r0
    1668:	11 f4       	brne	.+4      	; 0x166e <__fp_round+0xc>
    166a:	88 23       	and	r24, r24
    166c:	52 f0       	brmi	.+20     	; 0x1682 <__fp_round+0x20>
    166e:	bb 0f       	add	r27, r27
    1670:	40 f4       	brcc	.+16     	; 0x1682 <__fp_round+0x20>
    1672:	bf 2b       	or	r27, r31
    1674:	11 f4       	brne	.+4      	; 0x167a <__fp_round+0x18>
    1676:	60 ff       	sbrs	r22, 0
    1678:	04 c0       	rjmp	.+8      	; 0x1682 <__fp_round+0x20>
    167a:	6f 5f       	subi	r22, 0xFF	; 255
    167c:	7f 4f       	sbci	r23, 0xFF	; 255
    167e:	8f 4f       	sbci	r24, 0xFF	; 255
    1680:	9f 4f       	sbci	r25, 0xFF	; 255
    1682:	08 95       	ret

00001684 <__fp_split3>:
    1684:	57 fd       	sbrc	r21, 7
    1686:	90 58       	subi	r25, 0x80	; 128
    1688:	44 0f       	add	r20, r20
    168a:	55 1f       	adc	r21, r21
    168c:	59 f0       	breq	.+22     	; 0x16a4 <__fp_splitA+0x10>
    168e:	5f 3f       	cpi	r21, 0xFF	; 255
    1690:	71 f0       	breq	.+28     	; 0x16ae <__fp_splitA+0x1a>
    1692:	47 95       	ror	r20

00001694 <__fp_splitA>:
    1694:	88 0f       	add	r24, r24
    1696:	97 fb       	bst	r25, 7
    1698:	99 1f       	adc	r25, r25
    169a:	61 f0       	breq	.+24     	; 0x16b4 <__fp_splitA+0x20>
    169c:	9f 3f       	cpi	r25, 0xFF	; 255
    169e:	79 f0       	breq	.+30     	; 0x16be <__fp_splitA+0x2a>
    16a0:	87 95       	ror	r24
    16a2:	08 95       	ret
    16a4:	12 16       	cp	r1, r18
    16a6:	13 06       	cpc	r1, r19
    16a8:	14 06       	cpc	r1, r20
    16aa:	55 1f       	adc	r21, r21
    16ac:	f2 cf       	rjmp	.-28     	; 0x1692 <__fp_split3+0xe>
    16ae:	46 95       	lsr	r20
    16b0:	f1 df       	rcall	.-30     	; 0x1694 <__fp_splitA>
    16b2:	08 c0       	rjmp	.+16     	; 0x16c4 <__fp_splitA+0x30>
    16b4:	16 16       	cp	r1, r22
    16b6:	17 06       	cpc	r1, r23
    16b8:	18 06       	cpc	r1, r24
    16ba:	99 1f       	adc	r25, r25
    16bc:	f1 cf       	rjmp	.-30     	; 0x16a0 <__fp_splitA+0xc>
    16be:	86 95       	lsr	r24
    16c0:	71 05       	cpc	r23, r1
    16c2:	61 05       	cpc	r22, r1
    16c4:	08 94       	sec
    16c6:	08 95       	ret

000016c8 <__fp_zero>:
    16c8:	e8 94       	clt

000016ca <__fp_szero>:
    16ca:	bb 27       	eor	r27, r27
    16cc:	66 27       	eor	r22, r22
    16ce:	77 27       	eor	r23, r23
    16d0:	cb 01       	movw	r24, r22
    16d2:	97 f9       	bld	r25, 7
    16d4:	08 95       	ret

000016d6 <inverse>:
    16d6:	9b 01       	movw	r18, r22
    16d8:	ac 01       	movw	r20, r24
    16da:	60 e0       	ldi	r22, 0x00	; 0
    16dc:	70 e0       	ldi	r23, 0x00	; 0
    16de:	80 e8       	ldi	r24, 0x80	; 128
    16e0:	9f e3       	ldi	r25, 0x3F	; 63
    16e2:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__divsf3>

000016e6 <__mulsf3>:
    16e6:	0e 94 86 0b 	call	0x170c	; 0x170c <__mulsf3x>
    16ea:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__fp_round>
    16ee:	0e 94 23 0b 	call	0x1646	; 0x1646 <__fp_pscA>
    16f2:	38 f0       	brcs	.+14     	; 0x1702 <__mulsf3+0x1c>
    16f4:	0e 94 2a 0b 	call	0x1654	; 0x1654 <__fp_pscB>
    16f8:	20 f0       	brcs	.+8      	; 0x1702 <__mulsf3+0x1c>
    16fa:	95 23       	and	r25, r21
    16fc:	11 f0       	breq	.+4      	; 0x1702 <__mulsf3+0x1c>
    16fe:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>
    1702:	0c 94 f9 0a 	jmp	0x15f2	; 0x15f2 <__fp_nan>
    1706:	11 24       	eor	r1, r1
    1708:	0c 94 65 0b 	jmp	0x16ca	; 0x16ca <__fp_szero>

0000170c <__mulsf3x>:
    170c:	0e 94 42 0b 	call	0x1684	; 0x1684 <__fp_split3>
    1710:	70 f3       	brcs	.-36     	; 0x16ee <__mulsf3+0x8>

00001712 <__mulsf3_pse>:
    1712:	95 9f       	mul	r25, r21
    1714:	c1 f3       	breq	.-16     	; 0x1706 <__mulsf3+0x20>
    1716:	95 0f       	add	r25, r21
    1718:	50 e0       	ldi	r21, 0x00	; 0
    171a:	55 1f       	adc	r21, r21
    171c:	62 9f       	mul	r22, r18
    171e:	f0 01       	movw	r30, r0
    1720:	72 9f       	mul	r23, r18
    1722:	bb 27       	eor	r27, r27
    1724:	f0 0d       	add	r31, r0
    1726:	b1 1d       	adc	r27, r1
    1728:	63 9f       	mul	r22, r19
    172a:	aa 27       	eor	r26, r26
    172c:	f0 0d       	add	r31, r0
    172e:	b1 1d       	adc	r27, r1
    1730:	aa 1f       	adc	r26, r26
    1732:	64 9f       	mul	r22, r20
    1734:	66 27       	eor	r22, r22
    1736:	b0 0d       	add	r27, r0
    1738:	a1 1d       	adc	r26, r1
    173a:	66 1f       	adc	r22, r22
    173c:	82 9f       	mul	r24, r18
    173e:	22 27       	eor	r18, r18
    1740:	b0 0d       	add	r27, r0
    1742:	a1 1d       	adc	r26, r1
    1744:	62 1f       	adc	r22, r18
    1746:	73 9f       	mul	r23, r19
    1748:	b0 0d       	add	r27, r0
    174a:	a1 1d       	adc	r26, r1
    174c:	62 1f       	adc	r22, r18
    174e:	83 9f       	mul	r24, r19
    1750:	a0 0d       	add	r26, r0
    1752:	61 1d       	adc	r22, r1
    1754:	22 1f       	adc	r18, r18
    1756:	74 9f       	mul	r23, r20
    1758:	33 27       	eor	r19, r19
    175a:	a0 0d       	add	r26, r0
    175c:	61 1d       	adc	r22, r1
    175e:	23 1f       	adc	r18, r19
    1760:	84 9f       	mul	r24, r20
    1762:	60 0d       	add	r22, r0
    1764:	21 1d       	adc	r18, r1
    1766:	82 2f       	mov	r24, r18
    1768:	76 2f       	mov	r23, r22
    176a:	6a 2f       	mov	r22, r26
    176c:	11 24       	eor	r1, r1
    176e:	9f 57       	subi	r25, 0x7F	; 127
    1770:	50 40       	sbci	r21, 0x00	; 0
    1772:	9a f0       	brmi	.+38     	; 0x179a <__mulsf3_pse+0x88>
    1774:	f1 f0       	breq	.+60     	; 0x17b2 <__mulsf3_pse+0xa0>
    1776:	88 23       	and	r24, r24
    1778:	4a f0       	brmi	.+18     	; 0x178c <__mulsf3_pse+0x7a>
    177a:	ee 0f       	add	r30, r30
    177c:	ff 1f       	adc	r31, r31
    177e:	bb 1f       	adc	r27, r27
    1780:	66 1f       	adc	r22, r22
    1782:	77 1f       	adc	r23, r23
    1784:	88 1f       	adc	r24, r24
    1786:	91 50       	subi	r25, 0x01	; 1
    1788:	50 40       	sbci	r21, 0x00	; 0
    178a:	a9 f7       	brne	.-22     	; 0x1776 <__mulsf3_pse+0x64>
    178c:	9e 3f       	cpi	r25, 0xFE	; 254
    178e:	51 05       	cpc	r21, r1
    1790:	80 f0       	brcs	.+32     	; 0x17b2 <__mulsf3_pse+0xa0>
    1792:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>
    1796:	0c 94 65 0b 	jmp	0x16ca	; 0x16ca <__fp_szero>
    179a:	5f 3f       	cpi	r21, 0xFF	; 255
    179c:	e4 f3       	brlt	.-8      	; 0x1796 <__mulsf3_pse+0x84>
    179e:	98 3e       	cpi	r25, 0xE8	; 232
    17a0:	d4 f3       	brlt	.-12     	; 0x1796 <__mulsf3_pse+0x84>
    17a2:	86 95       	lsr	r24
    17a4:	77 95       	ror	r23
    17a6:	67 95       	ror	r22
    17a8:	b7 95       	ror	r27
    17aa:	f7 95       	ror	r31
    17ac:	e7 95       	ror	r30
    17ae:	9f 5f       	subi	r25, 0xFF	; 255
    17b0:	c1 f7       	brne	.-16     	; 0x17a2 <__mulsf3_pse+0x90>
    17b2:	fe 2b       	or	r31, r30
    17b4:	88 0f       	add	r24, r24
    17b6:	91 1d       	adc	r25, r1
    17b8:	96 95       	lsr	r25
    17ba:	87 95       	ror	r24
    17bc:	97 f9       	bld	r25, 7
    17be:	08 95       	ret

000017c0 <pow>:
    17c0:	fa 01       	movw	r30, r20
    17c2:	ee 0f       	add	r30, r30
    17c4:	ff 1f       	adc	r31, r31
    17c6:	30 96       	adiw	r30, 0x00	; 0
    17c8:	21 05       	cpc	r18, r1
    17ca:	31 05       	cpc	r19, r1
    17cc:	a1 f1       	breq	.+104    	; 0x1836 <pow+0x76>
    17ce:	61 15       	cp	r22, r1
    17d0:	71 05       	cpc	r23, r1
    17d2:	61 f4       	brne	.+24     	; 0x17ec <pow+0x2c>
    17d4:	80 38       	cpi	r24, 0x80	; 128
    17d6:	bf e3       	ldi	r27, 0x3F	; 63
    17d8:	9b 07       	cpc	r25, r27
    17da:	49 f1       	breq	.+82     	; 0x182e <pow+0x6e>
    17dc:	68 94       	set
    17de:	90 38       	cpi	r25, 0x80	; 128
    17e0:	81 05       	cpc	r24, r1
    17e2:	61 f0       	breq	.+24     	; 0x17fc <pow+0x3c>
    17e4:	80 38       	cpi	r24, 0x80	; 128
    17e6:	bf ef       	ldi	r27, 0xFF	; 255
    17e8:	9b 07       	cpc	r25, r27
    17ea:	41 f0       	breq	.+16     	; 0x17fc <pow+0x3c>
    17ec:	99 23       	and	r25, r25
    17ee:	4a f5       	brpl	.+82     	; 0x1842 <pow+0x82>
    17f0:	ff 3f       	cpi	r31, 0xFF	; 255
    17f2:	e1 05       	cpc	r30, r1
    17f4:	31 05       	cpc	r19, r1
    17f6:	21 05       	cpc	r18, r1
    17f8:	19 f1       	breq	.+70     	; 0x1840 <pow+0x80>
    17fa:	e8 94       	clt
    17fc:	08 94       	sec
    17fe:	e7 95       	ror	r30
    1800:	d9 01       	movw	r26, r18
    1802:	aa 23       	and	r26, r26
    1804:	29 f4       	brne	.+10     	; 0x1810 <pow+0x50>
    1806:	ab 2f       	mov	r26, r27
    1808:	be 2f       	mov	r27, r30
    180a:	f8 5f       	subi	r31, 0xF8	; 248
    180c:	d0 f3       	brcs	.-12     	; 0x1802 <pow+0x42>
    180e:	10 c0       	rjmp	.+32     	; 0x1830 <pow+0x70>
    1810:	ff 5f       	subi	r31, 0xFF	; 255
    1812:	70 f4       	brcc	.+28     	; 0x1830 <pow+0x70>
    1814:	a6 95       	lsr	r26
    1816:	e0 f7       	brcc	.-8      	; 0x1810 <pow+0x50>
    1818:	f7 39       	cpi	r31, 0x97	; 151
    181a:	50 f0       	brcs	.+20     	; 0x1830 <pow+0x70>
    181c:	19 f0       	breq	.+6      	; 0x1824 <pow+0x64>
    181e:	ff 3a       	cpi	r31, 0xAF	; 175
    1820:	38 f4       	brcc	.+14     	; 0x1830 <pow+0x70>
    1822:	9f 77       	andi	r25, 0x7F	; 127
    1824:	9f 93       	push	r25
    1826:	0d d0       	rcall	.+26     	; 0x1842 <pow+0x82>
    1828:	0f 90       	pop	r0
    182a:	07 fc       	sbrc	r0, 7
    182c:	90 58       	subi	r25, 0x80	; 128
    182e:	08 95       	ret
    1830:	46 f0       	brts	.+16     	; 0x1842 <pow+0x82>
    1832:	0c 94 f9 0a 	jmp	0x15f2	; 0x15f2 <__fp_nan>
    1836:	60 e0       	ldi	r22, 0x00	; 0
    1838:	70 e0       	ldi	r23, 0x00	; 0
    183a:	80 e8       	ldi	r24, 0x80	; 128
    183c:	9f e3       	ldi	r25, 0x3F	; 63
    183e:	08 95       	ret
    1840:	4f e7       	ldi	r20, 0x7F	; 127
    1842:	9f 77       	andi	r25, 0x7F	; 127
    1844:	5f 93       	push	r21
    1846:	4f 93       	push	r20
    1848:	3f 93       	push	r19
    184a:	2f 93       	push	r18
    184c:	0e 94 b0 0c 	call	0x1960	; 0x1960 <log>
    1850:	2f 91       	pop	r18
    1852:	3f 91       	pop	r19
    1854:	4f 91       	pop	r20
    1856:	5f 91       	pop	r21
    1858:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <__mulsf3>
    185c:	0c 94 3c 0c 	jmp	0x1878	; 0x1878 <exp>

00001860 <square>:
    1860:	9b 01       	movw	r18, r22
    1862:	ac 01       	movw	r20, r24
    1864:	0c 94 73 0b 	jmp	0x16e6	; 0x16e6 <__mulsf3>
    1868:	29 f4       	brne	.+10     	; 0x1874 <square+0x14>
    186a:	16 f0       	brts	.+4      	; 0x1870 <square+0x10>
    186c:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>
    1870:	0c 94 64 0b 	jmp	0x16c8	; 0x16c8 <__fp_zero>
    1874:	0c 94 f9 0a 	jmp	0x15f2	; 0x15f2 <__fp_nan>

00001878 <exp>:
    1878:	0e 94 4a 0b 	call	0x1694	; 0x1694 <__fp_splitA>
    187c:	a8 f3       	brcs	.-22     	; 0x1868 <square+0x8>
    187e:	96 38       	cpi	r25, 0x86	; 134
    1880:	a0 f7       	brcc	.-24     	; 0x186a <square+0xa>
    1882:	07 f8       	bld	r0, 7
    1884:	0f 92       	push	r0
    1886:	e8 94       	clt
    1888:	2b e3       	ldi	r18, 0x3B	; 59
    188a:	3a ea       	ldi	r19, 0xAA	; 170
    188c:	48 eb       	ldi	r20, 0xB8	; 184
    188e:	5f e7       	ldi	r21, 0x7F	; 127
    1890:	0e 94 89 0b 	call	0x1712	; 0x1712 <__mulsf3_pse>
    1894:	0f 92       	push	r0
    1896:	0f 92       	push	r0
    1898:	0f 92       	push	r0
    189a:	4d b7       	in	r20, 0x3d	; 61
    189c:	5e b7       	in	r21, 0x3e	; 62
    189e:	0f 92       	push	r0
    18a0:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <modf>
    18a4:	e5 e9       	ldi	r30, 0x95	; 149
    18a6:	f0 e0       	ldi	r31, 0x00	; 0
    18a8:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <__fp_powser>
    18ac:	4f 91       	pop	r20
    18ae:	5f 91       	pop	r21
    18b0:	ef 91       	pop	r30
    18b2:	ff 91       	pop	r31
    18b4:	e5 95       	asr	r30
    18b6:	ee 1f       	adc	r30, r30
    18b8:	ff 1f       	adc	r31, r31
    18ba:	49 f0       	breq	.+18     	; 0x18ce <exp+0x56>
    18bc:	fe 57       	subi	r31, 0x7E	; 126
    18be:	e0 68       	ori	r30, 0x80	; 128
    18c0:	44 27       	eor	r20, r20
    18c2:	ee 0f       	add	r30, r30
    18c4:	44 1f       	adc	r20, r20
    18c6:	fa 95       	dec	r31
    18c8:	e1 f7       	brne	.-8      	; 0x18c2 <exp+0x4a>
    18ca:	41 95       	neg	r20
    18cc:	55 0b       	sbc	r21, r21
    18ce:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <ldexp>
    18d2:	0f 90       	pop	r0
    18d4:	07 fe       	sbrs	r0, 7
    18d6:	0c 94 6b 0b 	jmp	0x16d6	; 0x16d6 <inverse>
    18da:	08 95       	ret
    18dc:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>
    18e0:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__fp_mpack>

000018e4 <ldexp>:
    18e4:	0e 94 4a 0b 	call	0x1694	; 0x1694 <__fp_splitA>
    18e8:	d8 f3       	brcs	.-10     	; 0x18e0 <exp+0x68>
    18ea:	99 23       	and	r25, r25
    18ec:	c9 f3       	breq	.-14     	; 0x18e0 <exp+0x68>
    18ee:	94 0f       	add	r25, r20
    18f0:	51 1d       	adc	r21, r1
    18f2:	a3 f3       	brvs	.-24     	; 0x18dc <exp+0x64>
    18f4:	91 50       	subi	r25, 0x01	; 1
    18f6:	50 40       	sbci	r21, 0x00	; 0
    18f8:	94 f0       	brlt	.+36     	; 0x191e <ldexp+0x3a>
    18fa:	59 f0       	breq	.+22     	; 0x1912 <ldexp+0x2e>
    18fc:	88 23       	and	r24, r24
    18fe:	32 f0       	brmi	.+12     	; 0x190c <ldexp+0x28>
    1900:	66 0f       	add	r22, r22
    1902:	77 1f       	adc	r23, r23
    1904:	88 1f       	adc	r24, r24
    1906:	91 50       	subi	r25, 0x01	; 1
    1908:	50 40       	sbci	r21, 0x00	; 0
    190a:	c1 f7       	brne	.-16     	; 0x18fc <ldexp+0x18>
    190c:	9e 3f       	cpi	r25, 0xFE	; 254
    190e:	51 05       	cpc	r21, r1
    1910:	2c f7       	brge	.-54     	; 0x18dc <exp+0x64>
    1912:	88 0f       	add	r24, r24
    1914:	91 1d       	adc	r25, r1
    1916:	96 95       	lsr	r25
    1918:	87 95       	ror	r24
    191a:	97 f9       	bld	r25, 7
    191c:	08 95       	ret
    191e:	5f 3f       	cpi	r21, 0xFF	; 255
    1920:	ac f0       	brlt	.+42     	; 0x194c <ldexp+0x68>
    1922:	98 3e       	cpi	r25, 0xE8	; 232
    1924:	9c f0       	brlt	.+38     	; 0x194c <ldexp+0x68>
    1926:	bb 27       	eor	r27, r27
    1928:	86 95       	lsr	r24
    192a:	77 95       	ror	r23
    192c:	67 95       	ror	r22
    192e:	b7 95       	ror	r27
    1930:	08 f4       	brcc	.+2      	; 0x1934 <ldexp+0x50>
    1932:	b1 60       	ori	r27, 0x01	; 1
    1934:	93 95       	inc	r25
    1936:	c1 f7       	brne	.-16     	; 0x1928 <ldexp+0x44>
    1938:	bb 0f       	add	r27, r27
    193a:	58 f7       	brcc	.-42     	; 0x1912 <ldexp+0x2e>
    193c:	11 f4       	brne	.+4      	; 0x1942 <ldexp+0x5e>
    193e:	60 ff       	sbrs	r22, 0
    1940:	e8 cf       	rjmp	.-48     	; 0x1912 <ldexp+0x2e>
    1942:	6f 5f       	subi	r22, 0xFF	; 255
    1944:	7f 4f       	sbci	r23, 0xFF	; 255
    1946:	8f 4f       	sbci	r24, 0xFF	; 255
    1948:	9f 4f       	sbci	r25, 0xFF	; 255
    194a:	e3 cf       	rjmp	.-58     	; 0x1912 <ldexp+0x2e>
    194c:	0c 94 65 0b 	jmp	0x16ca	; 0x16ca <__fp_szero>
    1950:	16 f0       	brts	.+4      	; 0x1956 <ldexp+0x72>
    1952:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__fp_mpack>
    1956:	0c 94 f9 0a 	jmp	0x15f2	; 0x15f2 <__fp_nan>
    195a:	68 94       	set
    195c:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>

00001960 <log>:
    1960:	0e 94 4a 0b 	call	0x1694	; 0x1694 <__fp_splitA>
    1964:	a8 f3       	brcs	.-22     	; 0x1950 <ldexp+0x6c>
    1966:	99 23       	and	r25, r25
    1968:	c1 f3       	breq	.-16     	; 0x195a <ldexp+0x76>
    196a:	ae f3       	brts	.-22     	; 0x1956 <ldexp+0x72>
    196c:	df 93       	push	r29
    196e:	cf 93       	push	r28
    1970:	1f 93       	push	r17
    1972:	0f 93       	push	r16
    1974:	ff 92       	push	r15
    1976:	c9 2f       	mov	r28, r25
    1978:	dd 27       	eor	r29, r29
    197a:	88 23       	and	r24, r24
    197c:	2a f0       	brmi	.+10     	; 0x1988 <log+0x28>
    197e:	21 97       	sbiw	r28, 0x01	; 1
    1980:	66 0f       	add	r22, r22
    1982:	77 1f       	adc	r23, r23
    1984:	88 1f       	adc	r24, r24
    1986:	da f7       	brpl	.-10     	; 0x197e <log+0x1e>
    1988:	20 e0       	ldi	r18, 0x00	; 0
    198a:	30 e0       	ldi	r19, 0x00	; 0
    198c:	40 e8       	ldi	r20, 0x80	; 128
    198e:	5f eb       	ldi	r21, 0xBF	; 191
    1990:	9f e3       	ldi	r25, 0x3F	; 63
    1992:	88 39       	cpi	r24, 0x98	; 152
    1994:	20 f0       	brcs	.+8      	; 0x199e <log+0x3e>
    1996:	80 3e       	cpi	r24, 0xE0	; 224
    1998:	38 f0       	brcs	.+14     	; 0x19a8 <log+0x48>
    199a:	21 96       	adiw	r28, 0x01	; 1
    199c:	8f 77       	andi	r24, 0x7F	; 127
    199e:	0e 94 66 09 	call	0x12cc	; 0x12cc <__addsf3>
    19a2:	ed eb       	ldi	r30, 0xBD	; 189
    19a4:	f0 e0       	ldi	r31, 0x00	; 0
    19a6:	04 c0       	rjmp	.+8      	; 0x19b0 <log+0x50>
    19a8:	0e 94 66 09 	call	0x12cc	; 0x12cc <__addsf3>
    19ac:	ea ee       	ldi	r30, 0xEA	; 234
    19ae:	f0 e0       	ldi	r31, 0x00	; 0
    19b0:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <__fp_powser>
    19b4:	8b 01       	movw	r16, r22
    19b6:	be 01       	movw	r22, r28
    19b8:	ec 01       	movw	r28, r24
    19ba:	fb 2e       	mov	r15, r27
    19bc:	6f 57       	subi	r22, 0x7F	; 127
    19be:	71 09       	sbc	r23, r1
    19c0:	75 95       	asr	r23
    19c2:	77 1f       	adc	r23, r23
    19c4:	88 0b       	sbc	r24, r24
    19c6:	99 0b       	sbc	r25, r25
    19c8:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__floatsisf>
    19cc:	28 e1       	ldi	r18, 0x18	; 24
    19ce:	32 e7       	ldi	r19, 0x72	; 114
    19d0:	41 e3       	ldi	r20, 0x31	; 49
    19d2:	5f e3       	ldi	r21, 0x3F	; 63
    19d4:	0e 94 86 0b 	call	0x170c	; 0x170c <__mulsf3x>
    19d8:	af 2d       	mov	r26, r15
    19da:	98 01       	movw	r18, r16
    19dc:	ae 01       	movw	r20, r28
    19de:	ff 90       	pop	r15
    19e0:	0f 91       	pop	r16
    19e2:	1f 91       	pop	r17
    19e4:	cf 91       	pop	r28
    19e6:	df 91       	pop	r29
    19e8:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__addsf3x>
    19ec:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__fp_round>

000019f0 <modf>:
    19f0:	fa 01       	movw	r30, r20
    19f2:	dc 01       	movw	r26, r24
    19f4:	aa 0f       	add	r26, r26
    19f6:	bb 1f       	adc	r27, r27
    19f8:	9b 01       	movw	r18, r22
    19fa:	ac 01       	movw	r20, r24
    19fc:	bf 57       	subi	r27, 0x7F	; 127
    19fe:	28 f4       	brcc	.+10     	; 0x1a0a <modf+0x1a>
    1a00:	22 27       	eor	r18, r18
    1a02:	33 27       	eor	r19, r19
    1a04:	44 27       	eor	r20, r20
    1a06:	50 78       	andi	r21, 0x80	; 128
    1a08:	20 c0       	rjmp	.+64     	; 0x1a4a <modf+0x5a>
    1a0a:	b7 51       	subi	r27, 0x17	; 23
    1a0c:	90 f4       	brcc	.+36     	; 0x1a32 <modf+0x42>
    1a0e:	ab 2f       	mov	r26, r27
    1a10:	00 24       	eor	r0, r0
    1a12:	46 95       	lsr	r20
    1a14:	37 95       	ror	r19
    1a16:	27 95       	ror	r18
    1a18:	01 1c       	adc	r0, r1
    1a1a:	a3 95       	inc	r26
    1a1c:	d2 f3       	brmi	.-12     	; 0x1a12 <modf+0x22>
    1a1e:	00 20       	and	r0, r0
    1a20:	71 f0       	breq	.+28     	; 0x1a3e <modf+0x4e>
    1a22:	22 0f       	add	r18, r18
    1a24:	33 1f       	adc	r19, r19
    1a26:	44 1f       	adc	r20, r20
    1a28:	b3 95       	inc	r27
    1a2a:	da f3       	brmi	.-10     	; 0x1a22 <modf+0x32>
    1a2c:	0e d0       	rcall	.+28     	; 0x1a4a <modf+0x5a>
    1a2e:	0c 94 65 09 	jmp	0x12ca	; 0x12ca <__subsf3>
    1a32:	61 30       	cpi	r22, 0x01	; 1
    1a34:	71 05       	cpc	r23, r1
    1a36:	a0 e8       	ldi	r26, 0x80	; 128
    1a38:	8a 07       	cpc	r24, r26
    1a3a:	b9 46       	sbci	r27, 0x69	; 105
    1a3c:	30 f4       	brcc	.+12     	; 0x1a4a <modf+0x5a>
    1a3e:	9b 01       	movw	r18, r22
    1a40:	ac 01       	movw	r20, r24
    1a42:	66 27       	eor	r22, r22
    1a44:	77 27       	eor	r23, r23
    1a46:	88 27       	eor	r24, r24
    1a48:	90 78       	andi	r25, 0x80	; 128
    1a4a:	30 96       	adiw	r30, 0x00	; 0
    1a4c:	21 f0       	breq	.+8      	; 0x1a56 <modf+0x66>
    1a4e:	20 83       	st	Z, r18
    1a50:	31 83       	std	Z+1, r19	; 0x01
    1a52:	42 83       	std	Z+2, r20	; 0x02
    1a54:	53 83       	std	Z+3, r21	; 0x03
    1a56:	08 95       	ret

00001a58 <__fp_mpack>:
    1a58:	9f 3f       	cpi	r25, 0xFF	; 255
    1a5a:	31 f0       	breq	.+12     	; 0x1a68 <__fp_mpack_finite+0xc>

00001a5c <__fp_mpack_finite>:
    1a5c:	91 50       	subi	r25, 0x01	; 1
    1a5e:	20 f4       	brcc	.+8      	; 0x1a68 <__fp_mpack_finite+0xc>
    1a60:	87 95       	ror	r24
    1a62:	77 95       	ror	r23
    1a64:	67 95       	ror	r22
    1a66:	b7 95       	ror	r27
    1a68:	88 0f       	add	r24, r24
    1a6a:	91 1d       	adc	r25, r1
    1a6c:	96 95       	lsr	r25
    1a6e:	87 95       	ror	r24
    1a70:	97 f9       	bld	r25, 7
    1a72:	08 95       	ret

00001a74 <__mulsi3>:
    1a74:	db 01       	movw	r26, r22
    1a76:	8f 93       	push	r24
    1a78:	9f 93       	push	r25
    1a7a:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <__muluhisi3>
    1a7e:	bf 91       	pop	r27
    1a80:	af 91       	pop	r26
    1a82:	a2 9f       	mul	r26, r18
    1a84:	80 0d       	add	r24, r0
    1a86:	91 1d       	adc	r25, r1
    1a88:	a3 9f       	mul	r26, r19
    1a8a:	90 0d       	add	r25, r0
    1a8c:	b2 9f       	mul	r27, r18
    1a8e:	90 0d       	add	r25, r0
    1a90:	11 24       	eor	r1, r1
    1a92:	08 95       	ret

00001a94 <__udivmodsi4>:
    1a94:	a1 e2       	ldi	r26, 0x21	; 33
    1a96:	1a 2e       	mov	r1, r26
    1a98:	aa 1b       	sub	r26, r26
    1a9a:	bb 1b       	sub	r27, r27
    1a9c:	fd 01       	movw	r30, r26
    1a9e:	0d c0       	rjmp	.+26     	; 0x1aba <__udivmodsi4_ep>

00001aa0 <__udivmodsi4_loop>:
    1aa0:	aa 1f       	adc	r26, r26
    1aa2:	bb 1f       	adc	r27, r27
    1aa4:	ee 1f       	adc	r30, r30
    1aa6:	ff 1f       	adc	r31, r31
    1aa8:	a2 17       	cp	r26, r18
    1aaa:	b3 07       	cpc	r27, r19
    1aac:	e4 07       	cpc	r30, r20
    1aae:	f5 07       	cpc	r31, r21
    1ab0:	20 f0       	brcs	.+8      	; 0x1aba <__udivmodsi4_ep>
    1ab2:	a2 1b       	sub	r26, r18
    1ab4:	b3 0b       	sbc	r27, r19
    1ab6:	e4 0b       	sbc	r30, r20
    1ab8:	f5 0b       	sbc	r31, r21

00001aba <__udivmodsi4_ep>:
    1aba:	66 1f       	adc	r22, r22
    1abc:	77 1f       	adc	r23, r23
    1abe:	88 1f       	adc	r24, r24
    1ac0:	99 1f       	adc	r25, r25
    1ac2:	1a 94       	dec	r1
    1ac4:	69 f7       	brne	.-38     	; 0x1aa0 <__udivmodsi4_loop>
    1ac6:	60 95       	com	r22
    1ac8:	70 95       	com	r23
    1aca:	80 95       	com	r24
    1acc:	90 95       	com	r25
    1ace:	9b 01       	movw	r18, r22
    1ad0:	ac 01       	movw	r20, r24
    1ad2:	bd 01       	movw	r22, r26
    1ad4:	cf 01       	movw	r24, r30
    1ad6:	08 95       	ret

00001ad8 <__divmodsi4>:
    1ad8:	05 2e       	mov	r0, r21
    1ada:	97 fb       	bst	r25, 7
    1adc:	1e f4       	brtc	.+6      	; 0x1ae4 <__divmodsi4+0xc>
    1ade:	00 94       	com	r0
    1ae0:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <__negsi2>
    1ae4:	57 fd       	sbrc	r21, 7
    1ae6:	07 d0       	rcall	.+14     	; 0x1af6 <__divmodsi4_neg2>
    1ae8:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <__udivmodsi4>
    1aec:	07 fc       	sbrc	r0, 7
    1aee:	03 d0       	rcall	.+6      	; 0x1af6 <__divmodsi4_neg2>
    1af0:	4e f4       	brtc	.+18     	; 0x1b04 <__divmodsi4_exit>
    1af2:	0c 94 83 0d 	jmp	0x1b06	; 0x1b06 <__negsi2>

00001af6 <__divmodsi4_neg2>:
    1af6:	50 95       	com	r21
    1af8:	40 95       	com	r20
    1afa:	30 95       	com	r19
    1afc:	21 95       	neg	r18
    1afe:	3f 4f       	sbci	r19, 0xFF	; 255
    1b00:	4f 4f       	sbci	r20, 0xFF	; 255
    1b02:	5f 4f       	sbci	r21, 0xFF	; 255

00001b04 <__divmodsi4_exit>:
    1b04:	08 95       	ret

00001b06 <__negsi2>:
    1b06:	90 95       	com	r25
    1b08:	80 95       	com	r24
    1b0a:	70 95       	com	r23
    1b0c:	61 95       	neg	r22
    1b0e:	7f 4f       	sbci	r23, 0xFF	; 255
    1b10:	8f 4f       	sbci	r24, 0xFF	; 255
    1b12:	9f 4f       	sbci	r25, 0xFF	; 255
    1b14:	08 95       	ret

00001b16 <__muluhisi3>:
    1b16:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <__umulhisi3>
    1b1a:	a5 9f       	mul	r26, r21
    1b1c:	90 0d       	add	r25, r0
    1b1e:	b4 9f       	mul	r27, r20
    1b20:	90 0d       	add	r25, r0
    1b22:	a4 9f       	mul	r26, r20
    1b24:	80 0d       	add	r24, r0
    1b26:	91 1d       	adc	r25, r1
    1b28:	11 24       	eor	r1, r1
    1b2a:	08 95       	ret

00001b2c <__mulshisi3>:
    1b2c:	b7 ff       	sbrs	r27, 7
    1b2e:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__muluhisi3>

00001b32 <__mulohisi3>:
    1b32:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <__muluhisi3>
    1b36:	82 1b       	sub	r24, r18
    1b38:	93 0b       	sbc	r25, r19
    1b3a:	08 95       	ret

00001b3c <__umulhisi3>:
    1b3c:	a2 9f       	mul	r26, r18
    1b3e:	b0 01       	movw	r22, r0
    1b40:	b3 9f       	mul	r27, r19
    1b42:	c0 01       	movw	r24, r0
    1b44:	a3 9f       	mul	r26, r19
    1b46:	70 0d       	add	r23, r0
    1b48:	81 1d       	adc	r24, r1
    1b4a:	11 24       	eor	r1, r1
    1b4c:	91 1d       	adc	r25, r1
    1b4e:	b2 9f       	mul	r27, r18
    1b50:	70 0d       	add	r23, r0
    1b52:	81 1d       	adc	r24, r1
    1b54:	11 24       	eor	r1, r1
    1b56:	91 1d       	adc	r25, r1
    1b58:	08 95       	ret

00001b5a <printf>:
    1b5a:	a0 e0       	ldi	r26, 0x00	; 0
    1b5c:	b0 e0       	ldi	r27, 0x00	; 0
    1b5e:	e3 eb       	ldi	r30, 0xB3	; 179
    1b60:	fd e0       	ldi	r31, 0x0D	; 13
    1b62:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__prologue_saves__+0x20>
    1b66:	ae 01       	movw	r20, r28
    1b68:	4b 5f       	subi	r20, 0xFB	; 251
    1b6a:	5f 4f       	sbci	r21, 0xFF	; 255
    1b6c:	fa 01       	movw	r30, r20
    1b6e:	61 91       	ld	r22, Z+
    1b70:	71 91       	ld	r23, Z+
    1b72:	af 01       	movw	r20, r30
    1b74:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <__iob+0x2>
    1b78:	90 91 d5 01 	lds	r25, 0x01D5	; 0x8001d5 <__iob+0x3>
    1b7c:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <vfprintf>
    1b80:	e2 e0       	ldi	r30, 0x02	; 2
    1b82:	0c 94 80 10 	jmp	0x2100	; 0x2100 <__epilogue_restores__+0x20>

00001b86 <vfprintf>:
    1b86:	ab e0       	ldi	r26, 0x0B	; 11
    1b88:	b0 e0       	ldi	r27, 0x00	; 0
    1b8a:	e9 ec       	ldi	r30, 0xC9	; 201
    1b8c:	fd e0       	ldi	r31, 0x0D	; 13
    1b8e:	0c 94 54 10 	jmp	0x20a8	; 0x20a8 <__prologue_saves__>
    1b92:	6c 01       	movw	r12, r24
    1b94:	7b 01       	movw	r14, r22
    1b96:	8a 01       	movw	r16, r20
    1b98:	fc 01       	movw	r30, r24
    1b9a:	17 82       	std	Z+7, r1	; 0x07
    1b9c:	16 82       	std	Z+6, r1	; 0x06
    1b9e:	83 81       	ldd	r24, Z+3	; 0x03
    1ba0:	81 ff       	sbrs	r24, 1
    1ba2:	cc c1       	rjmp	.+920    	; 0x1f3c <vfprintf+0x3b6>
    1ba4:	ce 01       	movw	r24, r28
    1ba6:	01 96       	adiw	r24, 0x01	; 1
    1ba8:	3c 01       	movw	r6, r24
    1baa:	f6 01       	movw	r30, r12
    1bac:	93 81       	ldd	r25, Z+3	; 0x03
    1bae:	f7 01       	movw	r30, r14
    1bb0:	93 fd       	sbrc	r25, 3
    1bb2:	85 91       	lpm	r24, Z+
    1bb4:	93 ff       	sbrs	r25, 3
    1bb6:	81 91       	ld	r24, Z+
    1bb8:	7f 01       	movw	r14, r30
    1bba:	88 23       	and	r24, r24
    1bbc:	09 f4       	brne	.+2      	; 0x1bc0 <vfprintf+0x3a>
    1bbe:	ba c1       	rjmp	.+884    	; 0x1f34 <vfprintf+0x3ae>
    1bc0:	85 32       	cpi	r24, 0x25	; 37
    1bc2:	39 f4       	brne	.+14     	; 0x1bd2 <vfprintf+0x4c>
    1bc4:	93 fd       	sbrc	r25, 3
    1bc6:	85 91       	lpm	r24, Z+
    1bc8:	93 ff       	sbrs	r25, 3
    1bca:	81 91       	ld	r24, Z+
    1bcc:	7f 01       	movw	r14, r30
    1bce:	85 32       	cpi	r24, 0x25	; 37
    1bd0:	29 f4       	brne	.+10     	; 0x1bdc <vfprintf+0x56>
    1bd2:	b6 01       	movw	r22, r12
    1bd4:	90 e0       	ldi	r25, 0x00	; 0
    1bd6:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <fputc>
    1bda:	e7 cf       	rjmp	.-50     	; 0x1baa <vfprintf+0x24>
    1bdc:	91 2c       	mov	r9, r1
    1bde:	21 2c       	mov	r2, r1
    1be0:	31 2c       	mov	r3, r1
    1be2:	ff e1       	ldi	r31, 0x1F	; 31
    1be4:	f3 15       	cp	r31, r3
    1be6:	d8 f0       	brcs	.+54     	; 0x1c1e <vfprintf+0x98>
    1be8:	8b 32       	cpi	r24, 0x2B	; 43
    1bea:	79 f0       	breq	.+30     	; 0x1c0a <vfprintf+0x84>
    1bec:	38 f4       	brcc	.+14     	; 0x1bfc <vfprintf+0x76>
    1bee:	80 32       	cpi	r24, 0x20	; 32
    1bf0:	79 f0       	breq	.+30     	; 0x1c10 <vfprintf+0x8a>
    1bf2:	83 32       	cpi	r24, 0x23	; 35
    1bf4:	a1 f4       	brne	.+40     	; 0x1c1e <vfprintf+0x98>
    1bf6:	23 2d       	mov	r18, r3
    1bf8:	20 61       	ori	r18, 0x10	; 16
    1bfa:	1d c0       	rjmp	.+58     	; 0x1c36 <vfprintf+0xb0>
    1bfc:	8d 32       	cpi	r24, 0x2D	; 45
    1bfe:	61 f0       	breq	.+24     	; 0x1c18 <vfprintf+0x92>
    1c00:	80 33       	cpi	r24, 0x30	; 48
    1c02:	69 f4       	brne	.+26     	; 0x1c1e <vfprintf+0x98>
    1c04:	23 2d       	mov	r18, r3
    1c06:	21 60       	ori	r18, 0x01	; 1
    1c08:	16 c0       	rjmp	.+44     	; 0x1c36 <vfprintf+0xb0>
    1c0a:	83 2d       	mov	r24, r3
    1c0c:	82 60       	ori	r24, 0x02	; 2
    1c0e:	38 2e       	mov	r3, r24
    1c10:	e3 2d       	mov	r30, r3
    1c12:	e4 60       	ori	r30, 0x04	; 4
    1c14:	3e 2e       	mov	r3, r30
    1c16:	2a c0       	rjmp	.+84     	; 0x1c6c <vfprintf+0xe6>
    1c18:	f3 2d       	mov	r31, r3
    1c1a:	f8 60       	ori	r31, 0x08	; 8
    1c1c:	1d c0       	rjmp	.+58     	; 0x1c58 <vfprintf+0xd2>
    1c1e:	37 fc       	sbrc	r3, 7
    1c20:	2d c0       	rjmp	.+90     	; 0x1c7c <vfprintf+0xf6>
    1c22:	20 ed       	ldi	r18, 0xD0	; 208
    1c24:	28 0f       	add	r18, r24
    1c26:	2a 30       	cpi	r18, 0x0A	; 10
    1c28:	40 f0       	brcs	.+16     	; 0x1c3a <vfprintf+0xb4>
    1c2a:	8e 32       	cpi	r24, 0x2E	; 46
    1c2c:	b9 f4       	brne	.+46     	; 0x1c5c <vfprintf+0xd6>
    1c2e:	36 fc       	sbrc	r3, 6
    1c30:	81 c1       	rjmp	.+770    	; 0x1f34 <vfprintf+0x3ae>
    1c32:	23 2d       	mov	r18, r3
    1c34:	20 64       	ori	r18, 0x40	; 64
    1c36:	32 2e       	mov	r3, r18
    1c38:	19 c0       	rjmp	.+50     	; 0x1c6c <vfprintf+0xe6>
    1c3a:	36 fe       	sbrs	r3, 6
    1c3c:	06 c0       	rjmp	.+12     	; 0x1c4a <vfprintf+0xc4>
    1c3e:	8a e0       	ldi	r24, 0x0A	; 10
    1c40:	98 9e       	mul	r9, r24
    1c42:	20 0d       	add	r18, r0
    1c44:	11 24       	eor	r1, r1
    1c46:	92 2e       	mov	r9, r18
    1c48:	11 c0       	rjmp	.+34     	; 0x1c6c <vfprintf+0xe6>
    1c4a:	ea e0       	ldi	r30, 0x0A	; 10
    1c4c:	2e 9e       	mul	r2, r30
    1c4e:	20 0d       	add	r18, r0
    1c50:	11 24       	eor	r1, r1
    1c52:	22 2e       	mov	r2, r18
    1c54:	f3 2d       	mov	r31, r3
    1c56:	f0 62       	ori	r31, 0x20	; 32
    1c58:	3f 2e       	mov	r3, r31
    1c5a:	08 c0       	rjmp	.+16     	; 0x1c6c <vfprintf+0xe6>
    1c5c:	8c 36       	cpi	r24, 0x6C	; 108
    1c5e:	21 f4       	brne	.+8      	; 0x1c68 <vfprintf+0xe2>
    1c60:	83 2d       	mov	r24, r3
    1c62:	80 68       	ori	r24, 0x80	; 128
    1c64:	38 2e       	mov	r3, r24
    1c66:	02 c0       	rjmp	.+4      	; 0x1c6c <vfprintf+0xe6>
    1c68:	88 36       	cpi	r24, 0x68	; 104
    1c6a:	41 f4       	brne	.+16     	; 0x1c7c <vfprintf+0xf6>
    1c6c:	f7 01       	movw	r30, r14
    1c6e:	93 fd       	sbrc	r25, 3
    1c70:	85 91       	lpm	r24, Z+
    1c72:	93 ff       	sbrs	r25, 3
    1c74:	81 91       	ld	r24, Z+
    1c76:	7f 01       	movw	r14, r30
    1c78:	81 11       	cpse	r24, r1
    1c7a:	b3 cf       	rjmp	.-154    	; 0x1be2 <vfprintf+0x5c>
    1c7c:	98 2f       	mov	r25, r24
    1c7e:	9f 7d       	andi	r25, 0xDF	; 223
    1c80:	95 54       	subi	r25, 0x45	; 69
    1c82:	93 30       	cpi	r25, 0x03	; 3
    1c84:	28 f4       	brcc	.+10     	; 0x1c90 <vfprintf+0x10a>
    1c86:	0c 5f       	subi	r16, 0xFC	; 252
    1c88:	1f 4f       	sbci	r17, 0xFF	; 255
    1c8a:	9f e3       	ldi	r25, 0x3F	; 63
    1c8c:	99 83       	std	Y+1, r25	; 0x01
    1c8e:	0d c0       	rjmp	.+26     	; 0x1caa <vfprintf+0x124>
    1c90:	83 36       	cpi	r24, 0x63	; 99
    1c92:	31 f0       	breq	.+12     	; 0x1ca0 <vfprintf+0x11a>
    1c94:	83 37       	cpi	r24, 0x73	; 115
    1c96:	71 f0       	breq	.+28     	; 0x1cb4 <vfprintf+0x12e>
    1c98:	83 35       	cpi	r24, 0x53	; 83
    1c9a:	09 f0       	breq	.+2      	; 0x1c9e <vfprintf+0x118>
    1c9c:	59 c0       	rjmp	.+178    	; 0x1d50 <vfprintf+0x1ca>
    1c9e:	21 c0       	rjmp	.+66     	; 0x1ce2 <vfprintf+0x15c>
    1ca0:	f8 01       	movw	r30, r16
    1ca2:	80 81       	ld	r24, Z
    1ca4:	89 83       	std	Y+1, r24	; 0x01
    1ca6:	0e 5f       	subi	r16, 0xFE	; 254
    1ca8:	1f 4f       	sbci	r17, 0xFF	; 255
    1caa:	88 24       	eor	r8, r8
    1cac:	83 94       	inc	r8
    1cae:	91 2c       	mov	r9, r1
    1cb0:	53 01       	movw	r10, r6
    1cb2:	13 c0       	rjmp	.+38     	; 0x1cda <vfprintf+0x154>
    1cb4:	28 01       	movw	r4, r16
    1cb6:	f2 e0       	ldi	r31, 0x02	; 2
    1cb8:	4f 0e       	add	r4, r31
    1cba:	51 1c       	adc	r5, r1
    1cbc:	f8 01       	movw	r30, r16
    1cbe:	a0 80       	ld	r10, Z
    1cc0:	b1 80       	ldd	r11, Z+1	; 0x01
    1cc2:	36 fe       	sbrs	r3, 6
    1cc4:	03 c0       	rjmp	.+6      	; 0x1ccc <vfprintf+0x146>
    1cc6:	69 2d       	mov	r22, r9
    1cc8:	70 e0       	ldi	r23, 0x00	; 0
    1cca:	02 c0       	rjmp	.+4      	; 0x1cd0 <vfprintf+0x14a>
    1ccc:	6f ef       	ldi	r22, 0xFF	; 255
    1cce:	7f ef       	ldi	r23, 0xFF	; 255
    1cd0:	c5 01       	movw	r24, r10
    1cd2:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <strnlen>
    1cd6:	4c 01       	movw	r8, r24
    1cd8:	82 01       	movw	r16, r4
    1cda:	f3 2d       	mov	r31, r3
    1cdc:	ff 77       	andi	r31, 0x7F	; 127
    1cde:	3f 2e       	mov	r3, r31
    1ce0:	16 c0       	rjmp	.+44     	; 0x1d0e <vfprintf+0x188>
    1ce2:	28 01       	movw	r4, r16
    1ce4:	22 e0       	ldi	r18, 0x02	; 2
    1ce6:	42 0e       	add	r4, r18
    1ce8:	51 1c       	adc	r5, r1
    1cea:	f8 01       	movw	r30, r16
    1cec:	a0 80       	ld	r10, Z
    1cee:	b1 80       	ldd	r11, Z+1	; 0x01
    1cf0:	36 fe       	sbrs	r3, 6
    1cf2:	03 c0       	rjmp	.+6      	; 0x1cfa <vfprintf+0x174>
    1cf4:	69 2d       	mov	r22, r9
    1cf6:	70 e0       	ldi	r23, 0x00	; 0
    1cf8:	02 c0       	rjmp	.+4      	; 0x1cfe <vfprintf+0x178>
    1cfa:	6f ef       	ldi	r22, 0xFF	; 255
    1cfc:	7f ef       	ldi	r23, 0xFF	; 255
    1cfe:	c5 01       	movw	r24, r10
    1d00:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <strnlen_P>
    1d04:	4c 01       	movw	r8, r24
    1d06:	f3 2d       	mov	r31, r3
    1d08:	f0 68       	ori	r31, 0x80	; 128
    1d0a:	3f 2e       	mov	r3, r31
    1d0c:	82 01       	movw	r16, r4
    1d0e:	33 fc       	sbrc	r3, 3
    1d10:	1b c0       	rjmp	.+54     	; 0x1d48 <vfprintf+0x1c2>
    1d12:	82 2d       	mov	r24, r2
    1d14:	90 e0       	ldi	r25, 0x00	; 0
    1d16:	88 16       	cp	r8, r24
    1d18:	99 06       	cpc	r9, r25
    1d1a:	b0 f4       	brcc	.+44     	; 0x1d48 <vfprintf+0x1c2>
    1d1c:	b6 01       	movw	r22, r12
    1d1e:	80 e2       	ldi	r24, 0x20	; 32
    1d20:	90 e0       	ldi	r25, 0x00	; 0
    1d22:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <fputc>
    1d26:	2a 94       	dec	r2
    1d28:	f4 cf       	rjmp	.-24     	; 0x1d12 <vfprintf+0x18c>
    1d2a:	f5 01       	movw	r30, r10
    1d2c:	37 fc       	sbrc	r3, 7
    1d2e:	85 91       	lpm	r24, Z+
    1d30:	37 fe       	sbrs	r3, 7
    1d32:	81 91       	ld	r24, Z+
    1d34:	5f 01       	movw	r10, r30
    1d36:	b6 01       	movw	r22, r12
    1d38:	90 e0       	ldi	r25, 0x00	; 0
    1d3a:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <fputc>
    1d3e:	21 10       	cpse	r2, r1
    1d40:	2a 94       	dec	r2
    1d42:	21 e0       	ldi	r18, 0x01	; 1
    1d44:	82 1a       	sub	r8, r18
    1d46:	91 08       	sbc	r9, r1
    1d48:	81 14       	cp	r8, r1
    1d4a:	91 04       	cpc	r9, r1
    1d4c:	71 f7       	brne	.-36     	; 0x1d2a <vfprintf+0x1a4>
    1d4e:	e8 c0       	rjmp	.+464    	; 0x1f20 <vfprintf+0x39a>
    1d50:	84 36       	cpi	r24, 0x64	; 100
    1d52:	11 f0       	breq	.+4      	; 0x1d58 <vfprintf+0x1d2>
    1d54:	89 36       	cpi	r24, 0x69	; 105
    1d56:	41 f5       	brne	.+80     	; 0x1da8 <vfprintf+0x222>
    1d58:	f8 01       	movw	r30, r16
    1d5a:	37 fe       	sbrs	r3, 7
    1d5c:	07 c0       	rjmp	.+14     	; 0x1d6c <vfprintf+0x1e6>
    1d5e:	60 81       	ld	r22, Z
    1d60:	71 81       	ldd	r23, Z+1	; 0x01
    1d62:	82 81       	ldd	r24, Z+2	; 0x02
    1d64:	93 81       	ldd	r25, Z+3	; 0x03
    1d66:	0c 5f       	subi	r16, 0xFC	; 252
    1d68:	1f 4f       	sbci	r17, 0xFF	; 255
    1d6a:	08 c0       	rjmp	.+16     	; 0x1d7c <vfprintf+0x1f6>
    1d6c:	60 81       	ld	r22, Z
    1d6e:	71 81       	ldd	r23, Z+1	; 0x01
    1d70:	07 2e       	mov	r0, r23
    1d72:	00 0c       	add	r0, r0
    1d74:	88 0b       	sbc	r24, r24
    1d76:	99 0b       	sbc	r25, r25
    1d78:	0e 5f       	subi	r16, 0xFE	; 254
    1d7a:	1f 4f       	sbci	r17, 0xFF	; 255
    1d7c:	f3 2d       	mov	r31, r3
    1d7e:	ff 76       	andi	r31, 0x6F	; 111
    1d80:	3f 2e       	mov	r3, r31
    1d82:	97 ff       	sbrs	r25, 7
    1d84:	09 c0       	rjmp	.+18     	; 0x1d98 <vfprintf+0x212>
    1d86:	90 95       	com	r25
    1d88:	80 95       	com	r24
    1d8a:	70 95       	com	r23
    1d8c:	61 95       	neg	r22
    1d8e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d90:	8f 4f       	sbci	r24, 0xFF	; 255
    1d92:	9f 4f       	sbci	r25, 0xFF	; 255
    1d94:	f0 68       	ori	r31, 0x80	; 128
    1d96:	3f 2e       	mov	r3, r31
    1d98:	2a e0       	ldi	r18, 0x0A	; 10
    1d9a:	30 e0       	ldi	r19, 0x00	; 0
    1d9c:	a3 01       	movw	r20, r6
    1d9e:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__ultoa_invert>
    1da2:	88 2e       	mov	r8, r24
    1da4:	86 18       	sub	r8, r6
    1da6:	45 c0       	rjmp	.+138    	; 0x1e32 <vfprintf+0x2ac>
    1da8:	85 37       	cpi	r24, 0x75	; 117
    1daa:	31 f4       	brne	.+12     	; 0x1db8 <vfprintf+0x232>
    1dac:	23 2d       	mov	r18, r3
    1dae:	2f 7e       	andi	r18, 0xEF	; 239
    1db0:	b2 2e       	mov	r11, r18
    1db2:	2a e0       	ldi	r18, 0x0A	; 10
    1db4:	30 e0       	ldi	r19, 0x00	; 0
    1db6:	25 c0       	rjmp	.+74     	; 0x1e02 <vfprintf+0x27c>
    1db8:	93 2d       	mov	r25, r3
    1dba:	99 7f       	andi	r25, 0xF9	; 249
    1dbc:	b9 2e       	mov	r11, r25
    1dbe:	8f 36       	cpi	r24, 0x6F	; 111
    1dc0:	c1 f0       	breq	.+48     	; 0x1df2 <vfprintf+0x26c>
    1dc2:	18 f4       	brcc	.+6      	; 0x1dca <vfprintf+0x244>
    1dc4:	88 35       	cpi	r24, 0x58	; 88
    1dc6:	79 f0       	breq	.+30     	; 0x1de6 <vfprintf+0x260>
    1dc8:	b5 c0       	rjmp	.+362    	; 0x1f34 <vfprintf+0x3ae>
    1dca:	80 37       	cpi	r24, 0x70	; 112
    1dcc:	19 f0       	breq	.+6      	; 0x1dd4 <vfprintf+0x24e>
    1dce:	88 37       	cpi	r24, 0x78	; 120
    1dd0:	21 f0       	breq	.+8      	; 0x1dda <vfprintf+0x254>
    1dd2:	b0 c0       	rjmp	.+352    	; 0x1f34 <vfprintf+0x3ae>
    1dd4:	e9 2f       	mov	r30, r25
    1dd6:	e0 61       	ori	r30, 0x10	; 16
    1dd8:	be 2e       	mov	r11, r30
    1dda:	b4 fe       	sbrs	r11, 4
    1ddc:	0d c0       	rjmp	.+26     	; 0x1df8 <vfprintf+0x272>
    1dde:	fb 2d       	mov	r31, r11
    1de0:	f4 60       	ori	r31, 0x04	; 4
    1de2:	bf 2e       	mov	r11, r31
    1de4:	09 c0       	rjmp	.+18     	; 0x1df8 <vfprintf+0x272>
    1de6:	34 fe       	sbrs	r3, 4
    1de8:	0a c0       	rjmp	.+20     	; 0x1dfe <vfprintf+0x278>
    1dea:	29 2f       	mov	r18, r25
    1dec:	26 60       	ori	r18, 0x06	; 6
    1dee:	b2 2e       	mov	r11, r18
    1df0:	06 c0       	rjmp	.+12     	; 0x1dfe <vfprintf+0x278>
    1df2:	28 e0       	ldi	r18, 0x08	; 8
    1df4:	30 e0       	ldi	r19, 0x00	; 0
    1df6:	05 c0       	rjmp	.+10     	; 0x1e02 <vfprintf+0x27c>
    1df8:	20 e1       	ldi	r18, 0x10	; 16
    1dfa:	30 e0       	ldi	r19, 0x00	; 0
    1dfc:	02 c0       	rjmp	.+4      	; 0x1e02 <vfprintf+0x27c>
    1dfe:	20 e1       	ldi	r18, 0x10	; 16
    1e00:	32 e0       	ldi	r19, 0x02	; 2
    1e02:	f8 01       	movw	r30, r16
    1e04:	b7 fe       	sbrs	r11, 7
    1e06:	07 c0       	rjmp	.+14     	; 0x1e16 <vfprintf+0x290>
    1e08:	60 81       	ld	r22, Z
    1e0a:	71 81       	ldd	r23, Z+1	; 0x01
    1e0c:	82 81       	ldd	r24, Z+2	; 0x02
    1e0e:	93 81       	ldd	r25, Z+3	; 0x03
    1e10:	0c 5f       	subi	r16, 0xFC	; 252
    1e12:	1f 4f       	sbci	r17, 0xFF	; 255
    1e14:	06 c0       	rjmp	.+12     	; 0x1e22 <vfprintf+0x29c>
    1e16:	60 81       	ld	r22, Z
    1e18:	71 81       	ldd	r23, Z+1	; 0x01
    1e1a:	80 e0       	ldi	r24, 0x00	; 0
    1e1c:	90 e0       	ldi	r25, 0x00	; 0
    1e1e:	0e 5f       	subi	r16, 0xFE	; 254
    1e20:	1f 4f       	sbci	r17, 0xFF	; 255
    1e22:	a3 01       	movw	r20, r6
    1e24:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__ultoa_invert>
    1e28:	88 2e       	mov	r8, r24
    1e2a:	86 18       	sub	r8, r6
    1e2c:	fb 2d       	mov	r31, r11
    1e2e:	ff 77       	andi	r31, 0x7F	; 127
    1e30:	3f 2e       	mov	r3, r31
    1e32:	36 fe       	sbrs	r3, 6
    1e34:	0d c0       	rjmp	.+26     	; 0x1e50 <vfprintf+0x2ca>
    1e36:	23 2d       	mov	r18, r3
    1e38:	2e 7f       	andi	r18, 0xFE	; 254
    1e3a:	a2 2e       	mov	r10, r18
    1e3c:	89 14       	cp	r8, r9
    1e3e:	58 f4       	brcc	.+22     	; 0x1e56 <vfprintf+0x2d0>
    1e40:	34 fe       	sbrs	r3, 4
    1e42:	0b c0       	rjmp	.+22     	; 0x1e5a <vfprintf+0x2d4>
    1e44:	32 fc       	sbrc	r3, 2
    1e46:	09 c0       	rjmp	.+18     	; 0x1e5a <vfprintf+0x2d4>
    1e48:	83 2d       	mov	r24, r3
    1e4a:	8e 7e       	andi	r24, 0xEE	; 238
    1e4c:	a8 2e       	mov	r10, r24
    1e4e:	05 c0       	rjmp	.+10     	; 0x1e5a <vfprintf+0x2d4>
    1e50:	b8 2c       	mov	r11, r8
    1e52:	a3 2c       	mov	r10, r3
    1e54:	03 c0       	rjmp	.+6      	; 0x1e5c <vfprintf+0x2d6>
    1e56:	b8 2c       	mov	r11, r8
    1e58:	01 c0       	rjmp	.+2      	; 0x1e5c <vfprintf+0x2d6>
    1e5a:	b9 2c       	mov	r11, r9
    1e5c:	a4 fe       	sbrs	r10, 4
    1e5e:	0f c0       	rjmp	.+30     	; 0x1e7e <vfprintf+0x2f8>
    1e60:	fe 01       	movw	r30, r28
    1e62:	e8 0d       	add	r30, r8
    1e64:	f1 1d       	adc	r31, r1
    1e66:	80 81       	ld	r24, Z
    1e68:	80 33       	cpi	r24, 0x30	; 48
    1e6a:	21 f4       	brne	.+8      	; 0x1e74 <vfprintf+0x2ee>
    1e6c:	9a 2d       	mov	r25, r10
    1e6e:	99 7e       	andi	r25, 0xE9	; 233
    1e70:	a9 2e       	mov	r10, r25
    1e72:	09 c0       	rjmp	.+18     	; 0x1e86 <vfprintf+0x300>
    1e74:	a2 fe       	sbrs	r10, 2
    1e76:	06 c0       	rjmp	.+12     	; 0x1e84 <vfprintf+0x2fe>
    1e78:	b3 94       	inc	r11
    1e7a:	b3 94       	inc	r11
    1e7c:	04 c0       	rjmp	.+8      	; 0x1e86 <vfprintf+0x300>
    1e7e:	8a 2d       	mov	r24, r10
    1e80:	86 78       	andi	r24, 0x86	; 134
    1e82:	09 f0       	breq	.+2      	; 0x1e86 <vfprintf+0x300>
    1e84:	b3 94       	inc	r11
    1e86:	a3 fc       	sbrc	r10, 3
    1e88:	11 c0       	rjmp	.+34     	; 0x1eac <vfprintf+0x326>
    1e8a:	a0 fe       	sbrs	r10, 0
    1e8c:	06 c0       	rjmp	.+12     	; 0x1e9a <vfprintf+0x314>
    1e8e:	b2 14       	cp	r11, r2
    1e90:	88 f4       	brcc	.+34     	; 0x1eb4 <vfprintf+0x32e>
    1e92:	28 0c       	add	r2, r8
    1e94:	92 2c       	mov	r9, r2
    1e96:	9b 18       	sub	r9, r11
    1e98:	0e c0       	rjmp	.+28     	; 0x1eb6 <vfprintf+0x330>
    1e9a:	b2 14       	cp	r11, r2
    1e9c:	60 f4       	brcc	.+24     	; 0x1eb6 <vfprintf+0x330>
    1e9e:	b6 01       	movw	r22, r12
    1ea0:	80 e2       	ldi	r24, 0x20	; 32
    1ea2:	90 e0       	ldi	r25, 0x00	; 0
    1ea4:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <fputc>
    1ea8:	b3 94       	inc	r11
    1eaa:	f7 cf       	rjmp	.-18     	; 0x1e9a <vfprintf+0x314>
    1eac:	b2 14       	cp	r11, r2
    1eae:	18 f4       	brcc	.+6      	; 0x1eb6 <vfprintf+0x330>
    1eb0:	2b 18       	sub	r2, r11
    1eb2:	02 c0       	rjmp	.+4      	; 0x1eb8 <vfprintf+0x332>
    1eb4:	98 2c       	mov	r9, r8
    1eb6:	21 2c       	mov	r2, r1
    1eb8:	a4 fe       	sbrs	r10, 4
    1eba:	10 c0       	rjmp	.+32     	; 0x1edc <vfprintf+0x356>
    1ebc:	b6 01       	movw	r22, r12
    1ebe:	80 e3       	ldi	r24, 0x30	; 48
    1ec0:	90 e0       	ldi	r25, 0x00	; 0
    1ec2:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <fputc>
    1ec6:	a2 fe       	sbrs	r10, 2
    1ec8:	17 c0       	rjmp	.+46     	; 0x1ef8 <vfprintf+0x372>
    1eca:	a1 fc       	sbrc	r10, 1
    1ecc:	03 c0       	rjmp	.+6      	; 0x1ed4 <vfprintf+0x34e>
    1ece:	88 e7       	ldi	r24, 0x78	; 120
    1ed0:	90 e0       	ldi	r25, 0x00	; 0
    1ed2:	02 c0       	rjmp	.+4      	; 0x1ed8 <vfprintf+0x352>
    1ed4:	88 e5       	ldi	r24, 0x58	; 88
    1ed6:	90 e0       	ldi	r25, 0x00	; 0
    1ed8:	b6 01       	movw	r22, r12
    1eda:	0c c0       	rjmp	.+24     	; 0x1ef4 <vfprintf+0x36e>
    1edc:	8a 2d       	mov	r24, r10
    1ede:	86 78       	andi	r24, 0x86	; 134
    1ee0:	59 f0       	breq	.+22     	; 0x1ef8 <vfprintf+0x372>
    1ee2:	a1 fe       	sbrs	r10, 1
    1ee4:	02 c0       	rjmp	.+4      	; 0x1eea <vfprintf+0x364>
    1ee6:	8b e2       	ldi	r24, 0x2B	; 43
    1ee8:	01 c0       	rjmp	.+2      	; 0x1eec <vfprintf+0x366>
    1eea:	80 e2       	ldi	r24, 0x20	; 32
    1eec:	a7 fc       	sbrc	r10, 7
    1eee:	8d e2       	ldi	r24, 0x2D	; 45
    1ef0:	b6 01       	movw	r22, r12
    1ef2:	90 e0       	ldi	r25, 0x00	; 0
    1ef4:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <fputc>
    1ef8:	89 14       	cp	r8, r9
    1efa:	38 f4       	brcc	.+14     	; 0x1f0a <vfprintf+0x384>
    1efc:	b6 01       	movw	r22, r12
    1efe:	80 e3       	ldi	r24, 0x30	; 48
    1f00:	90 e0       	ldi	r25, 0x00	; 0
    1f02:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <fputc>
    1f06:	9a 94       	dec	r9
    1f08:	f7 cf       	rjmp	.-18     	; 0x1ef8 <vfprintf+0x372>
    1f0a:	8a 94       	dec	r8
    1f0c:	f3 01       	movw	r30, r6
    1f0e:	e8 0d       	add	r30, r8
    1f10:	f1 1d       	adc	r31, r1
    1f12:	80 81       	ld	r24, Z
    1f14:	b6 01       	movw	r22, r12
    1f16:	90 e0       	ldi	r25, 0x00	; 0
    1f18:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <fputc>
    1f1c:	81 10       	cpse	r8, r1
    1f1e:	f5 cf       	rjmp	.-22     	; 0x1f0a <vfprintf+0x384>
    1f20:	22 20       	and	r2, r2
    1f22:	09 f4       	brne	.+2      	; 0x1f26 <vfprintf+0x3a0>
    1f24:	42 ce       	rjmp	.-892    	; 0x1baa <vfprintf+0x24>
    1f26:	b6 01       	movw	r22, r12
    1f28:	80 e2       	ldi	r24, 0x20	; 32
    1f2a:	90 e0       	ldi	r25, 0x00	; 0
    1f2c:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <fputc>
    1f30:	2a 94       	dec	r2
    1f32:	f6 cf       	rjmp	.-20     	; 0x1f20 <vfprintf+0x39a>
    1f34:	f6 01       	movw	r30, r12
    1f36:	86 81       	ldd	r24, Z+6	; 0x06
    1f38:	97 81       	ldd	r25, Z+7	; 0x07
    1f3a:	02 c0       	rjmp	.+4      	; 0x1f40 <vfprintf+0x3ba>
    1f3c:	8f ef       	ldi	r24, 0xFF	; 255
    1f3e:	9f ef       	ldi	r25, 0xFF	; 255
    1f40:	2b 96       	adiw	r28, 0x0b	; 11
    1f42:	e2 e1       	ldi	r30, 0x12	; 18
    1f44:	0c 94 70 10 	jmp	0x20e0	; 0x20e0 <__epilogue_restores__>

00001f48 <strnlen_P>:
    1f48:	fc 01       	movw	r30, r24
    1f4a:	05 90       	lpm	r0, Z+
    1f4c:	61 50       	subi	r22, 0x01	; 1
    1f4e:	70 40       	sbci	r23, 0x00	; 0
    1f50:	01 10       	cpse	r0, r1
    1f52:	d8 f7       	brcc	.-10     	; 0x1f4a <strnlen_P+0x2>
    1f54:	80 95       	com	r24
    1f56:	90 95       	com	r25
    1f58:	8e 0f       	add	r24, r30
    1f5a:	9f 1f       	adc	r25, r31
    1f5c:	08 95       	ret

00001f5e <strnlen>:
    1f5e:	fc 01       	movw	r30, r24
    1f60:	61 50       	subi	r22, 0x01	; 1
    1f62:	70 40       	sbci	r23, 0x00	; 0
    1f64:	01 90       	ld	r0, Z+
    1f66:	01 10       	cpse	r0, r1
    1f68:	d8 f7       	brcc	.-10     	; 0x1f60 <strnlen+0x2>
    1f6a:	80 95       	com	r24
    1f6c:	90 95       	com	r25
    1f6e:	8e 0f       	add	r24, r30
    1f70:	9f 1f       	adc	r25, r31
    1f72:	08 95       	ret

00001f74 <fputc>:
    1f74:	0f 93       	push	r16
    1f76:	1f 93       	push	r17
    1f78:	cf 93       	push	r28
    1f7a:	df 93       	push	r29
    1f7c:	fb 01       	movw	r30, r22
    1f7e:	23 81       	ldd	r18, Z+3	; 0x03
    1f80:	21 fd       	sbrc	r18, 1
    1f82:	03 c0       	rjmp	.+6      	; 0x1f8a <fputc+0x16>
    1f84:	8f ef       	ldi	r24, 0xFF	; 255
    1f86:	9f ef       	ldi	r25, 0xFF	; 255
    1f88:	2c c0       	rjmp	.+88     	; 0x1fe2 <fputc+0x6e>
    1f8a:	22 ff       	sbrs	r18, 2
    1f8c:	16 c0       	rjmp	.+44     	; 0x1fba <fputc+0x46>
    1f8e:	46 81       	ldd	r20, Z+6	; 0x06
    1f90:	57 81       	ldd	r21, Z+7	; 0x07
    1f92:	24 81       	ldd	r18, Z+4	; 0x04
    1f94:	35 81       	ldd	r19, Z+5	; 0x05
    1f96:	42 17       	cp	r20, r18
    1f98:	53 07       	cpc	r21, r19
    1f9a:	44 f4       	brge	.+16     	; 0x1fac <fputc+0x38>
    1f9c:	a0 81       	ld	r26, Z
    1f9e:	b1 81       	ldd	r27, Z+1	; 0x01
    1fa0:	9d 01       	movw	r18, r26
    1fa2:	2f 5f       	subi	r18, 0xFF	; 255
    1fa4:	3f 4f       	sbci	r19, 0xFF	; 255
    1fa6:	31 83       	std	Z+1, r19	; 0x01
    1fa8:	20 83       	st	Z, r18
    1faa:	8c 93       	st	X, r24
    1fac:	26 81       	ldd	r18, Z+6	; 0x06
    1fae:	37 81       	ldd	r19, Z+7	; 0x07
    1fb0:	2f 5f       	subi	r18, 0xFF	; 255
    1fb2:	3f 4f       	sbci	r19, 0xFF	; 255
    1fb4:	37 83       	std	Z+7, r19	; 0x07
    1fb6:	26 83       	std	Z+6, r18	; 0x06
    1fb8:	14 c0       	rjmp	.+40     	; 0x1fe2 <fputc+0x6e>
    1fba:	8b 01       	movw	r16, r22
    1fbc:	ec 01       	movw	r28, r24
    1fbe:	fb 01       	movw	r30, r22
    1fc0:	00 84       	ldd	r0, Z+8	; 0x08
    1fc2:	f1 85       	ldd	r31, Z+9	; 0x09
    1fc4:	e0 2d       	mov	r30, r0
    1fc6:	09 95       	icall
    1fc8:	89 2b       	or	r24, r25
    1fca:	e1 f6       	brne	.-72     	; 0x1f84 <fputc+0x10>
    1fcc:	d8 01       	movw	r26, r16
    1fce:	16 96       	adiw	r26, 0x06	; 6
    1fd0:	8d 91       	ld	r24, X+
    1fd2:	9c 91       	ld	r25, X
    1fd4:	17 97       	sbiw	r26, 0x07	; 7
    1fd6:	01 96       	adiw	r24, 0x01	; 1
    1fd8:	17 96       	adiw	r26, 0x07	; 7
    1fda:	9c 93       	st	X, r25
    1fdc:	8e 93       	st	-X, r24
    1fde:	16 97       	sbiw	r26, 0x06	; 6
    1fe0:	ce 01       	movw	r24, r28
    1fe2:	df 91       	pop	r29
    1fe4:	cf 91       	pop	r28
    1fe6:	1f 91       	pop	r17
    1fe8:	0f 91       	pop	r16
    1fea:	08 95       	ret

00001fec <__ultoa_invert>:
    1fec:	fa 01       	movw	r30, r20
    1fee:	aa 27       	eor	r26, r26
    1ff0:	28 30       	cpi	r18, 0x08	; 8
    1ff2:	51 f1       	breq	.+84     	; 0x2048 <__ultoa_invert+0x5c>
    1ff4:	20 31       	cpi	r18, 0x10	; 16
    1ff6:	81 f1       	breq	.+96     	; 0x2058 <__ultoa_invert+0x6c>
    1ff8:	e8 94       	clt
    1ffa:	6f 93       	push	r22
    1ffc:	6e 7f       	andi	r22, 0xFE	; 254
    1ffe:	6e 5f       	subi	r22, 0xFE	; 254
    2000:	7f 4f       	sbci	r23, 0xFF	; 255
    2002:	8f 4f       	sbci	r24, 0xFF	; 255
    2004:	9f 4f       	sbci	r25, 0xFF	; 255
    2006:	af 4f       	sbci	r26, 0xFF	; 255
    2008:	b1 e0       	ldi	r27, 0x01	; 1
    200a:	3e d0       	rcall	.+124    	; 0x2088 <__ultoa_invert+0x9c>
    200c:	b4 e0       	ldi	r27, 0x04	; 4
    200e:	3c d0       	rcall	.+120    	; 0x2088 <__ultoa_invert+0x9c>
    2010:	67 0f       	add	r22, r23
    2012:	78 1f       	adc	r23, r24
    2014:	89 1f       	adc	r24, r25
    2016:	9a 1f       	adc	r25, r26
    2018:	a1 1d       	adc	r26, r1
    201a:	68 0f       	add	r22, r24
    201c:	79 1f       	adc	r23, r25
    201e:	8a 1f       	adc	r24, r26
    2020:	91 1d       	adc	r25, r1
    2022:	a1 1d       	adc	r26, r1
    2024:	6a 0f       	add	r22, r26
    2026:	71 1d       	adc	r23, r1
    2028:	81 1d       	adc	r24, r1
    202a:	91 1d       	adc	r25, r1
    202c:	a1 1d       	adc	r26, r1
    202e:	20 d0       	rcall	.+64     	; 0x2070 <__ultoa_invert+0x84>
    2030:	09 f4       	brne	.+2      	; 0x2034 <__ultoa_invert+0x48>
    2032:	68 94       	set
    2034:	3f 91       	pop	r19
    2036:	2a e0       	ldi	r18, 0x0A	; 10
    2038:	26 9f       	mul	r18, r22
    203a:	11 24       	eor	r1, r1
    203c:	30 19       	sub	r19, r0
    203e:	30 5d       	subi	r19, 0xD0	; 208
    2040:	31 93       	st	Z+, r19
    2042:	de f6       	brtc	.-74     	; 0x1ffa <__ultoa_invert+0xe>
    2044:	cf 01       	movw	r24, r30
    2046:	08 95       	ret
    2048:	46 2f       	mov	r20, r22
    204a:	47 70       	andi	r20, 0x07	; 7
    204c:	40 5d       	subi	r20, 0xD0	; 208
    204e:	41 93       	st	Z+, r20
    2050:	b3 e0       	ldi	r27, 0x03	; 3
    2052:	0f d0       	rcall	.+30     	; 0x2072 <__ultoa_invert+0x86>
    2054:	c9 f7       	brne	.-14     	; 0x2048 <__ultoa_invert+0x5c>
    2056:	f6 cf       	rjmp	.-20     	; 0x2044 <__ultoa_invert+0x58>
    2058:	46 2f       	mov	r20, r22
    205a:	4f 70       	andi	r20, 0x0F	; 15
    205c:	40 5d       	subi	r20, 0xD0	; 208
    205e:	4a 33       	cpi	r20, 0x3A	; 58
    2060:	18 f0       	brcs	.+6      	; 0x2068 <__ultoa_invert+0x7c>
    2062:	49 5d       	subi	r20, 0xD9	; 217
    2064:	31 fd       	sbrc	r19, 1
    2066:	40 52       	subi	r20, 0x20	; 32
    2068:	41 93       	st	Z+, r20
    206a:	02 d0       	rcall	.+4      	; 0x2070 <__ultoa_invert+0x84>
    206c:	a9 f7       	brne	.-22     	; 0x2058 <__ultoa_invert+0x6c>
    206e:	ea cf       	rjmp	.-44     	; 0x2044 <__ultoa_invert+0x58>
    2070:	b4 e0       	ldi	r27, 0x04	; 4
    2072:	a6 95       	lsr	r26
    2074:	97 95       	ror	r25
    2076:	87 95       	ror	r24
    2078:	77 95       	ror	r23
    207a:	67 95       	ror	r22
    207c:	ba 95       	dec	r27
    207e:	c9 f7       	brne	.-14     	; 0x2072 <__ultoa_invert+0x86>
    2080:	00 97       	sbiw	r24, 0x00	; 0
    2082:	61 05       	cpc	r22, r1
    2084:	71 05       	cpc	r23, r1
    2086:	08 95       	ret
    2088:	9b 01       	movw	r18, r22
    208a:	ac 01       	movw	r20, r24
    208c:	0a 2e       	mov	r0, r26
    208e:	06 94       	lsr	r0
    2090:	57 95       	ror	r21
    2092:	47 95       	ror	r20
    2094:	37 95       	ror	r19
    2096:	27 95       	ror	r18
    2098:	ba 95       	dec	r27
    209a:	c9 f7       	brne	.-14     	; 0x208e <__ultoa_invert+0xa2>
    209c:	62 0f       	add	r22, r18
    209e:	73 1f       	adc	r23, r19
    20a0:	84 1f       	adc	r24, r20
    20a2:	95 1f       	adc	r25, r21
    20a4:	a0 1d       	adc	r26, r0
    20a6:	08 95       	ret

000020a8 <__prologue_saves__>:
    20a8:	2f 92       	push	r2
    20aa:	3f 92       	push	r3
    20ac:	4f 92       	push	r4
    20ae:	5f 92       	push	r5
    20b0:	6f 92       	push	r6
    20b2:	7f 92       	push	r7
    20b4:	8f 92       	push	r8
    20b6:	9f 92       	push	r9
    20b8:	af 92       	push	r10
    20ba:	bf 92       	push	r11
    20bc:	cf 92       	push	r12
    20be:	df 92       	push	r13
    20c0:	ef 92       	push	r14
    20c2:	ff 92       	push	r15
    20c4:	0f 93       	push	r16
    20c6:	1f 93       	push	r17
    20c8:	cf 93       	push	r28
    20ca:	df 93       	push	r29
    20cc:	cd b7       	in	r28, 0x3d	; 61
    20ce:	de b7       	in	r29, 0x3e	; 62
    20d0:	ca 1b       	sub	r28, r26
    20d2:	db 0b       	sbc	r29, r27
    20d4:	0f b6       	in	r0, 0x3f	; 63
    20d6:	f8 94       	cli
    20d8:	de bf       	out	0x3e, r29	; 62
    20da:	0f be       	out	0x3f, r0	; 63
    20dc:	cd bf       	out	0x3d, r28	; 61
    20de:	09 94       	ijmp

000020e0 <__epilogue_restores__>:
    20e0:	2a 88       	ldd	r2, Y+18	; 0x12
    20e2:	39 88       	ldd	r3, Y+17	; 0x11
    20e4:	48 88       	ldd	r4, Y+16	; 0x10
    20e6:	5f 84       	ldd	r5, Y+15	; 0x0f
    20e8:	6e 84       	ldd	r6, Y+14	; 0x0e
    20ea:	7d 84       	ldd	r7, Y+13	; 0x0d
    20ec:	8c 84       	ldd	r8, Y+12	; 0x0c
    20ee:	9b 84       	ldd	r9, Y+11	; 0x0b
    20f0:	aa 84       	ldd	r10, Y+10	; 0x0a
    20f2:	b9 84       	ldd	r11, Y+9	; 0x09
    20f4:	c8 84       	ldd	r12, Y+8	; 0x08
    20f6:	df 80       	ldd	r13, Y+7	; 0x07
    20f8:	ee 80       	ldd	r14, Y+6	; 0x06
    20fa:	fd 80       	ldd	r15, Y+5	; 0x05
    20fc:	0c 81       	ldd	r16, Y+4	; 0x04
    20fe:	1b 81       	ldd	r17, Y+3	; 0x03
    2100:	aa 81       	ldd	r26, Y+2	; 0x02
    2102:	b9 81       	ldd	r27, Y+1	; 0x01
    2104:	ce 0f       	add	r28, r30
    2106:	d1 1d       	adc	r29, r1
    2108:	0f b6       	in	r0, 0x3f	; 63
    210a:	f8 94       	cli
    210c:	de bf       	out	0x3e, r29	; 62
    210e:	0f be       	out	0x3f, r0	; 63
    2110:	cd bf       	out	0x3d, r28	; 61
    2112:	ed 01       	movw	r28, r26
    2114:	08 95       	ret

00002116 <_exit>:
    2116:	f8 94       	cli

00002118 <__stop_program>:
    2118:	ff cf       	rjmp	.-2      	; 0x2118 <__stop_program>
